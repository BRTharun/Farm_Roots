// <auto-generated />
using System;
using Epm.FarmRoots.ProductCatalogue.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Epm.FarmRoots.ProductCatalogue.Infrastructure.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20240919050537_DB_Setup")]
    partial class DB_Setup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Fruits"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Vegetables"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Meat, Fish and Eggs"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Dairy Products"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Cool drinks and juices"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Condiments and Spices"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Baked Goods"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Grains"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryName = "Treats"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryName = "Snacks"
                        },
                        new
                        {
                            CategoryId = 11,
                            CategoryName = "Health and Wellness"
                        },
                        new
                        {
                            CategoryId = 12,
                            CategoryName = "Tea and coffee, more"
                        },
                        new
                        {
                            CategoryId = 13,
                            CategoryName = "Cleaning essentials"
                        },
                        new
                        {
                            CategoryId = 14,
                            CategoryName = "Body care"
                        },
                        new
                        {
                            CategoryId = 15,
                            CategoryName = "Other"
                        });
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Images", b =>
                {
                    b.Property<int>("ImagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImagesId"));

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ImagesId");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Inventory", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductMaxCartQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ProductMinCartQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ProductStockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Inventories", (string)null);
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Manufacturer", b =>
                {
                    b.Property<int>("ManufactureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufactureId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ManufactureDisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("ManufactureFeaturedStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ManufactureName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ManufactureId");

                    b.ToTable("Manufacturers", (string)null);

                    b.HasData(
                        new
                        {
                            ManufactureId = 1,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Dole Food Company"
                        },
                        new
                        {
                            ManufactureId = 2,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Driscoll’s"
                        },
                        new
                        {
                            ManufactureId = 3,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Chiquita Brands International"
                        },
                        new
                        {
                            ManufactureId = 4,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Green Giant"
                        },
                        new
                        {
                            ManufactureId = 5,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "The Little Potato Company"
                        },
                        new
                        {
                            ManufactureId = 6,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Tyson Foods"
                        },
                        new
                        {
                            ManufactureId = 7,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Danone"
                        },
                        new
                        {
                            ManufactureId = 8,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Coca-Cola"
                        },
                        new
                        {
                            ManufactureId = 9,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "PepsiCo"
                        },
                        new
                        {
                            ManufactureId = 10,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "General Mills"
                        },
                        new
                        {
                            ManufactureId = 11,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Lay's"
                        },
                        new
                        {
                            ManufactureId = 12,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Haldiram's"
                        },
                        new
                        {
                            ManufactureId = 13,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Dettol"
                        },
                        new
                        {
                            ManufactureId = 14,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Nestlé"
                        },
                        new
                        {
                            ManufactureId = 15,
                            IsActive = true,
                            ManufactureDisplayOrder = 0,
                            ManufactureFeaturedStatus = false,
                            ManufactureName = "Dove"
                        });
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceId"));

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsBuyButtonDisabled")
                        .HasColumnType("bit");

                    b.Property<decimal>("Mrp")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ProductCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("SpecialPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("SpecialPriceFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SpecialPriceToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PriceId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Price");
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CountryOfOrigin")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Not specified");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("ProductCondition")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("New");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProductTags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Simple Product");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory");

                    b.HasData(
                        new
                        {
                            SubCategoryId = 1,
                            CategoryId = 1,
                            SubCategoryName = "Citrus fruits"
                        },
                        new
                        {
                            SubCategoryId = 2,
                            CategoryId = 1,
                            SubCategoryName = "Berries"
                        },
                        new
                        {
                            SubCategoryId = 3,
                            CategoryId = 1,
                            SubCategoryName = "Fresh fruits"
                        },
                        new
                        {
                            SubCategoryId = 4,
                            CategoryId = 1,
                            SubCategoryName = "Tropical fruits"
                        },
                        new
                        {
                            SubCategoryId = 5,
                            CategoryId = 2,
                            SubCategoryName = "Leafy greens"
                        },
                        new
                        {
                            SubCategoryId = 6,
                            CategoryId = 2,
                            SubCategoryName = "Root vegetables"
                        },
                        new
                        {
                            SubCategoryId = 7,
                            CategoryId = 2,
                            SubCategoryName = "Fresh vegetables"
                        },
                        new
                        {
                            SubCategoryId = 8,
                            CategoryId = 3,
                            SubCategoryName = "Chicken"
                        },
                        new
                        {
                            SubCategoryId = 9,
                            CategoryId = 3,
                            SubCategoryName = "Fish and sea-food"
                        },
                        new
                        {
                            SubCategoryId = 10,
                            CategoryId = 3,
                            SubCategoryName = "Mutton"
                        },
                        new
                        {
                            SubCategoryId = 11,
                            CategoryId = 3,
                            SubCategoryName = "Eggs"
                        },
                        new
                        {
                            SubCategoryId = 12,
                            CategoryId = 4,
                            SubCategoryName = "Milk"
                        },
                        new
                        {
                            SubCategoryId = 13,
                            CategoryId = 4,
                            SubCategoryName = "Cheese"
                        },
                        new
                        {
                            SubCategoryId = 14,
                            CategoryId = 4,
                            SubCategoryName = "Yogurt"
                        },
                        new
                        {
                            SubCategoryId = 15,
                            CategoryId = 4,
                            SubCategoryName = "Butter and Cream"
                        },
                        new
                        {
                            SubCategoryId = 16,
                            CategoryId = 5,
                            SubCategoryName = "Soft drinks"
                        },
                        new
                        {
                            SubCategoryId = 17,
                            CategoryId = 5,
                            SubCategoryName = "Fruit juices"
                        },
                        new
                        {
                            SubCategoryId = 18,
                            CategoryId = 5,
                            SubCategoryName = "Herbal drinks"
                        },
                        new
                        {
                            SubCategoryId = 19,
                            CategoryId = 6,
                            SubCategoryName = "Honey"
                        },
                        new
                        {
                            SubCategoryId = 20,
                            CategoryId = 6,
                            SubCategoryName = "Jams and preserves"
                        },
                        new
                        {
                            SubCategoryId = 21,
                            CategoryId = 6,
                            SubCategoryName = "Hot sauces"
                        },
                        new
                        {
                            SubCategoryId = 22,
                            CategoryId = 6,
                            SubCategoryName = "Herbs"
                        },
                        new
                        {
                            SubCategoryId = 23,
                            CategoryId = 6,
                            SubCategoryName = "Spices"
                        },
                        new
                        {
                            SubCategoryId = 24,
                            CategoryId = 7,
                            SubCategoryName = "Bread"
                        },
                        new
                        {
                            SubCategoryId = 25,
                            CategoryId = 7,
                            SubCategoryName = "Pastries"
                        },
                        new
                        {
                            SubCategoryId = 26,
                            CategoryId = 7,
                            SubCategoryName = "Cakes"
                        },
                        new
                        {
                            SubCategoryId = 27,
                            CategoryId = 7,
                            SubCategoryName = "Cookies"
                        },
                        new
                        {
                            SubCategoryId = 28,
                            CategoryId = 7,
                            SubCategoryName = "Pies"
                        },
                        new
                        {
                            SubCategoryId = 29,
                            CategoryId = 8,
                            SubCategoryName = "Wheat products"
                        },
                        new
                        {
                            SubCategoryId = 30,
                            CategoryId = 8,
                            SubCategoryName = "Rice"
                        },
                        new
                        {
                            SubCategoryId = 31,
                            CategoryId = 8,
                            SubCategoryName = "Corn"
                        },
                        new
                        {
                            SubCategoryId = 32,
                            CategoryId = 8,
                            SubCategoryName = "Oats"
                        },
                        new
                        {
                            SubCategoryId = 33,
                            CategoryId = 9,
                            SubCategoryName = "Chocolates"
                        },
                        new
                        {
                            SubCategoryId = 34,
                            CategoryId = 9,
                            SubCategoryName = "Sweets"
                        },
                        new
                        {
                            SubCategoryId = 35,
                            CategoryId = 9,
                            SubCategoryName = "Protein bar"
                        },
                        new
                        {
                            SubCategoryId = 36,
                            CategoryId = 9,
                            SubCategoryName = "Premium chocolates"
                        },
                        new
                        {
                            SubCategoryId = 37,
                            CategoryId = 10,
                            SubCategoryName = "Chips"
                        },
                        new
                        {
                            SubCategoryId = 38,
                            CategoryId = 10,
                            SubCategoryName = "Namkeens"
                        },
                        new
                        {
                            SubCategoryId = 39,
                            CategoryId = 10,
                            SubCategoryName = "Dry Fruits and Nuts"
                        },
                        new
                        {
                            SubCategoryId = 40,
                            CategoryId = 11,
                            SubCategoryName = "Handwash"
                        },
                        new
                        {
                            SubCategoryId = 41,
                            CategoryId = 11,
                            SubCategoryName = "Cold and Cough"
                        },
                        new
                        {
                            SubCategoryId = 42,
                            CategoryId = 11,
                            SubCategoryName = "Pain relief"
                        },
                        new
                        {
                            SubCategoryId = 43,
                            CategoryId = 12,
                            SubCategoryName = "Tea"
                        },
                        new
                        {
                            SubCategoryId = 44,
                            CategoryId = 12,
                            SubCategoryName = "Coffee"
                        },
                        new
                        {
                            SubCategoryId = 45,
                            CategoryId = 12,
                            SubCategoryName = "Milk Drink mixes"
                        },
                        new
                        {
                            SubCategoryId = 46,
                            CategoryId = 12,
                            SubCategoryName = "Green and Herbal Tea"
                        },
                        new
                        {
                            SubCategoryId = 47,
                            CategoryId = 13,
                            SubCategoryName = "Cleaning tools"
                        },
                        new
                        {
                            SubCategoryId = 48,
                            CategoryId = 13,
                            SubCategoryName = "Detergents"
                        },
                        new
                        {
                            SubCategoryId = 49,
                            CategoryId = 13,
                            SubCategoryName = "Liquids"
                        },
                        new
                        {
                            SubCategoryId = 50,
                            CategoryId = 14,
                            SubCategoryName = "Skin care"
                        },
                        new
                        {
                            SubCategoryId = 51,
                            CategoryId = 14,
                            SubCategoryName = "Hair care"
                        },
                        new
                        {
                            SubCategoryId = 52,
                            CategoryId = 14,
                            SubCategoryName = "Soaps"
                        });
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Images", b =>
                {
                    b.HasOne("Epm.FarmRoots.ProductCatalogue.Core.Entities.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Inventory", b =>
                {
                    b.HasOne("Epm.FarmRoots.ProductCatalogue.Core.Entities.Product", null)
                        .WithOne("Inventory")
                        .HasForeignKey("Epm.FarmRoots.ProductCatalogue.Core.Entities.Inventory", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Price", b =>
                {
                    b.HasOne("Epm.FarmRoots.ProductCatalogue.Core.Entities.Product", null)
                        .WithOne("Price")
                        .HasForeignKey("Epm.FarmRoots.ProductCatalogue.Core.Entities.Price", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Product", b =>
                {
                    b.HasOne("Epm.FarmRoots.ProductCatalogue.Core.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Epm.FarmRoots.ProductCatalogue.Core.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.SubCategory", b =>
                {
                    b.HasOne("Epm.FarmRoots.ProductCatalogue.Core.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Epm.FarmRoots.ProductCatalogue.Core.Entities.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Inventory")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
