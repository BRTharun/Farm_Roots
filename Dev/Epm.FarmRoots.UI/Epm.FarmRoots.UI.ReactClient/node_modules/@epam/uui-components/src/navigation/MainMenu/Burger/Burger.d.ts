import * as React from 'react';
import { IHasCX, Icon, IHasRawProps, IHasForwardedRef } from '@epam/uui-core';
import { Ref } from 'react';
interface BurgerState {
    isOpen: boolean;
}
export interface BurgerProps extends IHasCX, IHasRawProps<React.HTMLAttributes<HTMLDivElement>>, IHasForwardedRef<HTMLDivElement> {
    burgerIcon?: Icon;
    crossIcon?: Icon;
    width?: number;
    burgerContentCx?: string;
    renderBurgerContent?: (props: {
        onClose: () => void;
    }) => React.ReactNode;
    bg?: string;
    logoUrl?: string;
}
export declare const uuiBurger: {
    readonly menu: "uui-burger-menu";
    readonly menuOpen: "uui-burger-menu-open";
    readonly button: "uui-burger-button";
    readonly logoContainer: "uui-burger-logo-container";
    readonly logo: "uui-burger-logo";
    readonly overlay: "uui-burger-overlay";
    readonly items: "uui-burger-items";
    readonly overlayVisible: "uui-burger-overlay-visible";
    readonly itemsVisible: "uui-burger-items-visible";
};
export declare class Burger extends React.Component<BurgerProps, BurgerState> {
    constructor(props: BurgerProps);
    state: BurgerState;
    private toggleBurgerMenu;
    componentWillUnmount(): void;
    renderContent: (ref: Ref<HTMLElement>) => JSX.Element;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=Burger.d.ts.map