import * as React from 'react';
import { IHasCX, IHasRawProps } from '@epam/uui-core';
interface SliderHandleProps extends IHasCX, IHasRawProps<React.HTMLAttributes<HTMLDivElement>> {
    onUpdate(mouseX: number): void;
    onKeyDownUpdate?(type: 'right' | 'left'): void;
    handleActiveState?(isActive: boolean): void;
    tooltipContent: number;
    isActive: boolean;
    offset: number;
    showTooltip?: boolean;
}
interface SliderHandleState {
    isHovered: boolean;
}
export declare class SliderHandle extends React.Component<SliderHandleProps, SliderHandleState> {
    state: {
        isHovered: boolean;
    };
    sliderHandle: HTMLElement | null;
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleMouseMove: (e: React.MouseEvent<HTMLDivElement>) => void;
    handleMouseDown: (e: React.MouseEvent<HTMLDivElement>) => void;
    handleMouseUp: () => void;
    handleMouseEnter: () => void;
    handleMouseLeave: () => void;
    handleFocus: (e: React.FocusEvent<HTMLDivElement>) => void;
    handleBlur: (e: React.FocusEvent<HTMLDivElement>) => void;
    handleKeyDown: (e: React.KeyboardEvent<HTMLDivElement>) => void;
    renderTooltip(): JSX.Element;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=SliderHandle.d.ts.map