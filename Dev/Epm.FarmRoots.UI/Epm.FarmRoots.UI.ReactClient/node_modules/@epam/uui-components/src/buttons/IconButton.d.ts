import * as React from 'react';
import { IDropdownToggler, Icon } from '@epam/uui-core';
import { ClickableComponentProps } from '../widgets';
export type IconButtonProps = ClickableComponentProps & Omit<IDropdownToggler, 'isDropdown'> & {
    /** Icon can be a React element (usually an SVG element) */
    icon?: Icon;
    /** Icon for drop-down toggler */
    dropdownIcon?: Icon;
    /**
     * Defines component size.
     */
    size?: number | string;
    /**
     * Pass true to enable dropdown icon.
     */
    showDropdownIcon?: boolean;
};
export declare const IconButton: React.ForwardRefExoticComponent<import("@epam/uui-core").IClickable & import("@epam/uui-core").IAnalyticableClick & import("@epam/uui-core").IHasTabIndex & import("@epam/uui-core").IDisableable & import("@epam/uui-core").IHasCX & import("@epam/uui-core").ICanRedirect & import("@epam/uui-core").IHasRawProps<import("src/widgets/Clickable").ClickableRawProps> & Omit<IDropdownToggler, "isDropdown"> & {
    /** Icon can be a React element (usually an SVG element) */
    icon?: Icon;
    /** Icon for drop-down toggler */
    dropdownIcon?: Icon;
    /**
     * Defines component size.
     */
    size?: number | string;
    /**
     * Pass true to enable dropdown icon.
     */
    showDropdownIcon?: boolean;
} & React.RefAttributes<HTMLAnchorElement | HTMLButtonElement>>;
//# sourceMappingURL=IconButton.d.ts.map