import { DataRowProps } from '@epam/uui-core';
import { UsePickerListProps } from './types';
export declare function usePickerList<TItem, TId, TProps>(props: UsePickerListProps<TItem, TId, TProps>): {
    context: import("@epam/uui-core").CommonContexts<any, any>;
    dataSourceState: import("@epam/uui-core").DataSourceState<Record<string, any>, any>;
    getName: (i: void | (TItem & {
        name?: string;
    })) => string;
    getEntityName: (countSelected?: number) => string;
    appendLastSelected: (ids: TId[]) => void;
    getSelectedIdsArray: (selected: TId | TId[] | null | undefined) => TId[];
    view: import("@epam/uui-core").IDataSourceView<TItem, TId, any>;
    onlySelectedView: import("@epam/uui-core").IDataSourceView<TItem, TId, any>;
    buildRowsList: () => DataRowProps<TItem, TId>[];
    getMaxDefaultItems: () => number;
    getModalTogglerCaption: (totalCount: number, rowsCount: number) => string;
};
//# sourceMappingURL=usePickerList.d.ts.map