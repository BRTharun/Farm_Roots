import * as React from 'react';
import { DataSourceListProps, DataSourceState, IEditable, IHasRawProps } from '@epam/uui-core';
export interface PickerBodyBaseProps extends DataSourceListProps, IEditable<DataSourceState>, IHasRawProps<React.HTMLAttributes<HTMLDivElement>> {
    onKeyDown?(e: React.KeyboardEvent<HTMLElement>): void;
    renderNotFound?: () => React.ReactNode;
    rows: React.ReactNode[];
    scheduleUpdate?: () => void;
    search: IEditable<string>;
    showSearch?: boolean | 'auto';
    fixedBodyPosition?: boolean;
    searchDebounceDelay?: number;
}
export declare abstract class PickerBodyBase<TProps extends PickerBodyBaseProps> extends React.Component<TProps> {
    needFocusSearch: boolean;
    searchRef: React.RefObject<HTMLInputElement>;
    componentDidUpdate(prevProps: PickerBodyBaseProps): void;
    showSearch(): boolean;
    searchKeyDown: (e: React.KeyboardEvent<HTMLInputElement>) => void;
}
//# sourceMappingURL=PickerBodyBase.d.ts.map