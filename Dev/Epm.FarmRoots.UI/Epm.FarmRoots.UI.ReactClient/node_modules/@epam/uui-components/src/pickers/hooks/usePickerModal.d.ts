/// <reference types="react" />
import { DataSourceState, IModal, PickerFooterProps } from '@epam/uui-core';
import { UsePickerModalProps } from './types';
export declare function usePickerModal<TItem, TId>(props: UsePickerModalProps<TItem, TId>): {
    context: import("@epam/uui-core").CommonContexts<any, any>;
    selection: TItem | TId | TId[] | TItem[];
    dataSourceState: DataSourceState<Record<string, any>, any>;
    dataSourceStateLens: import("@epam/uui-core").ILens<DataSourceState<Record<string, any>, any>>;
    getName: (i: void | (TItem & {
        name?: string;
    })) => string;
    getEntityName: (countSelected?: number) => string;
    getListProps: () => import("@epam/uui-core").DataSourceListProps;
    view: import("@epam/uui-core").IDataSourceView<TItem, TId, any>;
    getRows: () => import("@epam/uui-core").DataRowProps<TItem, TId>[];
    getFooterProps: () => PickerFooterProps<TItem, TId> & Partial<IModal<any>>;
    getDataSourceState: () => DataSourceState<any, any>;
    clearSelection: () => void;
    isSingleSelect: () => boolean;
    handleDataSourceValueChange: (newDataSourceState: import("react").SetStateAction<DataSourceState<any, TId>>) => void;
};
//# sourceMappingURL=usePickerModal.d.ts.map