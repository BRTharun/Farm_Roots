import * as React from 'react';
import { UuiContexts, DropdownProps } from '@epam/uui-core';
interface DropdownState {
    opened: boolean;
    bodyBoundingRect: {
        y: number | null;
        x: number | null;
        width: number | null;
        height: number | null;
    };
}
export declare class Dropdown extends React.Component<DropdownProps, DropdownState> {
    private targetNode;
    private bodyNode;
    private lastOpenedMs;
    private togglerWidth;
    private togglerHeight;
    static contextType: React.Context<import("@epam/uui-core").CommonContexts<any, any>>;
    context: UuiContexts;
    private layer;
    private openDropdownTimerId;
    private closeDropdownTimerId;
    private observer;
    state: DropdownState;
    constructor(props: DropdownProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleOpenedChange: (opened: boolean) => void;
    isOpened: () => boolean;
    private handleTargetClick;
    private handleMouseEnter;
    private handleMouseLeave;
    isClientInArea(e: MouseEvent): boolean;
    setOpenDropdownTimer(): void;
    setCloseDropdownTimer(delay: number): void;
    clearOpenDropdownTimer(): void;
    clearCloseDropdownTimer(): void;
    private handleMouseMove;
    private onClose;
    private getTargetClickHandler;
    private getIsInteractedOutside;
    private setForwardedRef;
    private getPlacement;
    private renderTarget;
    private renderDropdownBody;
    private isInteractedOutside;
    private clickOutsideHandler;
    private updateTogglerSize;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=Dropdown.d.ts.map