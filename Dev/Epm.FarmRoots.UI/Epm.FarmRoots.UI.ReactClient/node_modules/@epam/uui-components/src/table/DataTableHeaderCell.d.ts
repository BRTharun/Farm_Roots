import * as React from 'react';
import { AcceptDropParams, DataColumnProps, DataTableHeaderCellProps, DndActorRenderParams } from '@epam/uui-core';
interface DataTableRenderProps {
    renderCellContent: (props: HeaderCellContentProps) => React.ReactElement<HeaderCellContentProps>;
}
export interface HeaderCellContentProps extends DndActorRenderParams {
    /** Called when resizing is started */
    onResizeStart: (e: React.MouseEvent) => void;
    /** Called when resizing is ended */
    onResizeEnd: (e: MouseEvent) => void;
    /** Called during the resizing process */
    onResize: (e: MouseEvent) => void;
    /** Called when sorting */
    toggleSort: (e: React.MouseEvent) => void;
    /** Indicates that resizing process is active */
    isResizing: boolean;
}
interface DataTableHeaderCellState {
    isResizing: boolean;
    resizeStartX?: number;
    originalWidth?: number;
}
export declare class DataTableHeaderCell<TItem, TId> extends React.Component<DataTableHeaderCellProps<TItem, TId> & DataTableRenderProps> {
    state: DataTableHeaderCellState;
    cellRef: React.RefObject<HTMLElement>;
    toggleSort: (e: React.MouseEvent) => void;
    canAcceptDrop(params: AcceptDropParams<DataColumnProps<TItem, TId>, DataColumnProps<TItem, TId>>): {
        left: boolean;
        right: boolean;
    };
    onResizeStart: (e: React.MouseEvent) => void;
    onResizeEnd: (e: MouseEvent) => void;
    onResize: (e: MouseEvent) => void;
    renderCellContent: (dndProps?: DndActorRenderParams) => React.ReactElement<HeaderCellContentProps, string | React.JSXElementConstructor<any>>;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=DataTableHeaderCell.d.ts.map