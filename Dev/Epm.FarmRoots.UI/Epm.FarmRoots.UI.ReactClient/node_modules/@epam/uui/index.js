'use strict';

var uuiComponents = require('@epam/uui-components');
var uuiCore = require('@epam/uui-core');
var React = require('react');
var cx = require('classnames');
var dayjs = require('dayjs');
var isSameOrBefore = require('dayjs/plugin/isSameOrBefore');
var isSameOrAfter = require('dayjs/plugin/isSameOrAfter');
var localeData = require('dayjs/plugin/localeData.js');
var isToday = require('dayjs/plugin/isToday.js');
var updateLocale = require('dayjs/plugin/updateLocale.js');
var objectSupport = require('dayjs/plugin/objectSupport');
var customParseFormat = require('dayjs/plugin/customParseFormat.js');
var isoWeek = require('dayjs/plugin/isoWeek.js');
var FocusLock = require('react-focus-lock');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
        Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
                var d = Object.getOwnPropertyDescriptor(e, k);
                Object.defineProperty(n, k, d.get ? d : {
                    enumerable: true,
                    get: function () { return e[k]; }
                });
            }
        });
    }
    n.default = e;
    return Object.freeze(n);
}

var uuiComponents__namespace = /*#__PURE__*/_interopNamespace(uuiComponents);
var React__namespace = /*#__PURE__*/_interopNamespace(React);
var cx__default = /*#__PURE__*/_interopDefault(cx);
var dayjs__default = /*#__PURE__*/_interopDefault(dayjs);
var isSameOrBefore__default = /*#__PURE__*/_interopDefault(isSameOrBefore);
var isSameOrAfter__default = /*#__PURE__*/_interopDefault(isSameOrAfter);
var localeData__default = /*#__PURE__*/_interopDefault(localeData);
var isToday__default = /*#__PURE__*/_interopDefault(isToday);
var updateLocale__default = /*#__PURE__*/_interopDefault(updateLocale);
var objectSupport__default = /*#__PURE__*/_interopDefault(objectSupport);
var customParseFormat__default = /*#__PURE__*/_interopDefault(customParseFormat);
var isoWeek__default = /*#__PURE__*/_interopDefault(isoWeek);
var FocusLock__default = /*#__PURE__*/_interopDefault(FocusLock);

var _path$Q;
function _extends$Q() { _extends$Q = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$Q.apply(this, arguments); }
var SvgNavigationCloseOutline = function SvgNavigationCloseOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$Q({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$Q || (_path$Q = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M6.4 19 5 17.6l5.6-5.6L5 6.4 6.4 5l5.6 5.6L17.6 5 19 6.4 13.4 12l5.6 5.6-1.4 1.4-5.6-5.6L6.4 19z"
  })));
};
var ForwardRef$Q = /*#__PURE__*/React.forwardRef(SvgNavigationCloseOutline);

var _path$P;
function _extends$P() { _extends$P = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$P.apply(this, arguments); }
var SvgNavigationChevronDownOutline = function SvgNavigationChevronDownOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$P({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$P || (_path$P = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M5.414 8.086 4 9.5l8 8 8-8-1.414-1.414L12 14.672 5.414 8.086z"
  })));
};
var ForwardRef$P = /*#__PURE__*/React.forwardRef(SvgNavigationChevronDownOutline);

var _path$O;
function _extends$O() { _extends$O = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$O.apply(this, arguments); }
var SvgNotificationDoneOutline = function SvgNotificationDoneOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$O({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$O || (_path$O = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m20.503 7.4-1.778-1.78-9.175 9.176-4.275-4.275L3.496 12.3l6.054 6.053L20.503 7.4z"
  })));
};
var ForwardRef$O = /*#__PURE__*/React.forwardRef(SvgNotificationDoneOutline);

var _path$N;
function _extends$N() { _extends$N = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$N.apply(this, arguments); }
var SvgActionSearchOutline = function SvgActionSearchOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$N({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$N || (_path$N = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M17.32 15.906 21.414 20 20 21.414l-4.094-4.094a8 8 0 1 1 1.414-1.414zM11 17a6 6 0 1 0 0-12 6 6 0 0 0 0 12z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$N = /*#__PURE__*/React.forwardRef(SvgActionSearchOutline);

var _path$M;
function _extends$M() { _extends$M = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$M.apply(this, arguments); }
var SvgActionCalendarFill = function SvgActionCalendarFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$M({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$M || (_path$M = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M5 22a1.93 1.93 0 0 1-1.413-.587A1.928 1.928 0 0 1 3 20V6c0-.55.196-1.02.587-1.412A1.927 1.927 0 0 1 5 4h1V2h2v2h8V2h2v2h1c.55 0 1.021.196 1.413.588.391.391.587.862.587 1.412v14a1.93 1.93 0 0 1-.587 1.413A1.928 1.928 0 0 1 19 22H5zm0-2h14V10H5v10z"
  })));
};
var ForwardRef$M = /*#__PURE__*/React.forwardRef(SvgActionCalendarFill);

var _path$L;
function _extends$L() { _extends$L = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$L.apply(this, arguments); }
var SvgNotificationInfoOutline = function SvgNotificationInfoOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$L({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$L || (_path$L = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M11 17h2v-6h-2v6zm1-8a.968.968 0 0 0 .713-.288A.967.967 0 0 0 13 8a.97.97 0 0 0-.287-.713A.97.97 0 0 0 12 7a.967.967 0 0 0-.712.287A.968.968 0 0 0 11 8c0 .283.096.52.288.712A.965.965 0 0 0 12 9zm0 13a9.733 9.733 0 0 1-3.9-.788 10.092 10.092 0 0 1-3.175-2.137c-.9-.9-1.612-1.958-2.137-3.175A9.733 9.733 0 0 1 2 12a9.74 9.74 0 0 1 .788-3.9 10.092 10.092 0 0 1 2.137-3.175c.9-.9 1.958-1.613 3.175-2.138A9.743 9.743 0 0 1 12 2a9.74 9.74 0 0 1 3.9.787 10.105 10.105 0 0 1 3.175 2.138c.9.9 1.612 1.958 2.137 3.175A9.733 9.733 0 0 1 22 12a9.733 9.733 0 0 1-.788 3.9 10.092 10.092 0 0 1-2.137 3.175c-.9.9-1.958 1.612-3.175 2.137A9.733 9.733 0 0 1 12 22zm0-2c2.233 0 4.125-.775 5.675-2.325C19.225 16.125 20 14.233 20 12c0-2.233-.775-4.125-2.325-5.675C16.125 4.775 14.233 4 12 4c-2.233 0-4.125.775-5.675 2.325C4.775 7.875 4 9.767 4 12c0 2.233.775 4.125 2.325 5.675C7.875 19.225 9.767 20 12 20z"
  })));
};
var ForwardRef$L = /*#__PURE__*/React.forwardRef(SvgNotificationInfoOutline);

var _path$K;
function _extends$K() { _extends$K = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$K.apply(this, arguments); }
var SvgFileFileWordFill = function SvgFileFileWordFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$K({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$K || (_path$K = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6zm1.2 18h-1.4L12 13.2 10.2 20H8.8l-2.2-9h1.5l1.4 6.8 1.8-6.8h1.3l1.8 6.8 1.4-6.8h1.5l-2.1 9zM13 9V3.5L18.5 9H13z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$K = /*#__PURE__*/React.forwardRef(SvgFileFileWordFill);

var _path$J;
function _extends$J() { _extends$J = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$J.apply(this, arguments); }
var SvgFileFileExcelFill = function SvgFileFileExcelFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$J({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$J || (_path$J = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6zm1.8 18H14l-2-3.4-2 3.4H8.2l2.9-4.5L8.2 11H10l2 3.4 2-3.4h1.8l-2.9 4.5 2.9 4.5zM13 9V3.5L18.5 9H13z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$J = /*#__PURE__*/React.forwardRef(SvgFileFileExcelFill);

var _path$I;
function _extends$I() { _extends$I = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$I.apply(this, arguments); }
var SvgFileFilePdfFill = function SvgFileFilePdfFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$I({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$I || (_path$I = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M13 9h5.5L13 3.5V9zM6 2h8l6 6v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2zm4.1 9.4c-.02.04-.29 1.76-2.1 4.69 0 0-3.5 1.82-2.67 3.18.67 1.08 2.32-.04 3.74-2.68 0 0 1.82-.64 4.24-.82 0 0 3.86 1.73 4.39-.11.52-1.86-3.06-1.44-3.7-1.25 0 0-2-1.35-2.5-3.21 0 0 1.14-3.95-.61-3.9-1.75.05-1.09 3.13-.79 4.1zm.81 1.04c.03.01.47 1.21 1.89 2.46 0 0-2.33.46-3.39.9 0 0 1-1.73 1.5-3.36zm3.93 2.72c.58-.16 2.33.15 2.26.48-.06.33-2.26-.48-2.26-.48zM7.77 17c-.53 1.24-1.44 2-1.67 2-.23 0 .7-1.6 1.67-2zm3.14-6.93c0-.07-.36-2.2 0-2.15.54.08 0 2.08 0 2.15z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$I = /*#__PURE__*/React.forwardRef(SvgFileFilePdfFill);

var _path$H;
function _extends$H() { _extends$H = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$H.apply(this, arguments); }
var SvgFileFileImageFill = function SvgFileFileImageFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$H({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$H || (_path$H = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M13 9h5.5L13 3.5V9zM6 2h8l6 6v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.11.89-2 2-2zm0 18h12v-8l-4 4-2-2-6 6zM8 9a2 2 0 1 0 0 4 2 2 0 0 0 0-4z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$H = /*#__PURE__*/React.forwardRef(SvgFileFileImageFill);

var _path$G, _path2$5;
function _extends$G() { _extends$G = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$G.apply(this, arguments); }
var SvgFileFileVideoFill = function SvgFileFileVideoFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$G({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$G || (_path$G = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M14.992 14 9.5 17.138v-6.276L14.992 14z"
  })), _path2$5 || (_path2$5 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M4 4c0-1.11.89-2 2-2h8l6 6v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4zm9-.5V9h5.5L13 3.5zM8.5 9.138v9.724L17.008 14 8.5 9.138z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$G = /*#__PURE__*/React.forwardRef(SvgFileFileVideoFill);

var _path$F;
function _extends$F() { _extends$F = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$F.apply(this, arguments); }
var SvgFileFileTableFill = function SvgFileFileTableFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$F({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$F || (_path$F = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6zm-4 17H7v-2h3v2zm0-3H7v-2h3v2zm0-3H7v-2h3v2zm4 6h-3v-2h3v2zm0-3h-3v-2h3v2zm0-3h-3v-2h3v2zm-1-4V3.5L18.5 9H13z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$F = /*#__PURE__*/React.forwardRef(SvgFileFileTableFill);

var _path$E;
function _extends$E() { _extends$E = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$E.apply(this, arguments); }
var SvgFileFileTextFill = function SvgFileFileTextFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$E({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$E || (_path$E = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M13 9h5.5L13 3.5V9zM6 2h8l6 6v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4c0-1.11.89-2 2-2zm9 16v-2H6v2h9zm3-4v-2H6v2h12z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$E = /*#__PURE__*/React.forwardRef(SvgFileFileTextFill);

var _path$D;
function _extends$D() { _extends$D = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$D.apply(this, arguments); }
var SvgFileFileEmlFill = function SvgFileFileEmlFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$D({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$D || (_path$D = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M4 4c0-1.11.89-2 2-2h8l6 6v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V4zm9-.5V9h5.5L13 3.5zM7 18v-4.732l5 3.333 5-3.333V18a1 1 0 0 1-1 1H8a1 1 0 0 1-1-1zm5-2.6 4.688-3.126A.997.997 0 0 0 16 12H8a.997.997 0 0 0-.688.274L12 15.399z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$D = /*#__PURE__*/React.forwardRef(SvgFileFileEmlFill);

var _path$C;
function _extends$C() { _extends$C = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$C.apply(this, arguments); }
var SvgFileFileFill = function SvgFileFileFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$C({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$C || (_path$C = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M6 22c-.55 0-1.02-.196-1.412-.587A1.927 1.927 0 0 1 4 20V4c0-.55.196-1.021.588-1.413A1.925 1.925 0 0 1 6 2h8l6 6v12a1.93 1.93 0 0 1-.587 1.413A1.928 1.928 0 0 1 18 22H6zm7-13h5l-5-5v5z"
  })));
};
var ForwardRef$C = /*#__PURE__*/React.forwardRef(SvgFileFileFill);

const fileIcons = {
    docIcon: ForwardRef$K,
    exelIcon: ForwardRef$J,
    pdfIcon: ForwardRef$I,
    imgIcon: ForwardRef$H,
    videoIcon: ForwardRef$G,
    tableIcon: ForwardRef$F,
    textIcon: ForwardRef$E,
    mailIcon: ForwardRef$D,
    fileIcon: ForwardRef$C,
};
const systemIcons = {
    clear: ForwardRef$Q,
    foldingArrow: ForwardRef$P,
    accept: ForwardRef$O,
    search: ForwardRef$N,
    calendar: ForwardRef$M,
    info: ForwardRef$L,
};

const settings = {
    sizes: {
        defaults: {
            button: '36',
            checkbox: '18',
            countIndicator: '24',
            dataPickerCell: '36',
            linkButton: '36',
            numericInput: '36',
            pickerToggler: '36',
            pickerItem: '36',
            radioInput: '18',
            switch: '18',
            tabButton: '48',
            tag: '36',
            text: '36',
            textInput: '36',
            rangeDatePicker: '36',
            datePicker: '36',
        },
        tag: {
            countIndicator: {
                18: '12',
                24: '18',
                30: '18',
                36: '18',
                42: '24',
                48: '24',
            },
        },
        mobileDropdownWrapper: {
            linkButton: '48',
        },
        pickerInput: {
            height: 300,
            width: 360,
            rowSize: {
                mobile: '48',
                modal: '36',
                padding: {
                    modal: '24',
                    default: '12',
                },
            },
        },
        pickerToggler: {
            tag: {
                24: '18',
                30: '18',
                36: '24',
                42: '30',
                48: '36',
                60: '42',
            },
        },
        dataPickerHeader: {
            text: {
                fontWeight: '600',
                size: '48',
            },
        },
        dataPickerBody: {
            flexCell: {
                default: '36',
            },
            searchInput: {
                mobile: '48',
            },
        },
        pickerItem: {
            avatar: {
                rest: {
                    24: '18',
                    30: '24',
                    36: '30',
                    42: '36',
                    48: '36', // no design
                },
                multiline: {
                    24: '30',
                    30: '30',
                    36: '36',
                    42: '42',
                    48: '48', // no design
                },
            },
        },
        dataPickerCell: {
            isBoldIcon: {
                24: true,
            },
            padding: {
                default: '12',
            },
            paddingLeft: {
                default: '24',
            },
            text: {
                24: '24',
                30: '30',
                36: '36',
                42: '42',
                48: '48',
                60: '48',
            },
        },
        dataPickerRow: {
            padding: {
                default: '24',
            },
            dataPickerCell: {
                default: '36',
            },
        },
        dataPickerFooter: {
            flexRowPadding: '12',
            switch: {
                24: '12',
                30: '18',
                36: '18',
                42: '24',
                48: '24',
            },
            linkButton: {
                24: '24',
                30: '30',
                36: '36',
                42: '42',
                48: '48',
                mobile: '48',
            },
        },
        rowAddons: {
            checkbox: {
                24: '12',
                30: '18',
                36: '18',
                42: '18',
                48: '18',
                60: '18',
            },
            indentUnit: {
                24: 6,
                30: 12,
                36: 12,
                42: 24,
                48: 24,
                60: 24,
                default: 24,
            },
            indentWidth: {
                24: 12,
                30: 18,
                36: 18,
                42: 24,
                48: 24,
                60: 24,
                default: 12,
            },
        },
        text: {
            18: { lineHeight: 12, fontSize: 10 },
            24: { lineHeight: 18, fontSize: 12 },
            30: { lineHeight: 18, fontSize: 14 },
            36: { lineHeight: 18, fontSize: 14 },
            42: { lineHeight: 24, fontSize: 16 },
            48: { lineHeight: 24, fontSize: 16 },
            60: { lineHeight: 30, fontSize: 24 },
        },
    },
};

var css$1s = {"uui-typography":"i-IFmK","hero-header":"O8bkF7","promo-header":"m0M1Vk","uui-critical":"_9ggEka","uui-info":"sKVmxV","uui-success":"VBJsqi","uui-warning":"NCqwe3","uui-highlight":"Pb5hEE","uui-typography-size-12":"_3jXbAV","uui-typography-size-14":"-JmXl1","uui-typography-size-16":"pN4mf0","root":"g--ZrC","uuiTypography":"i-IFmK","heroHeader":"O8bkF7","promoHeader":"m0M1Vk","uuiCritical":"_9ggEka","uuiInfo":"sKVmxV","uuiSuccess":"VBJsqi","uuiWarning":"NCqwe3","uuiHighlight":"Pb5hEE","uuiTypographySize12":"_3jXbAV","uuiTypographySize14":"-JmXl1","uuiTypographySize16":"pN4mf0"};

function applyButtonMods(mods) {
    return [
        css$1s.root,
        'uui-button',
        `uui-fill-${mods.fill || 'solid'}`,
        `uui-color-${mods.color || 'primary'}`,
        `uui-size-${mods.size || settings.sizes.defaults.button}`,
    ];
}
const Button = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.Button, applyButtonMods, () => {
    return {
        dropdownIcon: systemIcons.foldingArrow,
        clearIcon: systemIcons.clear,
    };
});

var css$1r = {"root":"ISW7A0"};

function applyIconButtonMods(props) {
    return ['uui-icon_button', `uui-color-${props.color || 'neutral'}`, css$1r.root];
}
const IconButton = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.IconButton, applyIconButtonMods, (props) => {
    const isDeprecated = ['info', 'success', 'error', 'warning'].includes(props.color);
    if (process.env.NODE_ENV !== "production" && isDeprecated) {
        uuiCore.devLogger.warnAboutDeprecatedPropValue({
            component: 'IconButton',
            propName: 'color',
            propValue: props.color,
            condition: () => isDeprecated,
        });
    }
    return {
        dropdownIcon: props.dropdownIcon || systemIcons.foldingArrow,
    };
});

function getIconClass(props) {
    const classList = {
        'has-left-icon': false,
        'has-right-icon': false,
    };
    if (props.onClear) {
        classList['has-right-icon'] = true;
    }
    if (props.isDropdown) {
        classList['has-right-icon'] = true;
    }
    if (props.icon) {
        classList[props.iconPosition !== 'right' ? 'has-left-icon' : 'has-right-icon'] = true;
    }
    return [classList['has-left-icon'] ? 'uui-has-left-icon' : 'uui-no-left-icon', classList['has-right-icon'] ? 'uui-has-right-icon' : 'uui-no-right-icon'];
}

var css$1q = {"uui-typography":"XJ7gJ-","hero-header":"zbQ1nz","promo-header":"_1EihEb","uui-critical":"EcFRor","uui-info":"s7Jubk","uui-success":"sk-00q","uui-warning":"fp-HeX","uui-highlight":"o4Wf7z","uui-typography-size-12":"Sq0Ftp","uui-typography-size-14":"Oq1WiL","uui-typography-size-16":"jMVg-v","root":"cUVgSy","uuiTypography":"XJ7gJ-","heroHeader":"zbQ1nz","promoHeader":"_1EihEb","uuiCritical":"EcFRor","uuiInfo":"s7Jubk","uuiSuccess":"sk-00q","uuiWarning":"fp-HeX","uuiHighlight":"o4Wf7z","uuiTypographySize12":"Sq0Ftp","uuiTypographySize14":"Oq1WiL","uuiTypographySize16":"jMVg-v"};

const DEFAULT_COLOR = 'primary';
const DEFAULT_WEIGHT = 'semibold';
const LinkButton = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    if (process.env.NODE_ENV !== "production" && props.color === 'contrast') {
        uuiCore.devLogger.warnAboutDeprecatedPropValue({
            component: 'LinkButton',
            propName: 'color',
            propValue: props.color,
            propValueUseInstead: 'white',
            condition: () => props.color === 'contrast',
        });
    }
    const rootStyles = [
        'uui-link_button',
        css$1q.root,
        `uui-size-${props.size || settings.sizes.defaults.linkButton}`,
        ...getIconClass(props),
        `uui-color-${props.color || DEFAULT_COLOR}`,
        props.cx,
    ];
    const captionStyles = cx__default.default(uuiCore.uuiElement.caption, props.underline && `uui-underline-${props.underline}`, `uui-link-button-weight-${props.weight || DEFAULT_WEIGHT}`);
    const DropdownIcon = props.dropdownIcon ? props.dropdownIcon : systemIcons.foldingArrow;
    return (React__namespace.createElement(uuiComponents.Clickable, Object.assign({}, props, { type: "button", cx: rootStyles, ref: ref }),
        props.icon && props.iconPosition !== 'right' && (React__namespace.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: !props.isDisabled ? props.onIconClick : undefined })),
        props.caption && (React__namespace.createElement("div", { className: captionStyles }, props.caption)),
        props.icon && props.iconPosition === 'right' && (React__namespace.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: !props.isDisabled ? props.onIconClick : undefined })),
        props.isDropdown && (React__namespace.createElement(uuiComponents.IconContainer, { icon: DropdownIcon, flipY: props.isOpen }))));
});

var css$1p = {"root":"JqPEIJ"};

const CountIndicator = /* @__PURE__ */React.forwardRef((props, ref) => {
    return (React__namespace.default.createElement("div", { ref: ref, className: cx__default.default([
            css$1p.root,
            'uui-count_indicator',
            `uui-size-${props.size || settings.sizes.defaults.countIndicator}`,
            props.color && `uui-color-${props.color}`,
            props.cx,
        ]) }, props.caption));
});

var css$1o = {"uui-typography":"zd93-g","hero-header":"qO3IeI","promo-header":"uqgeXf","uui-critical":"YouBXa","uui-info":"xp7qRc","uui-success":"fFZAUa","uui-warning":"_6ofHhE","uui-highlight":"_0VGY4m","uui-typography-size-12":"AgDevH","uui-typography-size-14":"roQGs6","uui-typography-size-16":"d9J-2n","root":"_9tZEfr","withNotify":"Levh-p","uuiTypography":"zd93-g","heroHeader":"qO3IeI","promoHeader":"uqgeXf","uuiCritical":"YouBXa","uuiInfo":"xp7qRc","uuiSuccess":"fFZAUa","uuiWarning":"_6ofHhE","uuiHighlight":"_0VGY4m","uuiTypographySize12":"AgDevH","uuiTypographySize14":"roQGs6","uuiTypographySize16":"d9J-2n"};

const TabButton = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => {
    const styles = [
        css$1o.root,
        'uui-tab-button',
        `uui-size-${props.size || settings.sizes.defaults.tabButton}`,
        props.withNotify && css$1o.withNotify,
        ...getIconClass(props),
        props.cx,
    ];
    const DropdownIcon = props.dropdownIcon ? props.dropdownIcon : systemIcons.foldingArrow;
    const ClearIcon = props.clearIcon ? props.clearIcon : systemIcons.clear;
    return (React__namespace.default.createElement(uuiComponents.Clickable, Object.assign({}, props, { rawProps: Object.assign({ role: 'tab', 'aria-haspopup': props.isDropdown, 'aria-expanded': props.isOpen }, props.rawProps), cx: styles, ref: ref }),
        props.icon && props.iconPosition !== 'right' && (React__namespace.default.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: !props.isDisabled ? props.onIconClick : undefined })),
        props.caption && (React__namespace.default.createElement("div", { className: uuiCore.cx(uuiCore.uuiElement.caption) }, props.caption)),
        props.count !== undefined && props.count !== null && (React__namespace.default.createElement(CountIndicator, { color: "neutral", size: "18", caption: props.count })),
        props.icon && props.iconPosition === 'right' && (React__namespace.default.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: !props.isDisabled ? props.onIconClick : undefined })),
        props.isDropdown && (React__namespace.default.createElement(uuiComponents.IconContainer, { icon: DropdownIcon, flipY: props.isOpen })),
        props.onClear && !props.isDisabled && (React__namespace.default.createElement(uuiComponents.IconContainer, { cx: uuiCore.uuiMarkers.clickable, icon: ClearIcon, onClick: props.onClear }))));
});

var css$1n = {"uui-typography":"PtxKow","hero-header":"bRC499","promo-header":"_64dKKb","uui-critical":"_8n54MU","uui-info":"-FWYmN","uui-success":"liAp2a","uui-warning":"dbi7cv","uui-highlight":"Z7Edla","uui-typography-size-12":"nkmOac","uui-typography-size-14":"p5LzVP","uui-typography-size-16":"J6fiQP","root":"_6Yhcgc","uuiTypography":"PtxKow","heroHeader":"bRC499","promoHeader":"_64dKKb","uuiCritical":"_8n54MU","uuiInfo":"-FWYmN","uuiSuccess":"liAp2a","uuiWarning":"dbi7cv","uuiHighlight":"Z7Edla","uuiTypographySize12":"nkmOac","uuiTypographySize14":"p5LzVP","uuiTypographySize16":"J6fiQP"};

function applyVerticalTabButtonMods() {
    return [css$1n.root];
}
const VerticalTabButton = /* @__PURE__ */uuiCore.withMods(TabButton, applyVerticalTabButtonMods);

var _path$B;
function _extends$B() { _extends$B = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$B.apply(this, arguments); }
var SvgContentMinusOutline = function SvgContentMinusOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$B({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$B || (_path$B = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M19 10.5H5v3h14v-3z"
  })));
};
var ForwardRef$B = /*#__PURE__*/React.forwardRef(SvgContentMinusOutline);

var css$1m = {"uui-typography":"MNRGxO","hero-header":"IQGIL6","promo-header":"oaMlaj","uui-critical":"Bw3rrQ","uui-info":"hK6DcC","uui-success":"wK2EiN","uui-warning":"yqESmd","uui-highlight":"KbGOQ8","uui-typography-size-12":"zAeltu","uui-typography-size-14":"jOEvil","uui-typography-size-16":"_7xRt-r","root":"_45rG2x","mode-cell":"_4MiOlQ","uuiTypography":"MNRGxO","heroHeader":"IQGIL6","promoHeader":"oaMlaj","uuiCritical":"Bw3rrQ","uuiInfo":"hK6DcC","uuiSuccess":"wK2EiN","uuiWarning":"yqESmd","uuiHighlight":"KbGOQ8","uuiTypographySize12":"zAeltu","uuiTypographySize14":"jOEvil","uuiTypographySize16":"_7xRt-r","modeCell":"_4MiOlQ"};

function applyCheckboxMods(mods) {
    return [
        css$1m.root,
        `uui-size-${mods.size || settings.sizes.defaults.checkbox}`,
        css$1m['mode-' + (mods.mode || 'form')],
        'uui-color-primary',
    ];
}
const applyUUICheckboxProps = (props) => {
    const defaultIcon = ForwardRef$O;
    const defaultIndeterminateIcon = ForwardRef$B;
    return {
        icon: props.icon ? props.icon : defaultIcon,
        indeterminateIcon: props.indeterminateIcon ? props.indeterminateIcon : defaultIndeterminateIcon,
    };
};
const Checkbox = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.Checkbox, applyCheckboxMods, applyUUICheckboxProps);

var _path$A;
function _extends$A() { _extends$A = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$A.apply(this, arguments); }
var SvgRadioDotFill = function SvgRadioDotFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$A({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$A || (_path$A = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M12 19a7 7 0 1 0 0-14 7 7 0 0 0 0 14z"
  })));
};
var ForwardRef$A = /*#__PURE__*/React.forwardRef(SvgRadioDotFill);

var css$1l = {"uui-typography":"DA64WJ","hero-header":"_1S3ehJ","promo-header":"-d3HrQ","uui-critical":"jJohpC","uui-info":"mVtbyc","uui-success":"tF0L2R","uui-warning":"VZCJu-","uui-highlight":"RmTsed","uui-typography-size-12":"PyeJQD","uui-typography-size-14":"K9BIe1","uui-typography-size-16":"yfPs-2","root":"D7j08-","uuiTypography":"DA64WJ","heroHeader":"_1S3ehJ","promoHeader":"-d3HrQ","uuiCritical":"jJohpC","uuiInfo":"mVtbyc","uuiSuccess":"tF0L2R","uuiWarning":"VZCJu-","uuiHighlight":"RmTsed","uuiTypographySize12":"PyeJQD","uuiTypographySize14":"K9BIe1","uuiTypographySize16":"yfPs-2"};

function applyRadioInputMods(mods) {
    return [
        css$1l.root,
        `uui-size-${mods.size || settings.sizes.defaults.radioInput}`,
        'uui-radio-input-container',
        'uui-color-primary',
    ];
}
const RadioInput = /* @__PURE__ */uuiCore.withMods(uuiComponents.RadioInput, applyRadioInputMods, (props) => ({ icon: props.icon ? props.icon : ForwardRef$A }));

var css$1k = {"root":"KXX0EY"};

function applySwitchMods(mods) {
    return [
        css$1k.root,
        `uui-size-${mods.size || settings.sizes.defaults.switch}`,
        'uui-color-primary',
    ];
}
const Switch = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.Switch, applySwitchMods);

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise, SuppressedError, Symbol */


function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
};

/**
 * Defines the different edit modes.
 */
var EditMode;
(function (EditMode) {
    /** Defines edit mode for form */
    EditMode["FORM"] = "form";
    /** Defines edit mode for cell in tables */
    EditMode["CELL"] = "cell";
    /** Defines edit mode for inline elements */
    EditMode["INLINE"] = "inline";
})(EditMode || (EditMode = {}));

var textInputCss = {"uui-typography":"FBIOs3","hero-header":"QNRK9P","promo-header":"jKd0CX","uui-critical":"T4k0YX","uui-info":"O9v5y5","uui-success":"UxdvuZ","uui-warning":"UF3mh9","uui-highlight":"Ecx673","uui-typography-size-12":"jW-CGt","uui-typography-size-14":"dsDZWF","uui-typography-size-16":"RMhwYI","root":"x8HHS-","mode-form":"aisphR","mode-inline":"_2nbTYc","mode-cell":"BdSuv3","uuiTypography":"FBIOs3","heroHeader":"QNRK9P","promoHeader":"jKd0CX","uuiCritical":"T4k0YX","uuiInfo":"O9v5y5","uuiSuccess":"UxdvuZ","uuiWarning":"UF3mh9","uuiHighlight":"Ecx673","uuiTypographySize12":"jW-CGt","uuiTypographySize14":"dsDZWF","uuiTypographySize16":"RMhwYI","modeForm":"aisphR","modeInline":"_2nbTYc","modeCell":"BdSuv3"};

const DEFAULT_MODE$3 = EditMode.FORM;
function applyTextInputMods(mods) {
    return [
        textInputCss.root,
        `uui-size-${mods.size || settings.sizes.defaults.textInput}`,
        textInputCss['mode-' + (mods.mode || DEFAULT_MODE$3)],
    ];
}
const TextInput = /* @__PURE__ */uuiCore.withMods(uuiComponents.TextInput, applyTextInputMods, () => ({
    acceptIcon: systemIcons.accept,
    cancelIcon: systemIcons.clear,
    dropdownIcon: systemIcons.foldingArrow,
}));
const SearchInput = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => {
    // analytics events are sending in IEditableDebouncer, so we need to avoid sending events in TextInput
    const textInputProps = __rest(props, []);
    delete textInputProps.getValueChangeAnalyticsEvent;
    return (React__namespace.default.createElement(uuiCore.IEditableDebouncer, Object.assign({}, props, { render: (iEditable) => {
            var _a;
            const defaultOnCancel = () => iEditable.onValueChange('');
            return (React__namespace.default.createElement(TextInput, Object.assign({ icon: systemIcons.search, onCancel: (_a = props.onCancel) !== null && _a !== void 0 ? _a : defaultOnCancel, type: "search", inputMode: "search", ref: ref }, textInputProps, iEditable)));
        } })));
});

var css$1j = {"root":"tx4iAR"};

const ControlGroup = /* @__PURE__ */uuiCore.withMods(uuiComponents.ControlGroup, () => [css$1j.root]);

function MultiSwitchComponent(props, ref) {
    return (React__namespace.createElement(ControlGroup, { ref: ref, rawProps: Object.assign(Object.assign({}, props.rawProps), { role: 'tablist', 'aria-invalid': props.isInvalid, 'aria-required': props.isRequired, 'aria-disabled': props.isDisabled, 'aria-readonly': props.isReadonly }) }, props.items.map((item, index) => (React__namespace.createElement(Button, Object.assign({}, props, item, { isDisabled: props.isDisabled, key: index + '-' + item.id, onClick: () => props.onValueChange(item.id), fill: props.value === item.id ? 'solid' : 'outline', color: props.color, size: props.size, rawProps: { 'aria-current': props.value === item.id, role: 'tab' } }))))));
}
const MultiSwitch = /* @__PURE__ */React__namespace.forwardRef(MultiSwitchComponent);

var css$1i = {"uui-typography":"wC3-EE","hero-header":"HmhfL0","promo-header":"XvpXCI","uui-critical":"edFf9X","uui-info":"_0idIbU","uui-success":"T-XBLy","uui-warning":"pEMZIF","uui-highlight":"w-r4og","uui-typography-size-12":"vJVAYH","uui-typography-size-14":"GFFJAt","uui-typography-size-16":"uEO7es","root":"bm5Sp2","mode-form":"l-aIZ3","mode-cell":"cQD8FG","uuiTypography":"wC3-EE","heroHeader":"HmhfL0","promoHeader":"XvpXCI","uuiCritical":"edFf9X","uuiInfo":"_0idIbU","uuiSuccess":"T-XBLy","uuiWarning":"pEMZIF","uuiHighlight":"w-r4og","uuiTypographySize12":"vJVAYH","uuiTypographySize14":"GFFJAt","uuiTypographySize16":"uEO7es","modeForm":"l-aIZ3","modeCell":"cQD8FG"};

const DEFAULT_MODE$2 = EditMode.FORM;
function applyNumericInputMods(mods) {
    return [
        textInputCss.root,
        css$1i.root,
        `uui-size-${mods.size || settings.sizes.defaults.numericInput}`,
        textInputCss['mode-' + (mods.mode || DEFAULT_MODE$2)],
    ];
}
const NumericInput = /* @__PURE__ */uuiCore.withMods(uuiComponents.NumericInput, applyNumericInputMods, (props) => {
    var _a, _b;
    return {
        upIcon: systemIcons.foldingArrow,
        downIcon: systemIcons.foldingArrow,
        align: (_a = props.align) !== null && _a !== void 0 ? _a : (props.mode === 'cell' ? 'right' : 'left'),
        disableArrows: (_b = props.disableArrows) !== null && _b !== void 0 ? _b : props.mode === 'cell',
    };
});

var css$1h = {"uui-typography":"Py9zLY","hero-header":"L0QzVL","promo-header":"_4-xU-M","uui-critical":"rExUOB","uui-info":"iNptas","uui-success":"zEJD-4","uui-warning":"PRTuCY","uui-highlight":"sNiJS-","uui-typography-size-12":"_1JhA9t","uui-typography-size-14":"HwTZ9I","uui-typography-size-16":"_19tc14","root":"_1ZyaLc","mode-form":"gYcxst","mode-cell":"Kg3DUx","mode-inline":"sRZs6b","size-24":"iJrln1","size-30":"HAk3gg","size-36":"cELDQC","size-42":"VW45sL","size-48":"J3K-ck","uuiTypography":"Py9zLY","heroHeader":"L0QzVL","promoHeader":"_4-xU-M","uuiCritical":"rExUOB","uuiInfo":"iNptas","uuiSuccess":"zEJD-4","uuiWarning":"PRTuCY","uuiHighlight":"sNiJS-","uuiTypographySize12":"_1JhA9t","uuiTypographySize14":"HwTZ9I","uuiTypographySize16":"_19tc14","modeForm":"gYcxst","modeCell":"Kg3DUx","modeInline":"sRZs6b","size24":"iJrln1","size30":"HAk3gg","size36":"cELDQC","size42":"VW45sL","size48":"J3K-ck"};

const DEFAULT_SIZE$3 = '36';
const DEFAULT_MODE$1 = EditMode.FORM;
function applyTextAreaMods(mods) {
    return [
        css$1h.root,
        css$1h['size-' + (mods.size || DEFAULT_SIZE$3)],
        css$1h['mode-' + (mods.mode || DEFAULT_MODE$1)],
    ];
}
const TextArea = /* @__PURE__ */uuiCore.withMods(uuiComponents.TextArea, applyTextAreaMods, (props) => {
    return {
        autoSize: props.mode === EditMode.CELL ? true : props.autoSize,
    };
});

/* eslint-disable no-restricted-imports */
const uuiDayjs = /* @__PURE__ */TREE_SHAKEABLE_INIT$1();
function TREE_SHAKEABLE_INIT$1() {
    let extended = false;
    return {
        get dayjs() {
            if (!extended) {
                dayjs__default.default.extend(isSameOrBefore__default.default);
                dayjs__default.default.extend(isSameOrAfter__default.default);
                //
                dayjs__default.default.extend(isToday__default.default);
                //
                dayjs__default.default.extend(localeData__default.default);
                dayjs__default.default.extend(updateLocale__default.default);
                dayjs__default.default.extend(objectSupport__default.default);
                dayjs__default.default.extend(customParseFormat__default.default);
                dayjs__default.default.extend(isoWeek__default.default);
                extended = true;
            }
            return dayjs__default.default;
        },
    };
}

var _path$z;
function _extends$z() { _extends$z = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$z.apply(this, arguments); }
var SvgNotificationCheckFill = function SvgNotificationCheckFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$z({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$z || (_path$z = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m10.6 16.6 7.05-7.05-1.4-1.4-5.65 5.65-2.85-2.85-1.4 1.4 4.25 4.25zM12 22a9.733 9.733 0 0 1-3.9-.788 10.092 10.092 0 0 1-3.175-2.137c-.9-.9-1.612-1.958-2.137-3.175A9.733 9.733 0 0 1 2 12a9.74 9.74 0 0 1 .788-3.9 10.092 10.092 0 0 1 2.137-3.175c.9-.9 1.958-1.613 3.175-2.138A9.743 9.743 0 0 1 12 2a9.74 9.74 0 0 1 3.9.787 10.105 10.105 0 0 1 3.175 2.138c.9.9 1.612 1.958 2.137 3.175A9.733 9.733 0 0 1 22 12a9.733 9.733 0 0 1-.788 3.9 10.092 10.092 0 0 1-2.137 3.175c-.9.9-1.958 1.612-3.175 2.137A9.733 9.733 0 0 1 12 22z"
  })));
};
var ForwardRef$z = /*#__PURE__*/React.forwardRef(SvgNotificationCheckFill);

var _path$y;
function _extends$y() { _extends$y = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$y.apply(this, arguments); }
var SvgNotificationWarningFill = function SvgNotificationWarningFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$y({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$y || (_path$y = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M1 21 12 2l11 19H1zm11-3a.968.968 0 0 0 .713-.288A.967.967 0 0 0 13 17a.967.967 0 0 0-.287-.712A.968.968 0 0 0 12 16a.965.965 0 0 0-.712.288A.965.965 0 0 0 11 17c0 .283.096.52.288.712A.965.965 0 0 0 12 18zm-1-3h2v-5h-2v5z"
  })));
};
var ForwardRef$y = /*#__PURE__*/React.forwardRef(SvgNotificationWarningFill);

var _path$x;
function _extends$x() { _extends$x = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$x.apply(this, arguments); }
var SvgNotificationErrorFill = function SvgNotificationErrorFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$x({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$x || (_path$x = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M12 17a.968.968 0 0 0 .713-.288A.967.967 0 0 0 13 16a.97.97 0 0 0-.287-.713A.97.97 0 0 0 12 15a.967.967 0 0 0-.712.287A.968.968 0 0 0 11 16c0 .283.096.52.288.712A.965.965 0 0 0 12 17zm-1-4h2V7h-2v6zm1 9a9.733 9.733 0 0 1-3.9-.788 10.092 10.092 0 0 1-3.175-2.137c-.9-.9-1.612-1.958-2.137-3.175A9.733 9.733 0 0 1 2 12a9.74 9.74 0 0 1 .788-3.9 10.092 10.092 0 0 1 2.137-3.175c.9-.9 1.958-1.613 3.175-2.138A9.743 9.743 0 0 1 12 2a9.74 9.74 0 0 1 3.9.787 10.105 10.105 0 0 1 3.175 2.138c.9.9 1.612 1.958 2.137 3.175A9.733 9.733 0 0 1 22 12a9.733 9.733 0 0 1-.788 3.9 10.092 10.092 0 0 1-2.137 3.175c-.9.9-1.958 1.612-3.175 2.137A9.733 9.733 0 0 1 12 22z"
  })));
};
var ForwardRef$x = /*#__PURE__*/React.forwardRef(SvgNotificationErrorFill);

var _path$w;
function _extends$w() { _extends$w = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$w.apply(this, arguments); }
var SvgNotificationInfoFill = function SvgNotificationInfoFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$w({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$w || (_path$w = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M11 17h2v-6h-2v6zm1-8a.968.968 0 0 0 .713-.288A.967.967 0 0 0 13 8a.97.97 0 0 0-.287-.713A.97.97 0 0 0 12 7a.967.967 0 0 0-.712.287A.968.968 0 0 0 11 8c0 .283.096.52.288.712A.965.965 0 0 0 12 9zm0 13a9.733 9.733 0 0 1-3.9-.788 10.092 10.092 0 0 1-3.175-2.137c-.9-.9-1.612-1.958-2.137-3.175A9.733 9.733 0 0 1 2 12a9.74 9.74 0 0 1 .788-3.9 10.092 10.092 0 0 1 2.137-3.175c.9-.9 1.958-1.613 3.175-2.138A9.743 9.743 0 0 1 12 2a9.74 9.74 0 0 1 3.9.787 10.105 10.105 0 0 1 3.175 2.138c.9.9 1.612 1.958 2.137 3.175A9.733 9.733 0 0 1 22 12a9.733 9.733 0 0 1-.788 3.9 10.092 10.092 0 0 1-2.137 3.175c-.9.9-1.958 1.612-3.175 2.137A9.733 9.733 0 0 1 12 22z"
  })));
};
var ForwardRef$w = /*#__PURE__*/React.forwardRef(SvgNotificationInfoFill);

var css$1g = {"uui-typography":"uMuySi","hero-header":"p9Rux3","promo-header":"E2bs4R","uui-critical":"zAgbCA","uui-info":"JakQHU","uui-success":"Lao8kF","uui-warning":"vVSUja","uui-highlight":"B67UZy","uui-typography-size-12":"RPrNK0","uui-typography-size-14":"HGSNSI","uui-typography-size-16":"_0gJyxR","root":"HE5yCW","icon-wrapper":"ZsdL8b","alert-wrapper":"GW1VTw","size-48":"UbMqW9","size-36":"qT7v-n","action-wrapper":"URlT9N","action-icon":"Q2aVZV","action-link":"AzPPkJ","close-icon":"sgFz7Z","main-path":"PzLYdX","content":"GdLmww","uuiTypography":"uMuySi","heroHeader":"p9Rux3","promoHeader":"E2bs4R","uuiCritical":"zAgbCA","uuiInfo":"JakQHU","uuiSuccess":"Lao8kF","uuiWarning":"vVSUja","uuiHighlight":"B67UZy","uuiTypographySize12":"RPrNK0","uuiTypographySize14":"HGSNSI","uuiTypographySize16":"_0gJyxR","iconWrapper":"ZsdL8b","alertWrapper":"GW1VTw","size48":"UbMqW9","size36":"qT7v-n","actionWrapper":"URlT9N","actionIcon":"Q2aVZV","actionLink":"AzPPkJ","closeIcon":"sgFz7Z","mainPath":"PzLYdX"};

const Alert = /* @__PURE__ */React__namespace.forwardRef((props, ref) => (React__namespace.createElement("div", Object.assign({ role: "alert", ref: ref, className: cx__default.default('uui-alert', css$1g.root, css$1g.alertWrapper, props.color && `uui-color-${props.color}`, props.cx, (props.size === '36' ? css$1g.size36 : css$1g.size48)) }, props.rawProps),
    React__namespace.createElement("div", { className: css$1g.mainPath },
        props.icon && (React__namespace.createElement("div", { className: css$1g.iconWrapper },
            React__namespace.createElement(uuiComponents.IconContainer, { icon: props.icon, cx: css$1g.actionIcon }))),
        React__namespace.createElement("div", { className: css$1g.content },
            props.children,
            props.actions && (React__namespace.createElement("div", { className: css$1g.actionWrapper }, props.actions.map((action) => (React__namespace.createElement(LinkButton, { caption: action.name, onClick: action.action, key: action.name, cx: css$1g.actionLink, size: (props === null || props === void 0 ? void 0 : props.size) === '36' ? '24' : '30' })))))),
        props.onClose && React__namespace.createElement(IconButton, { icon: ForwardRef$Q, color: "neutral", onClick: props.onClose, cx: css$1g.closeIcon })))));
const WarningAlert = /* @__PURE__ */React__namespace.forwardRef((props, ref) => React__namespace.createElement(Alert, Object.assign({ icon: ForwardRef$y, color: "warning", ref: ref }, props)));
const SuccessAlert = /* @__PURE__ */React__namespace.forwardRef((props, ref) => React__namespace.createElement(Alert, Object.assign({ icon: ForwardRef$z, color: "success", ref: ref }, props)));
const HintAlert = /* @__PURE__ */React__namespace.forwardRef((props, ref) => React__namespace.createElement(Alert, Object.assign({ icon: ForwardRef$w, color: "info", ref: ref }, props)));
const ErrorAlert = /* @__PURE__ */React__namespace.forwardRef((props, ref) => React__namespace.createElement(Alert, Object.assign({ icon: ForwardRef$x, color: "error", ref: ref }, props)));

const Dropdown = /* @__PURE__ */uuiCore.withMods(uuiComponents.Dropdown);

var css$1f = {"root":"_23nM9u"};

function applyDropdownContainerMods(mods) {
    return [
        css$1f.root,
        mods.vPadding && `vPadding-${mods.vPadding}`,
        mods.padding && `padding-${mods.padding}`,
    ];
}
const DropdownContainer = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.DropdownContainer, applyDropdownContainerMods);

var css$1e = {"uui-typography":"_5F-lmK","hero-header":"_18q11c","promo-header":"HBM3cr","uui-critical":"QptYyp","uui-info":"_6-irKK","uui-success":"JNYhaq","uui-warning":"pL4dYR","uui-highlight":"yudWAE","uui-typography-size-12":"e-Yfxa","uui-typography-size-14":"kPcTOC","uui-typography-size-16":"dxnMMe","submenu-root-item":"Wy5qT1","icon-after":"YiAPpK","icon-check":"gKYR-I","splitter-root":"Bf8HM4","splitter":"G8saKQ","header-root":"pAfm7C","item-root":"CS3xAm","icon":"HpSIcR","link":"MRtQ4J","indent":"MGgv-a","selected-mark":"-hAePa","uuiTypography":"_5F-lmK","heroHeader":"_18q11c","promoHeader":"HBM3cr","uuiCritical":"QptYyp","uuiInfo":"_6-irKK","uuiSuccess":"JNYhaq","uuiWarning":"pL4dYR","uuiHighlight":"yudWAE","uuiTypographySize12":"e-Yfxa","uuiTypographySize14":"kPcTOC","uuiTypographySize16":"dxnMMe","submenuRootItem":"Wy5qT1","iconAfter":"YiAPpK","iconCheck":"gKYR-I","splitterRoot":"Bf8HM4","headerRoot":"pAfm7C","itemRoot":"CS3xAm","selectedMark":"-hAePa"};

exports.IDropdownControlKeys = void 0;
(function (IDropdownControlKeys) {
    IDropdownControlKeys["ENTER"] = "Enter";
    IDropdownControlKeys["ESCAPE"] = "Escape";
    IDropdownControlKeys["LEFT_ARROW"] = "ArrowLeft";
    IDropdownControlKeys["RIGHT_ARROW"] = "ArrowRight";
    IDropdownControlKeys["UP_ARROW"] = "ArrowUp";
    IDropdownControlKeys["DOWN_ARROW"] = "ArrowDown";
})(exports.IDropdownControlKeys || (exports.IDropdownControlKeys = {}));
function DropdownMenuContainer(props) {
    const menuRef = React.useRef(null);
    const [currentlyFocused, setFocused] = React.useState(0);
    const menuItems = menuRef.current ? Array.from(menuRef.current.querySelectorAll(`[role="menuitem"]:not(.${uuiCore.uuiMod.disabled})`)) : [];
    const changeFocus = (nextFocusedIndex) => {
        if (menuItems.length > 0) {
            setFocused(nextFocusedIndex);
            menuItems[nextFocusedIndex].focus();
        }
    };
    const handleArrowKeys = (e) => {
        const lastMenuItemsIndex = menuItems.length - 1;
        if (e.key === exports.IDropdownControlKeys.UP_ARROW) {
            changeFocus(currentlyFocused > 0 ? currentlyFocused - 1 : lastMenuItemsIndex);
            e.preventDefault();
        }
        else if (e.key === exports.IDropdownControlKeys.DOWN_ARROW) {
            changeFocus(currentlyFocused < lastMenuItemsIndex ? currentlyFocused + 1 : 0);
            e.preventDefault();
        }
        else if (e.key === props.closeOnKey && props.onClose) {
            e.stopPropagation();
            props.onClose();
        }
    };
    return (React__namespace.default.createElement(DropdownContainer, Object.assign({}, props, { rawProps: Object.assign(Object.assign({}, props.rawProps), { role: 'menu' }), ref: menuRef, width: props.minWidth, lockProps: { onKeyDown: handleArrowKeys }, cx: [props.cx] })));
}
const DropdownMenuBody = /* @__PURE__ */uuiCore.withMods(DropdownMenuContainer, () => ['uui-dropdownMenu-body'], (props) => {
    return (Object.assign({ closeOnKey: exports.IDropdownControlKeys.ESCAPE }, props));
});
const DropdownMenuButton = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => {
    const context = React.useContext(uuiCore.UuiContext);
    const { icon, iconPosition, onIconClick, caption, isDisabled, isSelected, isActive, link, href, onClick, toggleDropdownOpening, isDropdown, isOpen, target, } = props;
    const handleClick = (event) => {
        if (isDisabled || !onClick)
            return;
        onClick(event);
        context.uuiAnalytics.sendEvent(props.clickAnalyticsEvent);
    };
    const handleOpenDropdown = (event) => {
        if (event.key === exports.IDropdownControlKeys.RIGHT_ARROW && isDropdown) {
            toggleDropdownOpening(true);
        }
        else if (event.key === exports.IDropdownControlKeys.ENTER && onClick) {
            onClick(event);
        }
    };
    const getMenuButtonContent = () => {
        const isIconBefore = Boolean(icon && iconPosition !== 'right');
        const isIconAfter = Boolean(icon && iconPosition === 'right');
        const iconElement = (React__namespace.default.createElement(IconButton, { icon: icon, color: isActive ? 'primary' : 'neutral', onClick: onIconClick, isDisabled: isDisabled, cx: uuiCore.cx(css$1e.icon, iconPosition === 'right' ? css$1e.iconAfter : css$1e.iconBefore) }));
        return (React__namespace.default.createElement(React__namespace.default.Fragment, null,
            isIconBefore && iconElement,
            React__namespace.default.createElement(uuiComponents.Text, { cx: props.indent && css$1e.indent }, caption),
            isIconAfter && (React__namespace.default.createElement(React__namespace.default.Fragment, null,
                React__namespace.default.createElement(uuiComponents.FlexSpacer, null),
                iconElement))));
    };
    const isAnchor = Boolean(link || href);
    const itemClassNames = uuiCore.cx(props.cx, css$1e.itemRoot, isDisabled && uuiCore.uuiMod.disabled, isActive && uuiCore.uuiMod.active, isOpen && uuiCore.uuiMod.opened);
    return isAnchor ? (React__namespace.default.createElement(uuiComponents.Anchor, { cx: uuiCore.cx(css$1e.link, itemClassNames), link: link, href: href, rawProps: { role: 'menuitem', tabIndex: isDisabled ? -1 : 0 }, onClick: handleClick, isLinkActive: isActive, isDisabled: isDisabled, target: target }, getMenuButtonContent())) : (React__namespace.default.createElement(uuiComponents.FlexRow, { rawProps: {
            tabIndex: isDisabled ? -1 : 0,
            role: 'menuitem',
            onKeyDown: isDisabled ? null : handleOpenDropdown,
        }, cx: itemClassNames, onClick: handleClick, ref: ref },
        getMenuButtonContent(),
        isSelected && (React__namespace.default.createElement(React__namespace.default.Fragment, null,
            React__namespace.default.createElement(uuiComponents.FlexSpacer, null),
            React__namespace.default.createElement(uuiComponents.IconContainer, { icon: systemIcons.accept, cx: css$1e.selectedMark })))));
});
function DropdownMenuSplitter(props) {
    return (React__namespace.default.createElement("div", { className: uuiCore.cx(props.cx, css$1e.splitterRoot) },
        React__namespace.default.createElement("hr", { className: css$1e.splitter })));
}
function DropdownMenuHeader(props) {
    return (React__namespace.default.createElement("div", { className: uuiCore.cx('uui-dropdown-menu-header', props.cx, css$1e.headerRoot) },
        React__namespace.default.createElement("span", { className: css$1e.header }, props.caption)));
}
function DropdownSubMenu(props) {
    const subMenuModifiers = [
        {
            name: 'offset',
            options: {
                offset: ({ placement }) => {
                    if (placement === 'right-start'
                        || placement === 'left-start') {
                        return [-6, 0];
                    }
                    else {
                        return [6, 0];
                    }
                },
            },
        },
    ];
    const dir = uuiComponents.useDocumentDir();
    return (React__namespace.default.createElement(uuiComponents.Dropdown, { openOnHover: props.openOnHover || true, closeOnMouseLeave: "boundary", openDelay: 400, closeDelay: 400, placement: dir === 'rtl' ? 'left-start' : 'right-start', modifiers: subMenuModifiers, renderBody: (dropdownProps) => !props.isDisabled && (React__namespace.default.createElement(DropdownMenuBody, Object.assign({ closeOnKey: exports.IDropdownControlKeys.LEFT_ARROW }, props, dropdownProps))), renderTarget: (_a) => {
            var { toggleDropdownOpening } = _a, targetProps = __rest(_a, ["toggleDropdownOpening"]);
            return (React__namespace.default.createElement(DropdownMenuButton, Object.assign({ cx: uuiCore.cx(css$1e.submenuRootItem), icon: systemIcons.foldingArrow, iconPosition: "right", isDropdown: true, toggleDropdownOpening: toggleDropdownOpening }, props, targetProps)));
        } }));
}
function DropdownMenuSwitchButton(props) {
    const context = React.useContext(uuiCore.UuiContext);
    const { icon, caption, isDisabled, isSelected, onValueChange, } = props;
    const onHandleValueChange = (value) => {
        if (isDisabled || !onValueChange)
            return;
        onValueChange(value);
        context.uuiAnalytics.sendEvent(props.clickAnalyticsEvent);
    };
    const handleKeySelect = (e) => {
        if (e.key === exports.IDropdownControlKeys.ENTER) {
            onHandleValueChange(!isSelected);
        }
    };
    return (React__namespace.default.createElement(uuiComponents.FlexRow, { cx: uuiCore.cx(props.cx, css$1e.itemRoot, isDisabled && uuiCore.uuiMod.disabled), onClick: () => onHandleValueChange(!isSelected), rawProps: { role: 'menuitem', onKeyDown: handleKeySelect, tabIndex: isDisabled ? -1 : 0 } },
        icon && React__namespace.default.createElement(uuiComponents.IconContainer, { icon: icon, cx: css$1e.iconBefore }),
        React__namespace.default.createElement(uuiComponents.Text, null, caption),
        React__namespace.default.createElement(uuiComponents.FlexSpacer, null),
        React__namespace.default.createElement(Switch, { value: isSelected, tabIndex: -1, onValueChange: onHandleValueChange })));
}

var css$1d = {"uui-typography":"djPOAK","hero-header":"_8D3uKM","promo-header":"DVpyWz","uui-critical":"HEtgyK","uui-info":"smLW6v","uui-success":"qw9QG2","uui-warning":"WDytUb","uui-highlight":"mamQiR","uui-typography-size-12":"_6yX-6v","uui-typography-size-14":"amErVU","uui-typography-size-16":"GikIJS","root":"cZNy1u","mode-block":"g5jEw0","mode-inline":"_7H7BfT","padding-0":"_11ALhf","padding-6":"iDAqlG","padding-12":"V8bJKE","padding-18":"sjI0y8","uuiTypography":"djPOAK","heroHeader":"_8D3uKM","promoHeader":"DVpyWz","uuiCritical":"HEtgyK","uuiInfo":"smLW6v","uuiSuccess":"qw9QG2","uuiWarning":"WDytUb","uuiHighlight":"mamQiR","uuiTypographySize12":"_6yX-6v","uuiTypographySize14":"amErVU","uuiTypographySize16":"GikIJS","modeBlock":"g5jEw0","modeInline":"_7H7BfT","padding0":"_11ALhf","padding6":"iDAqlG","padding12":"V8bJKE","padding18":"sjI0y8"};

const getMode = (mode) => {
    return mode || 'block';
};
function applyAccordionMods(mods) {
    return [
        css$1d.root,
        css$1d['mode-' + getMode(mods.mode)],
        mods.padding && css$1d['padding-' + mods.padding],
    ];
}
const Accordion = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.Accordion, applyAccordionMods, (mods) => ({
    dropdownIcon: mods.dropdownIcon !== null && systemIcons.foldingArrow,
}));

var css$1c = {"uui-typography":"jLD6V-","hero-header":"GYS-Pq","promo-header":"tqpZfm","uui-critical":"ZoYdBU","uui-info":"OiOhWX","uui-success":"f6xG6W","uui-warning":"hMSjGI","uui-highlight":"d2Zzv4","uui-typography-size-12":"yH8gP3","uui-typography-size-14":"E1sxas","uui-typography-size-16":"posgl5","root":"JbBbUh","border-top":"PCqd-l","border-bottom":"L0dl4G","top-shadow":"DFsYSH","size-24":"qbbx3-","size-30":"T0GJ7t","size-36":"YeDcLu","size-42":"lEACsu","size-48":"_09cDM9","padding-6":"CDpBMY","padding-12":"vy9nk1","padding-18":"hX-HrE","padding-24":"arBPmE","margin-24":"eenDGp","margin-12":"DNcLWM","vPadding-12":"h-9PCC","vPadding-18":"m3bJWJ","vPadding-24":"BZGtsq","vPadding-36":"sLVV7l","vPadding-48":"z9nTUh","spacing-6":"KWV7e0","spacing-12":"_1lNpCS","spacing-18":"_4YGcNL","uui-surface-main":"NpJi-w","uuiTypography":"jLD6V-","heroHeader":"GYS-Pq","promoHeader":"tqpZfm","uuiCritical":"ZoYdBU","uuiInfo":"OiOhWX","uuiSuccess":"f6xG6W","uuiWarning":"hMSjGI","uuiHighlight":"d2Zzv4","uuiTypographySize12":"yH8gP3","uuiTypographySize14":"E1sxas","uuiTypographySize16":"posgl5","borderTop":"PCqd-l","borderBottom":"L0dl4G","topShadow":"DFsYSH","size24":"qbbx3-","size30":"T0GJ7t","size36":"YeDcLu","size42":"lEACsu","size48":"_09cDM9","padding6":"CDpBMY","padding12":"vy9nk1","padding18":"hX-HrE","padding24":"arBPmE","margin24":"eenDGp","margin12":"DNcLWM","vPadding12":"h-9PCC","vPadding18":"m3bJWJ","vPadding24":"BZGtsq","vPadding36":"sLVV7l","vPadding48":"z9nTUh","spacing6":"KWV7e0","spacing12":"_1lNpCS","spacing18":"_4YGcNL","uuiSurfaceMain":"NpJi-w"};

const FlexCell = /* @__PURE__ */uuiCore.withMods(uuiComponents.FlexCell, () => [css$1c.flexCell]);

const FlexRow = /* @__PURE__ */uuiCore.withMods(uuiComponents.FlexRow, (props) => {
    if (process.env.NODE_ENV !== "production") {
        if (props.spacing) {
            uuiCore.devLogger.warn('[FlexRow]: The `spacing` property is deprecated and will be removed in future versions. Please use `columnGap` instead.');
        }
    }
    return [
        css$1c.root,
        props.size !== null && css$1c['size-' + (props.size || '36')],
        props.padding && css$1c['padding-' + props.padding],
        props.vPadding && css$1c['vPadding-' + props.vPadding],
        props.margin && css$1c['margin-' + props.margin],
        props.topShadow && css$1c.topShadow,
        props.borderBottom && css$1c.borderBottom,
        props.borderTop && css$1c.borderTop,
        props.spacing && css$1c['spacing-' + props.spacing],
        props.background && css$1c[`uui-${props.background}`],
    ];
});

var css$1b = {"root":"QZc-zH","margin-24":"_7nV4Tt","padding-12":"ofoNIF","padding-24":"_--BviS","shadow":"Tdw4W1","uui-surface-main":"u-3MMR","margin24":"_7nV4Tt","padding12":"ofoNIF","padding24":"_--BviS","uuiSurfaceMain":"u-3MMR"};

const Panel = /* @__PURE__ */uuiCore.withMods(uuiComponents.VPanel, (props) => [
    'uui-panel',
    css$1b.root,
    props.shadow && css$1b.shadow,
    props.margin && css$1b['margin-' + props.margin],
    props.background && css$1b[`uui-${props.background}`],
]);

var css$1a = {"root":"eXSoOQ"};

function applyTooltipMods(mods) {
    return [
        css$1a.root,
        `uui-color-${mods.color || 'inverted'}`,
    ];
}
const Tooltip = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.Tooltip, applyTooltipMods);

var css$19 = {"uui-typography":"VnWHk7","hero-header":"tQmx0S","promo-header":"_20Ml-O","uui-critical":"gMfRL8","uui-info":"Kqjbfu","uui-success":"C4u2J-","uui-warning":"wQXHIK","uui-highlight":"c6FV2z","uui-typography-size-12":"ced3MN","uui-typography-size-14":"SUFfV-","uui-typography-size-16":"HuhTk0","root":"ezc261","size-24":"khdpz-","size-30":"R1NQMH","size-36":"_7S-5MP","size-42":"_6-eOQB","size-48":"_2i8AeP","uuiTypography":"VnWHk7","heroHeader":"tQmx0S","promoHeader":"_20Ml-O","uuiCritical":"gMfRL8","uuiInfo":"Kqjbfu","uuiSuccess":"C4u2J-","uuiWarning":"wQXHIK","uuiHighlight":"c6FV2z","uuiTypographySize12":"ced3MN","uuiTypographySize14":"SUFfV-","uuiTypographySize16":"HuhTk0","size24":"khdpz-","size30":"R1NQMH","size36":"_7S-5MP","size42":"_6-eOQB","size48":"_2i8AeP"};

const DEFAULT_SIZE$2 = '36';
function applyLabeledInputMods(mods) {
    return [css$19.root, css$19['size-' + (mods.size || DEFAULT_SIZE$2)]];
}
const LabeledInput = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.LabeledInput, applyLabeledInputMods, (props) => ({
    Tooltip: props.Tooltip || Tooltip,
    infoIcon: props.infoIcon || (['24', '30'].includes(props.size) ? ForwardRef$w : ForwardRef$L),
}));

var css$18 = {"root":"_4kJ9na"};

function RadioGroup(props) {
    const direction = props.direction || 'vertical';
    const handleChange = (newVal) => {
        if (newVal !== props.value) {
            props.onValueChange(newVal);
        }
    };
    return (React__namespace.createElement("fieldset", Object.assign({ ref: props.forwardedRef, className: uuiCore.cx(css$18.root, uuiCore.directionMode[direction], props.cx), onFocus: props.onFocus, onBlur: props.onBlur }, props.rawProps), props.items.map((i) => {
        const restItemProps = __rest(i, ["id", "name", "renderName"]);
        return (React__namespace.createElement(RadioInput, Object.assign({ name: props.name, renderLabel: i.renderName ? i.renderName : () => i.name, value: props.value === i.id, onValueChange: () => handleChange(i.id), isDisabled: props.isDisabled || i.isDisabled, isReadonly: props.isReadonly, isInvalid: props.isInvalid, isRequired: props.isRequired, key: i.id.toString(), size: props.size || i.size }, restItemProps)));
    })));
}

var css$17 = {"root":"JD6LkI"};

function applyScrollBarsMods() {
    return [
        css$17.root, 'uui-scroll-bars', 'uui-shadow-top', 'uui-shadow-bottom',
    ];
}
const ScrollBars = /* @__PURE__ */uuiCore.withMods(uuiComponents.ScrollBars, applyScrollBarsMods);

var css$16 = {"scroll-container":"duBpXo","list-container":"o6xzks","scrollContainer":"duBpXo","listContainer":"o6xzks"};

var css$15 = {"root":"bGA-w0"};

const AvatarStack = /* @__PURE__ */uuiCore.withMods(uuiComponents.AvatarStack, () => [css$15.root]);

var css$14 = {"uui-typography":"_1nvzjp","hero-header":"rpf65J","promo-header":"kP-PCn","uui-critical":"JwDXgv","uui-info":"vSq2uO","uui-success":"ogBP6-","uui-warning":"-GhZDx","uui-highlight":"_0JMqBO","uui-typography-size-12":"QWzfcf","uui-typography-size-14":"itVebz","uui-typography-size-16":"ag8zVu","root":"dflBhM","size-18":"_-19Z76","size-24":"QGBkzH","size-30":"LGk4At","size-36":"LISMyk","size-42":"_-73hhs","size-48":"yTXlA3","uuiTypography":"_1nvzjp","heroHeader":"rpf65J","promoHeader":"kP-PCn","uuiCritical":"JwDXgv","uuiInfo":"vSq2uO","uuiSuccess":"ogBP6-","uuiWarning":"-GhZDx","uuiHighlight":"_0JMqBO","uuiTypographySize12":"QWzfcf","uuiTypographySize14":"itVebz","uuiTypographySize16":"ag8zVu","size18":"_-19Z76","size24":"QGBkzH","size30":"LGk4At","size36":"LISMyk","size42":"_-73hhs","size48":"yTXlA3"};

const DEFAULT_SIZE$1 = '36';
const DEFAULT_FILL = 'solid';
function applyBadgeMods(mods) {
    return [
        'uui-badge',
        css$14.root,
        css$14['size-' + (mods.size || DEFAULT_SIZE$1)],
        `uui-fill-${mods.fill || DEFAULT_FILL}`,
        `uui-color-${mods.color || 'info'}`,
    ];
}
const mapCountIndicatorSizes = {
    18: '12',
    24: '18',
    30: '18',
    36: '18',
    42: '24',
    48: '24',
};
const Badge = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => {
    const styles = [applyBadgeMods(props), props.cx];
    const DropdownIcon = props.dropdownIcon ? props.dropdownIcon : systemIcons.foldingArrow;
    return (React__namespace.default.createElement(uuiComponents.Clickable, Object.assign({}, props, { rawProps: Object.assign({ 'aria-haspopup': props.isDropdown, 'aria-expanded': props.isOpen }, props.rawProps), cx: styles, ref: ref }),
        (props.indicator && props.fill === 'outline') && (React__namespace.default.createElement("div", { className: "uui-indicator" })),
        props.icon && props.iconPosition !== 'right' && (React__namespace.default.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: !props.isDisabled ? props.onIconClick : undefined })),
        props.caption && (React__namespace.default.createElement("div", { className: uuiCore.uuiElement.caption }, props.caption)),
        props.count !== undefined && props.count !== null && (React__namespace.default.createElement(CountIndicator, { key: "count-indicator", color: null, size: mapCountIndicatorSizes[props.size || DEFAULT_SIZE$1], caption: props.count })),
        props.icon && props.iconPosition === 'right' && (React__namespace.default.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: !props.isDisabled ? props.onIconClick : undefined })),
        props.isDropdown && (React__namespace.default.createElement(uuiComponents.IconContainer, { icon: DropdownIcon, flipY: props.isOpen }))));
});

var css$13 = {"uui-typography":"XChVDQ","hero-header":"JUIs4-","promo-header":"oYvlSA","uui-critical":"jUbKyi","uui-info":"Hyz1PW","uui-success":"-SYvpU","uui-warning":"cZ7eVs","uui-highlight":"X48iJS","uui-typography-size-12":"VW2Y00","uui-typography-size-14":"IEsWug","uui-typography-size-16":"_1FH80Z","root":"tzbnLR","uuiTypography":"XChVDQ","heroHeader":"JUIs4-","promoHeader":"oYvlSA","uuiCritical":"jUbKyi","uuiInfo":"Hyz1PW","uuiSuccess":"-SYvpU","uuiWarning":"cZ7eVs","uuiHighlight":"X48iJS","uuiTypographySize12":"VW2Y00","uuiTypographySize14":"IEsWug","uuiTypographySize16":"_1FH80Z"};

function applyTagMods(props) {
    return [
        css$13.root,
        `uui-size-${props.size || settings.sizes.defaults.tag}`,
        `uui-color-${props.color || 'neutral'}`,
        `uui-fill-${props.fill || 'solid'}`,
        'uui-tag',
    ];
}
const Tag = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => {
    const styles = [applyTagMods(props), props.cx];
    const ClearIcon = props.clearIcon ? props.clearIcon : systemIcons.clear;
    const DropdownIcon = props.dropdownIcon ? props.dropdownIcon : systemIcons.foldingArrow;
    return (React__namespace.default.createElement(uuiComponents.Clickable, Object.assign({}, props, { rawProps: Object.assign({ 'aria-haspopup': props.isDropdown, 'aria-expanded': props.isOpen }, props.rawProps), cx: styles, ref: ref }),
        props.icon && props.iconPosition !== 'right' && (React__namespace.default.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: !props.isDisabled ? props.onIconClick : undefined })),
        props.caption && (React__namespace.default.createElement("div", { className: uuiCore.uuiElement.caption }, props.caption)),
        props.count !== undefined && props.count !== null && (React__namespace.default.createElement(CountIndicator, { color: (!props.color || props.color === 'neutral') ? 'white' : props.color, size: settings.sizes.tag.countIndicator[(props.size || settings.sizes.defaults.tag)], caption: props.count })),
        props.icon && props.iconPosition === 'right' && (React__namespace.default.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: !props.isDisabled ? props.onIconClick : undefined })),
        props.isDropdown && (React__namespace.default.createElement(uuiComponents.IconContainer, { icon: DropdownIcon, flipY: props.isOpen })),
        props.onClear && !props.isDisabled && (React__namespace.default.createElement(uuiComponents.IconContainer, { cx: uuiCore.uuiMarkers.clickable, icon: ClearIcon, onClick: props.onClear }))));
});

var css$12 = {"root":"GmEVUZ","uui-spinner":"_1bLvP0","uuiSpinner":"_1bLvP0"};

function applySpinnerMods() {
    return [css$12.root, 'uui-spinner'];
}
const Spinner = /* @__PURE__ */uuiCore.withMods(uuiComponents.Spinner, applySpinnerMods);

var css$11 = {"root":"KCDvO0","spacer":"MtRbBh","mode-ghost":"xONVT6","size-24":"AHwmUb","size-30":"U4xyjy","navigation-size-24":"Sk3kRE","navigation-size-30":"Ln8on3","modeGhost":"xONVT6","size24":"AHwmUb","size30":"U4xyjy","navigationSize24":"Sk3kRE","navigationSize30":"Ln8on3"};

var _path$v;
function _extends$v() { _extends$v = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$v.apply(this, arguments); }
var SvgNavigationChevronLeftOutline = function SvgNavigationChevronLeftOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$v({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$v || (_path$v = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M15.914 5.414 14.5 4l-8 8 8 8 1.414-1.414L9.328 12l6.586-6.586z"
  })));
};
var ForwardRef$v = /*#__PURE__*/React.forwardRef(SvgNavigationChevronLeftOutline);

var _path$u;
function _extends$u() { _extends$u = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$u.apply(this, arguments); }
var SvgNavigationChevronRightOutline = function SvgNavigationChevronRightOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$u({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$u || (_path$u = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M8.086 18.586 9.5 20l8-8-8-8-1.414 1.414L14.672 12l-6.586 6.586z"
  })));
};
var ForwardRef$u = /*#__PURE__*/React.forwardRef(SvgNavigationChevronRightOutline);

function Paginator(props) {
    const renderPaginator = (params) => {
        var _a, _b;
        return (React__namespace.default.createElement("nav", Object.assign({ role: "navigation", className: cx__default.default(css$11.root, 'uui-paginator') }, params.rawProps),
            React__namespace.default.createElement(Button, { cx: css$11[`navigation-size-${(_a = params.size) !== null && _a !== void 0 ? _a : '30'}`], size: params.size, icon: ForwardRef$v, onClick: params.goToPrev, isDisabled: params.isFirst || props.isDisabled, fill: "outline", color: "secondary" }),
            params.pages.map((page, index) => {
                var _a, _b;
                if (page.type === 'spacer') {
                    return (React__namespace.default.createElement(Button, { cx: cx__default.default(css$11[`size-${(_a = params.size) !== null && _a !== void 0 ? _a : '30'}`], css$11.spacer), size: params.size, key: `${index}_spacer`, caption: "...", fill: "ghost", color: "secondary", tabIndex: -1, isDisabled: props.isDisabled }));
                }
                else {
                    return (React__namespace.default.createElement(Button, { cx: cx__default.default(css$11[`size-${(_b = params.size) !== null && _b !== void 0 ? _b : '30'}`], css$11[`mode-${!page.isActive && 'ghost'}`]), size: params.size, key: page.pageNumber, caption: page.pageNumber, onClick: () => { var _a; return (_a = page.onClick) === null || _a === void 0 ? void 0 : _a.call(page); }, rawProps: { 'aria-current': page.isActive }, fill: (page.isActive && 'outline') || 'ghost', color: "primary", isDisabled: props.isDisabled }));
                }
            }),
            React__namespace.default.createElement(Button, { cx: css$11[`navigation-size-${(_b = params.size) !== null && _b !== void 0 ? _b : '30'}`], size: params.size, icon: ForwardRef$u, onClick: params.goToNext, isDisabled: params.isLast || props.isDisabled, fill: "outline", color: "secondary" })));
    };
    return React__namespace.default.createElement(uuiComponents.Paginator, Object.assign({}, props, { render: renderPaginator }));
}

var css$10 = {"root":"HfmHYP","progress-bar":"pfsUy4","progressBar-indeterminate":"I-oI0c","size-12":"Ccy9y1","size-18":"mbfmQs","size-24":"_5n-rbO","progressBar":"pfsUy4","progressBarIndeterminate":"I-oI0c","size12":"Ccy9y1","size18":"mbfmQs","size24":"_5n-rbO"};

const IndeterminateBar = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    return (React__namespace.createElement("div", { ref: ref, className: cx__default.default('uui-indeterminate_bar', props.cx, css$10.root, css$10[`size-${props.size || 12}`]) },
        React__namespace.createElement("div", { className: cx__default.default(css$10.progressBar) })));
});

var css$$ = {"root":"ih4tGG","striped":"_71zf7g","animate-stripes":"KiTMEa","size-12":"bWO87O","size-18":"HO82fa","size-24":"LX9Wi9","animateStripes":"KiTMEa","size12":"bWO87O","size18":"HO82fa","size24":"LX9Wi9"};

const DEFAULT_SIZE = '12';
function applyProgressBarMods(mods) {
    const size = mods.size || DEFAULT_SIZE;
    return [
        css$$.root,
        css$$[`size-${size}`],
        mods.striped && css$$.striped,
    ];
}
const ProgressBar = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.ProgressBar, applyProgressBarMods, (props) => ({
    hideLabel: props.hideLabel || props.striped,
}));

var css$_ = {"root":"LBQTvc"};

const IndicatorBar = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    const { progress } = props;
    return progress || progress === 0 ? (React__namespace.createElement(ProgressBar, { ref: ref, progress: progress, cx: cx__default.default(css$_.root, props.cx), hideLabel: true })) : (React__namespace.createElement(IndeterminateBar, { ref: ref, cx: cx__default.default(css$_.root, props.cx) }));
});

var css$Z = {"root":"_-5AzRo","size-12":"yId9QG","size-18":"Nb-73f","size-24":"BKA9ia","size12":"yId9QG","size18":"Nb-73f","size24":"BKA9ia"};

const StatusIndicator = /* @__PURE__ */React.forwardRef((props, ref) => {
    return (React__namespace.default.createElement("div", { ref: ref, className: cx__default.default([
            css$Z.root,
            css$Z[`size-${props.size || 24}`],
            'uui-status_indicator',
            `uui-color-${props.color || 'neutral'}`,
            `uui-fill-${props.fill || 'solid'}`,
            props.cx,
        ]) },
        React__namespace.default.createElement("div", { className: "uui-status_indicator_dot" }),
        React__namespace.default.createElement("p", { className: "uui-status_indicator_caption" }, props.caption)));
});

var css$Y = {"drag-handle":"D6J0gQ","icon-container":"gskFSN","dragHandle":"D6J0gQ","iconContainer":"gskFSN"};

function DataRowAddons(props) {
    var _a, _b;
    const row = props.rowProps;
    const getIndent = () => {
        return (row.indent - 1) * settings.sizes.rowAddons.indentUnit[props.size || 'default'];
    };
    const getWidth = () => {
        return settings.sizes.rowAddons.indentWidth[props.size || 'default'];
    };
    return (React__namespace.default.createElement(React__namespace.default.Fragment, null,
        ((_a = row.dnd) === null || _a === void 0 ? void 0 : _a.srcData) && React__namespace.default.createElement(uuiComponents.DragHandle, { key: "dh", cx: css$Y.dragHandle, rawProps: Object.assign({}, props.eventHandlers) }),
        ((_b = row === null || row === void 0 ? void 0 : row.checkbox) === null || _b === void 0 ? void 0 : _b.isVisible) && (React__namespace.default.createElement(Checkbox, { key: "cb", cx: "uui-dr_addons-checkbox", tabIndex: props.tabIndex, size: settings.sizes.rowAddons.checkbox[props.size], value: row.isChecked, indeterminate: !row.isChecked && row.isChildrenChecked, onValueChange: () => { var _a; return (_a = row.onCheck) === null || _a === void 0 ? void 0 : _a.call(row, row); }, isDisabled: row.checkbox.isDisabled, isInvalid: row.checkbox.isInvalid })),
        row.indent > 0 && (React__namespace.default.createElement("div", { key: "fold", className: "uui-dr_addons-indent", style: { marginInlineStart: getIndent(), width: getWidth() } }, row.isFoldable && (React__namespace.default.createElement(uuiComponents.IconContainer, { rawProps: {
                'aria-label': row.isFolded ? 'Unfold' : 'Fold',
                role: 'button',
            }, key: "icon", icon: ForwardRef$P, cx: [
                uuiCore.uuiElement.foldingArrow, uuiCore.uuiMarkers.clickable, css$Y.iconContainer,
            ], rotate: row.isFolded ? '90ccw' : '0', onClick: () => row.onFold(row) }))))));
}

var css$X = {"root":"caYEpQ"};

const Blocker = /* @__PURE__ */uuiCore.withMods(uuiComponents.Blocker, () => [css$X.root], (cmpProps) => ({ renderSpinner: cmpProps.renderSpinner || (() => React__namespace.default.createElement(Spinner, null)) }));

const VirtualList = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    const { listContainerRef, offsetY, handleScroll, estimatedHeight, scrollContainerRef, } = uuiCore.useVirtualList({
        value: props.value,
        onValueChange: props.onValueChange,
        onScroll: props.onScroll,
        rowsCount: props.rowsCount,
        rowsSelector: props.rowsSelector,
    });
    React__namespace.useImperativeHandle(ref, () => scrollContainerRef.current, [scrollContainerRef.current]);
    const scrollShadows = uuiCore.useScrollShadows({ root: scrollContainerRef.current });
    const renderRows = () => {
        var _a;
        return ((_a = props.renderRows) === null || _a === void 0 ? void 0 : _a.call(props, {
            listContainerRef, estimatedHeight, offsetY, scrollShadows,
        })) || (React__namespace.createElement("div", { className: css$16.listContainer, style: { minHeight: `${estimatedHeight}px` } },
            React__namespace.createElement("div", { ref: listContainerRef, role: props.role, style: { marginTop: offsetY } }, props.rows)));
    };
    const renderView = ({ style }) => (React__namespace.createElement(VirtualListView, { isLoading: props.isLoading, style: style, rawProps: props.rawProps }));
    const scrollBarsRef = React__namespace.useCallback((scrollbars) => {
        var _a;
        if (!((_a = scrollbars === null || scrollbars === void 0 ? void 0 : scrollbars.container) === null || _a === void 0 ? void 0 : _a.firstChild))
            return;
        scrollContainerRef.current = scrollbars.container.firstChild;
    }, []);
    return (React__namespace.createElement(ScrollBars, { cx: uuiCore.cx(css$16.scrollContainer, props.cx, {
            [uuiCore.uuiMarkers.scrolledLeft]: scrollShadows.horizontalLeft,
            [uuiCore.uuiMarkers.scrolledRight]: scrollShadows.horizontalRight,
            [uuiCore.uuiMarkers.scrolledTop]: scrollShadows.verticalTop,
            [uuiCore.uuiMarkers.scrolledBottom]: scrollShadows.verticalBottom,
        }), onScroll: handleScroll, renderView: renderView, ref: scrollBarsRef }, renderRows()));
});
const VirtualListView = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    return (React__namespace.createElement(React__namespace.Fragment, null,
        React__namespace.createElement("div", Object.assign({}, props.rawProps, { style: Object.assign(Object.assign({}, props.style), { position: 'relative', flex: '1 1 auto', display: 'flex', flexDirection: 'column', overflow: props.isLoading ? 'hidden' : 'scroll', marginRight: props.isLoading ? 0 : props.style.marginRight, marginBottom: props.isLoading ? 0 : props.style.marginBottom }), ref: ref }), props.children),
        React__namespace.createElement(Blocker, { isEnabled: props.isLoading })));
});

var css$W = {"root":"V2bCTX"};

function CheckboxGroup(props) {
    const currentValue = props.value || [];
    const direction = props.direction || 'vertical';
    const handleChange = (selected, newVal) => {
        let newSelection;
        const actualValue = props.value || [];
        if (selected) {
            newSelection = actualValue.concat([newVal]);
        }
        else {
            newSelection = actualValue.filter((i) => i !== newVal);
        }
        props.onValueChange(newSelection);
    };
    return (React__namespace.createElement("fieldset", Object.assign({ ref: props.forwardedRef, className: uuiCore.cx(css$W.root, uuiCore.directionMode[direction], props.cx) }, props.rawProps), props.items.map((i) => {
        const restItemProps = __rest(i, ["id", "name", "renderName"]);
        return (React__namespace.createElement(Checkbox, Object.assign({ renderLabel: i.renderName ? i.renderName : () => i.name, value: currentValue.indexOf(i.id) !== -1, onValueChange: (selected) => handleChange(selected, i.id), isDisabled: props.isDisabled, isReadonly: props.isReadonly, isInvalid: props.isInvalid, isRequired: props.isRequired, key: i.id.toString(), size: props.size || i.size }, restItemProps)));
    })));
}

const TREE_SHAKEABLE_INIT = () => (Object.assign(Object.assign({}, uuiCore.i18n), { dataPickerBody: {
        searchPlaceholder: 'Search',
        noRecordsMessage: 'No records found',
        noRecordsSubTitle: 'Check your spelling, or search for a different keyword',
    }, pickerModal: {
        headerTitle: 'Please select',
        searchPlaceholder: 'Type text for quick search',
        cancelButton: 'Cancel',
        selectButton: 'Select',
        clearAllButton: 'CLEAR ALL',
        selectAllButton: 'SELECT ALL',
    }, pickerInput: {
        showOnlySelectedLabel: 'Show only selected',
        clearSelectionButton: 'CLEAR ALL',
        clearSelectionButtonSingle: 'CLEAR',
        selectAllButton: 'SELECT ALL',
        doneButton: 'DONE',
    }, notificationCard: {
        closeAllNotificationsButton: 'CLOSE ALL NOTIFICATIONS',
    }, form: {
        notifications: {
            actionButtonCaption: 'Restore',
            unsavedChangesMessage: 'You have unsaved changes. Click Restore button if you would like to recover the data',
        },
        modals: {
            beforeLeaveMessage: 'Your data may be lost. Do you want to save data?',
            discardButton: 'Discard',
            saveButton: 'Save',
        },
    }, rangeDatePicker: {
        pickerPlaceholderFrom: 'From:',
        pickerPlaceholderTo: 'To:',
    }, tables: {
        noResultsBlock: {
            title: 'No results found',
            message: 'We can’t find any item matching your request',
        },
        columnsConfigurationModal: {
            applyButton: 'Apply',
            cancelButton: 'Cancel',
            selectAllButton: 'Select all',
            clearAllButton: 'Clear all',
            checkAllButton: 'Check All',
            uncheckAllButton: 'Uncheck All',
            configureColumnsTitle: 'Configure columns',
            pinnedToTheLeftSubgroupTitle: 'Pinned to the left',
            pinnedToTheRightSubgroupTitle: 'Pinned to the right',
            notPinnedSubgroupTitle: 'Not pinned',
            resetToDefaultButton: 'Reset to Default',
            displayedSectionTitle: 'Displayed in table',
            hiddenSectionTitle: 'Hidden in table',
            searchPlaceholder: 'Search by column name',
            noResultsFound: {
                text: 'No results found',
                subText: 'We can’t find any item matching your request',
            },
            enableAtLeastOneColumnMessage: 'Please enable at least one column',
            pinColumnToTheLeftButton: 'Pin column to left',
            pinColumnToTheRightButton: 'Pin column to right',
            unPinColumnButton: 'Unpin column',
            lockedColumnPinButton: 'You cannot unpin this column',
        },
        columnHeader: {
            collapseAllTooltip: 'Collapse All',
            expandAllTooltip: 'Expand All',
        },
    }, pickerFilterHeader: {
        sortAscending: 'Sort Ascending',
        sortDescending: 'Sort Descending',
    }, filterToolbar: {
        addCaption: 'Add filter',
        datePicker: {
            placeholder: 'Select date',
            removeCaption: 'REMOVE FILTER',
            clearCaption: 'CLEAR',
        },
        rangeDatePicker: {
            emptyPickerPlaceholder: 'Select period',
            emptyPlaceholderFrom: 'Select From',
            emptyPlaceholderTo: 'Select To',
        },
        pickerInput: {
            itemsPlaceholder: 'items',
        },
    }, presetPanel: {
        addCaption: 'Add Preset',
    }, confirmationModal: {
        discardButton: 'Discard',
        saveButton: 'Save',
    }, fileUpload: {
        labelStart: 'Drop files to attach or',
        browse: 'browse',
        labelEnd: 'your local files',
    }, fileCard: {
        fileSizeProgress: ' of ',
        failedUploadErrorMessage: 'Upload failed',
    }, errorHandler: {
        errorPageConfig: {
            notFound: {
                title: 'Oooops! We couldn’t find this page',
                subtitle: 'Sorry for the inconvenience.',
            },
            permissionDenied: {
                title: 'You have no permissions!',
                subtitle: 'Sorry for the inconvenience.',
            },
            serverError: {
                title: '500 Error! Something went wrong',
                subtitle: 'Sorry for the inconvenience, we’ll get it fixed.',
            },
            serviceUnavailable: {
                title: 'The page request was canceled, because it took too long to complete',
                subtitle: 'Sorry for the inconvenience, we’ll get it fixed.',
            },
            default: {
                title: 'Something went wrong',
                subtitle: 'Sorry for the inconvenience, we’ll get it fixed.',
            },
        },
        recoveryMessageConfig: {
            'auth-lost': {
                title: 'Your session has expired.',
                subtitle: 'Attempting to log you in.',
            },
            'connection-lost': {
                title: 'Network connection down',
                subtitle: 'Please check your network connection.',
            },
            maintenance: {
                title: 'Server maintenance',
                subtitle: 'We apologize for the inconvenience. Our site is currently under maintenance. Will come back as soon as possible.',
            },
            'server-overload': {
                title: 'Server overloaded',
                subtitle: 'We are trying to recover. Please wait.',
            },
        },
    } }));
const i18n = /* @__PURE__ */TREE_SHAKEABLE_INIT();

var css$V = {"uui-typography":"XkZaFX","hero-header":"rBPgVU","promo-header":"Ud9jnE","uui-critical":"lfsBum","uui-info":"K0RyVt","uui-success":"RQhxgM","uui-warning":"BGqcUW","uui-highlight":"LrjMe4","uui-typography-size-12":"_8isUOY","uui-typography-size-14":"lOZElh","uui-typography-size-16":"YDA-6x","modal":"_7yhCbT","search-wrapper":"LXzTT7","body":"lA-8YL","checkbox":"vo4b-6","no-found-size-24":"iVMeyV","no-found-size-30":"ImOK9A","no-found-size-36":"TfppAx","no-found-size-42":"xQlV8N","uuiTypography":"XkZaFX","heroHeader":"rBPgVU","promoHeader":"Ud9jnE","uuiCritical":"lfsBum","uuiInfo":"K0RyVt","uuiSuccess":"RQhxgM","uuiWarning":"BGqcUW","uuiHighlight":"LrjMe4","uuiTypographySize12":"_8isUOY","uuiTypographySize14":"lOZElh","uuiTypographySize16":"YDA-6x","searchWrapper":"LXzTT7","noFoundSize24":"iVMeyV","noFoundSize30":"ImOK9A","noFoundSize36":"TfppAx","noFoundSize42":"xQlV8N"};

class DataPickerBody extends uuiComponents.PickerBodyBase {
    constructor() {
        super(...arguments);
        this.lens = uuiCore.Lens.onEditableComponent(this);
        this.searchLens = this.lens.prop('search');
    }
    renderNotFound() {
        if (this.props.renderNotFound) {
            return this.props.renderNotFound();
        }
        // TODO: need fix sizes, how to use variables
        return (React__namespace.default.createElement(uuiComponents.FlexCell, { cx: css$V[`no-found-size-${this.props.searchSize || settings.sizes.dataPickerBody.flexCell.default}`], grow: 1, textAlign: "center" },
            React__namespace.default.createElement(Text, { size: this.props.searchSize }, i18n.dataPickerBody.noRecordsMessage)));
    }
    render() {
        const searchSize = (uuiCore.isMobile() ? settings.sizes.dataPickerBody.searchInput['mobile'] : this.props.searchSize);
        return (React__namespace.default.createElement(React__namespace.default.Fragment, null,
            this.showSearch() && (React__namespace.default.createElement("div", { key: "search", className: css$V.searchWrapper },
                React__namespace.default.createElement(uuiComponents.FlexCell, { grow: 1 },
                    React__namespace.default.createElement(SearchInput, Object.assign({ ref: this.searchRef, placeholder: i18n.dataPickerBody.searchPlaceholder }, this.searchLens.toProps(), { onKeyDown: this.searchKeyDown, size: searchSize, debounceDelay: this.props.searchDebounceDelay, rawProps: { dir: 'auto' } }))))),
            React__namespace.default.createElement(FlexRow, { key: "body", cx: uuiCore.cx('uui-pickerInput-body', css$V[this.props.editMode], css$V[this.props.selectionMode]), rawProps: { style: { maxHeight: this.props.maxHeight, maxWidth: this.props.maxWidth } } }, this.props.rowsCount > 0 ? (React__namespace.default.createElement(VirtualList, Object.assign({}, this.lens.toProps(), { rows: this.props.rows, rawProps: this.props.rawProps, rowsCount: this.props.rowsCount, isLoading: this.props.isReloading }))) : (this.renderNotFound()))));
    }
}

function DataPickerFooterImpl(props) {
    const { search, clearSelection, view, showSelected, selectionMode, } = props;
    const size = settings.sizes.dataPickerFooter.linkButton[uuiCore.isMobile() ? 'mobile' : props.size];
    const hasSelection = view.getSelectedRowsCount() > 0;
    const rowsCount = view.getListProps().rowsCount;
    const isEmptyRowsAndHasNoSelection = (rowsCount === 0 && !hasSelection);
    const isSinglePicker = selectionMode === 'single';
    const clearAllText = i18n.pickerInput.clearSelectionButton;
    const clearSingleText = i18n.pickerInput.clearSelectionButtonSingle;
    const selectAllText = i18n.pickerInput.selectAllButton;
    // show always for multi picker and for single only in case if search not disabled and doesn't searching.
    const isSearching = search && (search === null || search === void 0 ? void 0 : search.length);
    const shouldShowFooter = isSinglePicker ? (!isSearching && !props.disableClear) : !isSearching;
    return shouldShowFooter && (React__namespace.default.createElement(FlexRow, { size: props.size, padding: settings.sizes.dataPickerFooter.flexRowPadding },
        !isSinglePicker && (React__namespace.default.createElement(Switch, { size: settings.sizes.dataPickerFooter.switch[props.size], value: showSelected.value, isDisabled: !hasSelection, onValueChange: showSelected.onValueChange, label: i18n.pickerInput.showOnlySelectedLabel })),
        React__namespace.default.createElement(uuiComponents.FlexSpacer, null),
        React__namespace.default.createElement(FlexCell, { width: "auto", alignSelf: "center" },
            view.selectAll && (React__namespace.default.createElement(LinkButton, { size: size, caption: hasSelection ? clearAllText : selectAllText, onClick: hasSelection ? clearSelection : () => view.selectAll.onValueChange(true), rawProps: {
                    'aria-label': hasSelection ? clearAllText : selectAllText,
                }, isDisabled: isEmptyRowsAndHasNoSelection })),
            !view.selectAll && (React__namespace.default.createElement(LinkButton, { isDisabled: !hasSelection, size: size, caption: isSinglePicker ? clearSingleText : clearAllText, onClick: clearSelection, rawProps: {
                    'aria-label': isSinglePicker ? clearSingleText : clearAllText,
                } })))));
}
const DataPickerFooter = /* @__PURE__ */React__namespace.default.memo(DataPickerFooterImpl);

var css$U = {"header":"xF5S3n","close":"cfAWWw"};

const DataPickerHeaderImpl = (props) => {
    const title = props.title && typeof props.title === 'string' ? props.title.charAt(0).toUpperCase() + props.title.slice(1) : '';
    return (React__namespace.default.createElement(FlexRow, { alignItems: "center", borderBottom: true, cx: css$U.header },
        React__namespace.default.createElement(Text, { size: settings.sizes.dataPickerHeader.text.size, fontWeight: settings.sizes.dataPickerHeader.text.fontWeight }, title),
        React__namespace.default.createElement(IconButton, { icon: ForwardRef$Q, onClick: () => { var _a; return (_a = props.close) === null || _a === void 0 ? void 0 : _a.call(props); }, cx: css$U.close })));
};
const DataPickerHeader = /* @__PURE__ */React__namespace.default.memo(DataPickerHeaderImpl);

var _path$t;
function _extends$t() { _extends$t = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$t.apply(this, arguments); }
var SvgNotificationDoneFill = function SvgNotificationDoneFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$t({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$t || (_path$t = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m2 12 3.077-3.2 4.615 4.8L18.923 4 22 7.2 9.692 20 2 12z"
  })));
};
var ForwardRef$t = /*#__PURE__*/React.forwardRef(SvgNotificationDoneFill);

var css$T = {"uui-typography":"Osbz-V","hero-header":"_4QhK8p","promo-header":"qlsSAa","uui-critical":"y05ZH4","uui-info":"q7g2ZS","uui-success":"qrSiCM","uui-warning":"YQFztg","uui-highlight":"C9xAlp","uui-typography-size-12":"_3UYFzw","uui-typography-size-14":"cZ8jfH","uui-typography-size-16":"gbzp9k","root":"-S6h7t","align-widgets-top":"i-hjN7","size-24":"qv5Lww","size-30":"ZsuMNF","size-36":"_422WBp","size-42":"F5B549","size-48":"sN3QxQ","size-60":"v-BTHk","align-widgets-center":"iM3DHM","icon-wrapper":"_2mg4-g","padding-12":"Xb7Uqb","padding-24":"bfUDNs","padding-left-12":"_2Ap64k","padding-left-24":"LU5ILL","icon-container":"_81qNeN","loading-cell":"W5UUYR","content-wrapper":"ZWbqy3","render-item":"D3Kgys","icon-default":"zfmRNx","selected-mark":"uR1L9x","uuiTypography":"Osbz-V","heroHeader":"_4QhK8p","promoHeader":"qlsSAa","uuiCritical":"y05ZH4","uuiInfo":"q7g2ZS","uuiSuccess":"qrSiCM","uuiWarning":"YQFztg","uuiHighlight":"C9xAlp","uuiTypographySize12":"_3UYFzw","uuiTypographySize14":"cZ8jfH","uuiTypographySize16":"gbzp9k","alignWidgetsTop":"i-hjN7","size24":"qv5Lww","size30":"ZsuMNF","size36":"_422WBp","size42":"F5B549","size48":"sN3QxQ","size60":"v-BTHk","alignWidgetsCenter":"iM3DHM","iconWrapper":"_2mg4-g","padding12":"Xb7Uqb","padding24":"bfUDNs","paddingLeft12":"_2Ap64k","paddingLeft24":"LU5ILL","iconContainer":"_81qNeN","loadingCell":"W5UUYR","contentWrapper":"ZWbqy3","renderItem":"D3Kgys","iconDefault":"zfmRNx","selectedMark":"uR1L9x"};

function DataPickerCell(props) {
    const ref = React__namespace.useRef();
    let content;
    if (props.rowProps.isLoading) {
        content = (
        // remove `css.loadingCell` after` removing `margin: 0 3px 3px 0` from `TextPlaceholder` `loadingWord` class styles.
        React__namespace.createElement(Text, { key: "t", size: settings.sizes.dataPickerCell.text[props.size], cx: css$T.loadingCell },
            React__namespace.createElement(TextPlaceholder, null)));
    }
    else if (props.rowProps.isUnknown) {
        content = (React__namespace.createElement(Text, { key: "t", size: settings.sizes.dataPickerCell.text[props.size] }, "Unknown"));
    }
    else {
        content = (React__namespace.createElement("div", { key: `${props.rowProps.id}`, className: css$T.renderItem },
            props.renderItem(props.rowProps.value, props.rowProps),
            React__namespace.createElement(uuiComponents.FlexSpacer, null),
            (props.rowProps.isChildrenSelected || props.rowProps.isSelected) && (React__namespace.createElement("div", { className: uuiCore.cx(css$T.iconWrapper, uuiCore.uuiMod.selected) },
                React__namespace.createElement(uuiComponents.IconContainer, { icon: settings.sizes.dataPickerCell.isBoldIcon[props.size] ? ForwardRef$t : ForwardRef$O, cx: props.rowProps.isChildrenSelected ? css$T.iconDefault : css$T.selectedMark, rawProps: { 'aria-label': props.rowProps.isChildrenSelected
                            ? 'Child is selected'
                            : 'Selected' } })))));
    }
    const getWrappedContent = () => (React__namespace.createElement("div", { className: css$T.contentWrapper }, content));
    return (React__namespace.createElement(FlexCell, { ref: ref, grow: 1, width: 0, minWidth: 0, rawProps: { role: 'cell' }, cx: [
            css$T.root,
            props.cx,
            'data-picker-cell',
            css$T['size-' + (props.size || settings.sizes.defaults.dataPickerCell)],
            css$T[`padding-${props.padding || settings.sizes.dataPickerCell.padding.default}`],
            css$T[`padding-left-${props.padding || settings.sizes.dataPickerCell.paddingLeft.default}`],
            css$T[`align-widgets-${props.alignActions || 'top'}`],
        ] },
        React__namespace.createElement(DataRowAddons, Object.assign({}, props, { tabIndex: -1 })),
        getWrappedContent()));
}

var css$S = {"uui-typography":"GJaWtv","hero-header":"ahKt9-","promo-header":"_0xewMC","uui-critical":"i-U7o0","uui-info":"cujdqn","uui-success":"EUvKbR","uui-warning":"SENqCT","uui-highlight":"XeQalu","uui-typography-size-12":"WCHSGv","uui-typography-size-14":"_4eXH6s","uui-typography-size-16":"-DYUwQ","picker-row":"_2Zj5rd","uuiTypography":"GJaWtv","heroHeader":"ahKt9-","promoHeader":"_0xewMC","uuiCritical":"i-U7o0","uuiInfo":"cujdqn","uuiSuccess":"EUvKbR","uuiWarning":"SENqCT","uuiHighlight":"XeQalu","uuiTypographySize12":"WCHSGv","uuiTypographySize14":"_4eXH6s","uuiTypographySize16":"-DYUwQ","pickerRow":"_2Zj5rd"};

class DataPickerRow extends React__namespace.Component {
    constructor() {
        super(...arguments);
        this.renderContent = () => {
            return (React__namespace.createElement(DataPickerCell, { key: "name", size: this.props.size || settings.sizes.dataPickerRow.dataPickerCell.default, padding: this.props.padding || settings.sizes.dataPickerRow.padding.default, rowProps: this.props, alignActions: this.props.alignActions || 'top', renderItem: this.props.renderItem }));
        };
    }
    render() {
        return (React__namespace.createElement(uuiComponents.DataPickerRow, Object.assign({}, this.props, { cx: [css$S.pickerRow, this.props.cx], renderContent: this.renderContent })));
    }
}

var css$R = {"uui-typography":"S5u8I6","hero-header":"DcGk9C","promo-header":"lqD1Qc","uui-critical":"UlTU22","uui-info":"WRAk50","uui-success":"slhaZj","uui-warning":"xEsBPv","uui-highlight":"tUL6vP","uui-typography-size-12":"-XzhKI","uui-typography-size-14":"N2ZBuI","uui-typography-size-16":"MTGLr7","done":"W8gpl2","container":"RIzMox","uuiTypography":"S5u8I6","heroHeader":"DcGk9C","promoHeader":"lqD1Qc","uuiCritical":"UlTU22","uuiInfo":"WRAk50","uuiSuccess":"slhaZj","uuiWarning":"xEsBPv","uuiHighlight":"tUL6vP","uuiTypographySize12":"-XzhKI","uuiTypographySize14":"N2ZBuI","uuiTypographySize16":"MTGLr7"};

const MobileDropdownWrapper = (props) => {
    const isMobileView = uuiCore.isMobile();
    const maxWidth = isMobileView ? 'auto' : props.maxWidth;
    const maxHeight = isMobileView ? 'auto' : props.maxHeight;
    return (React__namespace.default.createElement(DropdownContainer, Object.assign({}, props, { maxWidth: maxWidth, maxHeight: maxHeight, cx: [css$R.container, props.cx], autoFocus: true }),
        isMobileView && React__namespace.default.createElement(DataPickerHeader, { title: props.title, close: props.onClose }),
        props.children,
        isMobileView && React__namespace.default.createElement(LinkButton, { caption: i18n.pickerInput.doneButton, onClick: () => { var _a; return (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props); }, cx: css$R.done, size: settings.sizes.mobileDropdownWrapper.linkButton })));
};

var _path$s, _path2$4;
function _extends$s() { _extends$s = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$s.apply(this, arguments); }
var SvgSearchWithBackground = function SvgSearchWithBackground(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$s({
    width: 66,
    height: 67,
    viewBox: "0 0 66 67",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: ref
  }, props), _path$s || (_path$s = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M0 33.5C0 15.275 14.775.5 33 .5s33 14.775 33 33-14.775 33-33 33-33-14.775-33-33Z",
    fill: "#EBEDF5"
  })), _path2$4 || (_path2$4 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "m42.31 40.335 7.165 7.165L47 49.975l-7.165-7.165a13.94 13.94 0 0 1-8.585 2.94c-7.732 0-14-6.268-14-14s6.268-14 14-14 14 6.268 14 14a13.94 13.94 0 0 1-2.94 8.585ZM31.25 42.25c5.799 0 10.5-4.701 10.5-10.5s-4.701-10.5-10.5-10.5-10.5 4.701-10.5 10.5 4.701 10.5 10.5 10.5Z",
    fill: "#6C6F80"
  })));
};
var ForwardRef$s = /*#__PURE__*/React.forwardRef(SvgSearchWithBackground);

var css$Q = {"uui-typography":"GlDe-O","hero-header":"_0IpUZk","promo-header":"BwJE96","uui-critical":"M4BdrX","uui-info":"myJ68-","uui-success":"_8VQICq","uui-warning":"GW3rQ0","uui-highlight":"R1giMv","uui-typography-size-12":"nr-wW5","uui-typography-size-14":"RiQe3M","uui-typography-size-16":"m4Oytk","sub-header-wrapper":"JDNzE1","switch":"Qm0CJ8","no-found-modal-container":"FsIOIc","no-found-modal-container-icon":"pIXY6m","no-found-modal-container-text":"_7Fd2IX","uuiTypography":"GlDe-O","heroHeader":"_0IpUZk","promoHeader":"BwJE96","uuiCritical":"M4BdrX","uuiInfo":"myJ68-","uuiSuccess":"_8VQICq","uuiWarning":"GW3rQ0","uuiHighlight":"R1giMv","uuiTypographySize12":"nr-wW5","uuiTypographySize14":"RiQe3M","uuiTypographySize16":"m4Oytk","subHeaderWrapper":"JDNzE1","$switch$":"Qm0CJ8","noFoundModalContainer":"FsIOIc","noFoundModalContainerIcon":"pIXY6m","noFoundModalContainerText":"_7Fd2IX"};

const mergeHighlightRanges = (ranges) => {
    const mergedRanges = [];
    ranges.forEach((range) => {
        if (!mergedRanges.length) {
            mergedRanges.push(Object.assign(Object.assign({}, range), { isHighlighted: true }));
        }
        const lastRange = mergedRanges[mergedRanges.length - 1];
        if (range.from >= lastRange.from && range.from <= lastRange.to && range.to > lastRange.to) {
            lastRange.to = range.to;
        }
        if (lastRange.to < range.from) {
            mergedRanges.push(Object.assign(Object.assign({}, range), { isHighlighted: true }));
        }
    });
    return mergedRanges;
};
const addNotHighlightedRanges = (ranges, str) => {
    const allRanges = [];
    ranges.forEach((range, index) => {
        if (index === 0 && range.from !== 0) {
            allRanges.push({ from: 0, to: range.from, isHighlighted: false });
        }
        const prevRange = ranges[index - 1];
        if (prevRange && prevRange.to < range.from) {
            allRanges.push({ from: prevRange.to, to: range.from, isHighlighted: false });
        }
        allRanges.push(range);
        const lastIndex = ranges.length - 1;
        if (index === lastIndex && range.to < str.length) {
            allRanges.push({ from: range.to, to: str.length, isHighlighted: false });
        }
    });
    return allRanges;
};
const getHighlightRanges = (str, search) => {
    const words = search
        .split(' ')
        .filter(Boolean)
        .map((word) => word.trim().replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&')) // esape regex characters inside the string
        .map((word) => new RegExp(word, 'ig'));
    const matches = words.flatMap((word) => [...str.matchAll(word)]);
    const ranges = matches
        .map((match) => ({ from: match.index, to: match[0].length + match.index, isHighlighted: true }))
        .sort((range1, range2) => range1.from - range2.from);
    if (!ranges) {
        return [];
    }
    const mergedRanges = mergeHighlightRanges(ranges);
    return addNotHighlightedRanges(mergedRanges, str);
};
const getDecoratedText = (str, ranges) => ranges.map((range, index) => {
    const rangeStr = str.substring(range.from, range.to);
    return (React__namespace.default.createElement("span", Object.assign({ key: `${rangeStr}-${index}` }, (range.isHighlighted ? { className: 'uui-highlight' } : {})), rangeStr));
});
const getHighlightedSearchMatches = (str, search) => {
    if (!search || !str) {
        return str;
    }
    const ranges = getHighlightRanges(str, search);
    if (!ranges.length) {
        return str;
    }
    return getDecoratedText(str, ranges);
};

var css$P = {"root":"a-E0Ar","multiline":"-fgNUh","vertical-padding-24":"gIc885","vertical-padding-30":"tPv41U","vertical-padding-36":"OQiIbE","vertical-padding-42":"_2OOcEm","vertical-padding-48":"X8Zc8N","text":"_6M6hyd","verticalPadding24":"gIc885","verticalPadding30":"tPv41U","verticalPadding36":"OQiIbE","verticalPadding42":"_2OOcEm","verticalPadding48":"X8Zc8N"};

function PickerItem(props) {
    var _a;
    const { highlightSearchMatches = true, size, avatarUrl, isLoading, isDisabled, icon, cx, } = props;
    const itemSize = size || settings.sizes.defaults.pickerItem;
    const isMultiline = !!(props.title && props.subtitle);
    const { search } = (_a = props.dataSourceState) !== null && _a !== void 0 ? _a : {};
    const title = highlightSearchMatches ? getHighlightedSearchMatches(props.title, search) : props.title;
    const subtitle = highlightSearchMatches ? getHighlightedSearchMatches(props.subtitle, search) : props.subtitle;
    return (React__namespace.createElement(FlexCell, { width: "auto", cx: [css$P.root, 'uui-typography', cx] },
        React__namespace.createElement(FlexRow, { size: itemSize, cx: isMultiline && [css$P.multiline, css$P[`vertical-padding-${itemSize}`]], columnGap: "12" },
            avatarUrl && (React__namespace.createElement(uuiComponents.Avatar, { isLoading: isLoading, img: avatarUrl, size: getAvatarSize(itemSize, isMultiline).toString() })),
            icon && React__namespace.createElement(uuiComponents.IconContainer, { icon: icon }),
            React__namespace.createElement(FlexCell, { width: "auto" },
                title && (React__namespace.createElement(Text, { size: itemSize, cx: css$P.text, color: isDisabled ? 'disabled' : 'primary' }, isLoading ? React__namespace.createElement(TextPlaceholder, { wordsCount: 2 }) : title)),
                subtitle && (React__namespace.createElement(Text, { size: itemSize, color: isDisabled ? 'disabled' : 'secondary', cx: css$P.text }, isLoading ? React__namespace.createElement(TextPlaceholder, { wordsCount: 2 }) : subtitle))))));
}
function getAvatarSize(size, isMultiline) {
    return settings.sizes.pickerItem.avatar[isMultiline ? 'multiline' : 'rest'][size];
}

function PickerModal(props) {
    const { view, selection, dataSourceStateLens, dataSourceState, getDataSourceState, getName, clearSelection, getRows, getListProps, getFooterProps, isSingleSelect, handleDataSourceValueChange, } = uuiComponents.usePickerModal(props);
    const getSubtitle = ({ path }, { search }) => {
        if (!search)
            return;
        return path
            .map(({ value }) => getName(value))
            .filter(Boolean)
            .join(' / ');
    };
    const renderItem = (item, rowProps, dsState) => {
        const { flattenSearchResults } = view.getConfig();
        return (React__namespace.default.createElement(PickerItem, Object.assign({ title: getName(item), size: "36", dataSourceState: dsState }, (flattenSearchResults ? { subtitle: getSubtitle(rowProps, dataSourceState) } : {}), rowProps)));
    };
    const renderRow = (rowProps) => {
        return props.renderRow ? (props.renderRow(rowProps, dataSourceState)) : (React__namespace.default.createElement(DataPickerRow, Object.assign({}, rowProps, { key: rowProps.rowKey, padding: "24", size: "36", renderItem: (item, itemProps) => renderItem(item, itemProps, dataSourceState) })));
    };
    const renderFooter = () => {
        const hasSelection = view.getSelectedRowsCount() > 0;
        const rowsCount = view.getListProps().rowsCount;
        const isEmptyRowsAndHasNoSelection = (rowsCount === 0 && !hasSelection);
        return (React__namespace.default.createElement(React__namespace.default.Fragment, null,
            view.selectAll && (React__namespace.default.createElement(LinkButton, { caption: hasSelection ? i18n.pickerModal.clearAllButton : i18n.pickerModal.selectAllButton, onClick: hasSelection ? () => clearSelection() : () => view.selectAll.onValueChange(true), isDisabled: isEmptyRowsAndHasNoSelection })),
            React__namespace.default.createElement(uuiComponents.FlexSpacer, null),
            React__namespace.default.createElement(Button, { fill: "outline", color: "secondary", caption: i18n.pickerModal.cancelButton, onClick: () => props.abort() }),
            React__namespace.default.createElement(Button, { color: "primary", caption: i18n.pickerModal.selectButton, onClick: () => props.success(selection) })));
    };
    const renderNotFound = () => {
        return props.renderNotFound ? (props.renderNotFound({ search: dataSourceState.search, onClose: () => props.success(null) })) : (React__namespace.default.createElement("div", { className: css$Q.noFoundModalContainer },
            React__namespace.default.createElement(uuiComponents.IconContainer, { cx: css$Q.noFoundModalContainerIcon, icon: ForwardRef$s }),
            React__namespace.default.createElement(Text, { cx: css$Q.noFoundModalContainerText, fontWeight: "600", fontSize: "16", lineHeight: "24", color: "primary", size: "36" }, i18n.dataPickerBody.noRecordsMessage),
            React__namespace.default.createElement(Text, { cx: css$Q.noFoundModalContainerText, fontSize: "12", lineHeight: "18", color: "primary", size: "36" }, i18n.dataPickerBody.noRecordsSubTitle)));
    };
    const dataRows = getRows();
    const rows = dataRows.map((row) => renderRow(row));
    return (React__namespace.default.createElement(ModalBlocker, Object.assign({}, props),
        React__namespace.default.createElement(ModalWindow, { width: 600, height: 700 },
            React__namespace.default.createElement(ModalHeader, { title: props.caption || i18n.pickerModal.headerTitle, onClose: () => props.abort() }),
            React__namespace.default.createElement(FlexCell, { cx: css$Q.subHeaderWrapper },
                React__namespace.default.createElement(FlexRow, { vPadding: "24" },
                    React__namespace.default.createElement(SearchInput, Object.assign({}, dataSourceStateLens.prop('search').toProps(), { onKeyDown: (e) => uuiComponents.handleDataSourceKeyboard({
                            value: getDataSourceState(),
                            onValueChange: handleDataSourceValueChange,
                            listView: view,
                            rows: dataRows,
                            searchPosition: 'body',
                        }, e), autoFocus: true, placeholder: i18n.pickerModal.searchPlaceholder, rawProps: { dir: 'auto' } }))),
                !isSingleSelect() && (React__namespace.default.createElement(Switch, Object.assign({ cx: css$Q.switch, size: "18" }, getFooterProps().showSelected, { isDisabled: view.getSelectedRowsCount() < 1, label: "Show only selected" }))),
                props.renderFilter && React__namespace.default.createElement(FlexCell, { grow: 2 }, props.renderFilter(dataSourceStateLens.prop('filter').toProps()))),
            React__namespace.default.createElement(DataPickerBody, Object.assign({}, getListProps(), { value: getDataSourceState(), onValueChange: handleDataSourceValueChange, search: dataSourceStateLens.prop('search').toProps(), showSearch: false, rows: rows, renderNotFound: renderNotFound, editMode: "modal" })),
            React__namespace.default.createElement(ModalFooter, { padding: "24", vPadding: "24" }, props.renderFooter ? props.renderFooter(getFooterProps()) : renderFooter()))));
}

var css$O = {"tooltip":"oq9FOC"};

const PickerTogglerTag = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    var _a;
    const tagProps = Object.assign(Object.assign({}, props), { tabIndex: -1, size: settings.sizes.pickerToggler.tag[props.size], caption: ((_a = props.rowProps) === null || _a === void 0 ? void 0 : _a.isLoading) ? React__namespace.createElement(TextPlaceholder, null) : props.caption });
    if (props.isCollapsed) {
        const collapsedRows = props.collapsedRows.map((row) => props.getName(row.value)).join(', ');
        return (React__namespace.createElement(Tooltip, { key: "selected", content: collapsedRows, closeDelay: 150, closeOnMouseLeave: "boundary", cx: css$O.tooltip },
            React__namespace.createElement(Tag, Object.assign({ ref: ref, rawProps: { role: 'option' } }, tagProps))));
    }
    else {
        return React__namespace.createElement(Tag, Object.assign({ ref: ref, rawProps: { role: 'option' } }, tagProps));
    }
});

var css$N = {"uui-typography":"gG5rLx","hero-header":"_5FzjQG","promo-header":"YeRo-8","uui-critical":"yAKodB","uui-info":"AIMgZ8","uui-success":"DhIpm2","uui-warning":"pYP0kN","uui-highlight":"MTtiL8","uui-typography-size-12":"H08wXF","uui-typography-size-14":"UApdP1","uui-typography-size-16":"nkS7KC","root":"fAIjMG","mode-form":"g9v2KF","mode-cell":"Ploe04","mode-inline":"cogKTh","uuiTypography":"gG5rLx","heroHeader":"_5FzjQG","promoHeader":"YeRo-8","uuiCritical":"yAKodB","uuiInfo":"AIMgZ8","uuiSuccess":"DhIpm2","uuiWarning":"pYP0kN","uuiHighlight":"MTtiL8","uuiTypographySize12":"H08wXF","uuiTypographySize14":"UApdP1","uuiTypographySize16":"nkS7KC","modeForm":"g9v2KF","modeCell":"Ploe04","modeInline":"cogKTh"};

const defaultMode$1 = EditMode.FORM;
function applyPickerTogglerMods(mods) {
    return [
        css$N.root,
        'uui-picker_toggler',
        `uui-size-${mods.size || settings.sizes.defaults.pickerToggler}`,
        css$N['mode-' + (mods.mode || defaultMode$1)],
    ];
}
function PickerTogglerComponent(props, ref) {
    const renderItem = (itemProps) => {
        const itemPropsWithSize = Object.assign(Object.assign({}, itemProps), { size: (props.size || settings.sizes.defaults.pickerToggler) });
        if (!!props.renderItem) {
            return props.renderItem(itemPropsWithSize);
        }
        return (React__namespace.createElement(PickerTogglerTag, Object.assign({}, itemPropsWithSize, { getName: props.getName })));
    };
    return (React__namespace.createElement(uuiComponents.PickerToggler, Object.assign({}, props, { ref: ref, cx: [applyPickerTogglerMods(props), props.cx], renderItem: renderItem, getName: props.getName, cancelIcon: systemIcons.clear, dropdownIcon: systemIcons.foldingArrow })));
}
const PickerToggler = /* @__PURE__ */React__namespace.forwardRef(PickerTogglerComponent);

function PickerInputComponent(_a, ref) {
    var { highlightSearchMatches = true } = _a, props = __rest(_a, ["highlightSearchMatches"]);
    const toggleModalOpening = () => {
        const { renderFooter, rawProps } = props, restProps = __rest(props, ["renderFooter", "rawProps"]);
        context.uuiModals
            .show((modalProps) => (React__namespace.default.createElement(PickerModal, Object.assign({}, restProps, { rawProps: rawProps === null || rawProps === void 0 ? void 0 : rawProps.body }, modalProps, { caption: getPlaceholder(), initialValue: props.value, renderRow: renderRow, selectionMode: props.selectionMode, valueType: props.valueType }))))
            .then((newSelection) => {
            handleSelectionValueChange(newSelection);
        })
            .catch(() => { });
    };
    const { view, context, popperModifiers, getName, getPlaceholder, handleSelectionValueChange, getTogglerProps, getRows, handleTogglerSearchChange, toggleBodyOpening, dataSourceState, getFooterProps, getPickerBodyProps, getListProps, shouldShowBody, getSearchPosition, closePickerBody, openPickerBody, handlePickerInputKeyboard, } = uuiComponents.usePickerInput(Object.assign(Object.assign({}, props), { toggleModalOpening }));
    const dropdownRef = React.useRef(null);
    React.useImperativeHandle(ref, () => {
        if (dropdownRef.current) {
            dropdownRef.current.closePickerBody = closePickerBody;
            dropdownRef.current.openPickerBody = openPickerBody;
        }
        return dropdownRef.current;
    }, [closePickerBody, openPickerBody]);
    const getTogglerMods = () => {
        return {
            size: props.size,
            mode: props.mode ? props.mode : EditMode.FORM,
        };
    };
    const renderTarget = (targetProps) => {
        const renderTargetFn = props.renderToggler || ((props) => React__namespace.default.createElement(PickerToggler, Object.assign({}, props)));
        return (React__namespace.default.createElement(uuiCore.IEditableDebouncer, { value: targetProps.value, onValueChange: handleTogglerSearchChange, debounceDelay: props.searchDebounceDelay, render: (editableProps) => renderTargetFn(Object.assign(Object.assign(Object.assign(Object.assign({}, getTogglerMods()), targetProps), editableProps), { onKeyDown: (e) => handlePickerInputKeyboard(rows, e, editableProps.value) })) }));
    };
    const renderFooter = () => {
        const footerProps = getFooterProps();
        return props.renderFooter ? props.renderFooter(footerProps) : React__namespace.default.createElement(DataPickerFooter, Object.assign({}, footerProps, { size: props.size }));
    };
    const getRowSize = () => {
        if (uuiCore.isMobile()) {
            return settings.sizes.pickerInput.rowSize.mobile;
        }
        return props.editMode === 'modal' ? settings.sizes.pickerInput.rowSize.modal : props.size;
    };
    const getSubtitle = ({ path }, { search }) => {
        if (!search)
            return;
        return path
            .map(({ value }) => getName(value))
            .filter(Boolean)
            .join(' / ');
    };
    const renderRowItem = (item, rowProps, dsState) => {
        const { flattenSearchResults } = view.getConfig();
        return (React__namespace.default.createElement(PickerItem, Object.assign({ title: getName(item), size: getRowSize(), dataSourceState: dsState, highlightSearchMatches: highlightSearchMatches }, (flattenSearchResults ? { subtitle: getSubtitle(rowProps, dataSourceState) } : {}), rowProps)));
    };
    const renderRow = (rowProps, dsState) => {
        return props.renderRow ? (props.renderRow(rowProps, dsState)) : (React__namespace.default.createElement(DataPickerRow, Object.assign({}, rowProps, { key: rowProps.rowKey, size: getRowSize(), padding: (props.editMode === 'modal' ? settings.sizes.pickerInput.rowSize.padding.modal : settings.sizes.pickerInput.rowSize.padding.default), renderItem: (item, itemProps) => renderRowItem(item, itemProps, dsState) })));
    };
    const renderBody = (bodyProps, rows) => {
        const renderedDataRows = rows.map((row) => renderRow(row, dataSourceState));
        const bodyHeight = uuiCore.isMobile() ? document.documentElement.clientHeight : props.dropdownHeight || settings.sizes.pickerInput.height;
        const minBodyWidth = props.minBodyWidth || settings.sizes.pickerInput.width;
        return (React__namespace.default.createElement(MobileDropdownWrapper, { title: props.entityName, onClose: () => toggleBodyOpening(false), cx: [props.bodyCx], onKeyDown: bodyProps.onKeyDown, width: bodyProps.togglerWidth > minBodyWidth ? bodyProps.togglerWidth : minBodyWidth, focusLock: getSearchPosition() === 'body' },
            React__namespace.default.createElement(DataPickerBody, Object.assign({}, bodyProps, { rows: renderedDataRows, maxHeight: bodyHeight, searchSize: props.size, editMode: "dropdown", selectionMode: props.selectionMode, renderNotFound: props.renderNotFound
                    ? () => props.renderNotFound({
                        search: dataSourceState.search,
                        onClose: () => toggleBodyOpening(false),
                    })
                    : undefined })),
            renderFooter()));
    };
    const rows = getRows();
    const renderItem = props.renderTag ? props.renderTag : null;
    return (React__namespace.default.createElement(Dropdown, { renderTarget: (dropdownProps) => {
            const targetProps = getTogglerProps();
            return renderTarget(Object.assign(Object.assign(Object.assign({}, dropdownProps), targetProps), { renderItem }));
        }, renderBody: (bodyProps) => renderBody(Object.assign(Object.assign(Object.assign({}, bodyProps), getPickerBodyProps(rows)), getListProps()), rows), value: shouldShowBody(), onValueChange: !props.isDisabled && toggleBodyOpening, placement: props.dropdownPlacement, modifiers: popperModifiers, closeBodyOnTogglerHidden: !uuiCore.isMobile(), portalTarget: props.portalTarget, ref: dropdownRef }));
}
const PickerInput = /* @__PURE__ */React__namespace.default.forwardRef(PickerInputComponent);

var css$M = {"row":"gxN5tL"};

function PickerListItem(props) {
    var _a;
    let label;
    if (props.isLoading) {
        label = React__namespace.default.createElement(TextPlaceholder, { wordsCount: 2 });
    }
    else {
        label = props.getName(props.value);
    }
    let component;
    if (props.checkbox) {
        component = (React__namespace.default.createElement(Checkbox, Object.assign({}, props.checkbox, { isDisabled: props.isLoading || props.checkbox.isDisabled || props.isDisabled, label: label, value: props.isChecked, onValueChange: () => props.onCheck(props) })));
    }
    else {
        component = (React__namespace.default.createElement(RadioInput, { label: label, value: props.isSelected, isDisabled: props.isLoading || !props.isSelectable || props.isDisabled, onValueChange: () => props.onSelect(props) }));
    }
    return (React__namespace.default.createElement("div", Object.assign({ role: "option", "aria-selected": props.isSelectable ? props.isSelected : undefined, "aria-busy": props.isLoading, "aria-posinset": props.index + 1 }, (((_a = props.checkbox) === null || _a === void 0 ? void 0 : _a.isVisible) && { 'aria-checked': props.isChecked }), { className: css$M.row }), component));
}

var css$L = {"root":"-GGmeh"};

function PickerList(props) {
    const { context, view, onlySelectedView, getName, getEntityName, appendLastSelected, getSelectedIdsArray, buildRowsList, getMaxDefaultItems, dataSourceState, getModalTogglerCaption, } = uuiComponents.usePickerList(props);
    const defaultRenderRow = (row) => {
        return React__namespace.default.createElement(PickerListItem, Object.assign({ getName: (item) => getName(item) }, row, { key: row.rowKey }));
    };
    const handleShowPicker = () => {
        context.uuiModals
            .show((modalProps) => (React__namespace.default.createElement(PickerModal, Object.assign({}, modalProps, props, { caption: props.placeholder || `Please select ${getEntityName() ? getEntityName() : ''}`, initialValue: props.value, selectionMode: props.selectionMode, valueType: props.valueType }))))
            .then((value) => {
            appendLastSelected([...getSelectedIdsArray(value)]);
            props.onValueChange(value);
        })
            .catch(() => { });
    };
    const defaultRenderToggler = (props) => React__namespace.default.createElement(LinkButton, Object.assign({ caption: "Show all" }, props));
    const viewProps = view.getListProps();
    const selectedRows = onlySelectedView.getVisibleRows();
    const rows = buildRowsList();
    const showPicker = viewProps.totalCount == null || viewProps.totalCount > getMaxDefaultItems();
    const renderToggler = props.renderModalToggler || defaultRenderToggler;
    const renderRow = props.renderRow || defaultRenderRow;
    return (React__namespace.default.createElement("div", { className: cx__default.default('uui-picker-list', css$L.root) },
        !rows.length
            && (props.noOptionsMessage || (React__namespace.default.createElement(Text, { color: "secondary", size: props.size }, "No options available"))),
        rows.map((row) => renderRow(Object.assign(Object.assign({}, row), { isDisabled: props.isDisabled }), dataSourceState)),
        showPicker
            && renderToggler({
                onClick: handleShowPicker,
                caption: getModalTogglerCaption(viewProps.totalCount, view.getSelectedRowsCount()),
                isDisabled: props.isDisabled,
            }, selectedRows)));
}

const UUI_FILTERS_PANEL_ADD_BUTTON = 'uui-filters-panel-add-button';
const UUI_FILTERS_PANEL_ADD_BUTTON_BODY = 'uui-filters-panel-add-button-body';
const UUI_FILTERS_PANEL_ITEM_BODY = 'uui-filters-panel-item-body';
const UUI_FILTERS_PANEL_ITEM_TOGGLER = 'uui-filters-panel-item-toggler';

var css$K = {"uui-typography":"bE3mvH","hero-header":"sh1q5O","promo-header":"CVA3Wy","uui-critical":"EWckcJ","uui-info":"ZY-3Z1","uui-success":"_1vqoiP","uui-warning":"sEM0Uv","uui-highlight":"_52alqu","uui-typography-size-12":"e5BR-D","uui-typography-size-14":"_14Hxcs","uui-typography-size-16":"XkuJ--","root":"fHgZj0","title-wrapper":"jV79gf","title":"rDSRNr","text-wrapper":"Ew26kt","selection":"M2TsNl","postfix":"GCV0LZ","selected":"si-JW3","uuiTypography":"bE3mvH","heroHeader":"sh1q5O","promoHeader":"CVA3Wy","uuiCritical":"EWckcJ","uuiInfo":"ZY-3Z1","uuiSuccess":"_1vqoiP","uuiWarning":"sEM0Uv","uuiHighlight":"_52alqu","uuiTypographySize12":"e5BR-D","uuiTypographySize14":"_14Hxcs","uuiTypographySize16":"XkuJ--","titleWrapper":"jV79gf","textWrapper":"Ew26kt"};

const defaultSize = '36';
const FilterPanelItemToggler = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    const togglerPickerOpened = (e) => {
        var _a;
        if (props.isDisabled)
            return;
        e.preventDefault();
        (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props);
    };
    const onKeyDownHandler = (e) => {
        if (props.isDisabled)
            return;
        if (e.key === 'Enter' && !props.isOpen) {
            e.preventDefault();
            props.toggleDropdownOpening(true);
        }
        if (e.key === 'Escape' && props.isOpen) {
            e.preventDefault();
            props.toggleDropdownOpening(false);
        }
    };
    const getTitle = props.predicateName ? `${props.title} ${props.predicateName}` : `${props.title}${props.selection ? ':' : ''}`;
    const getSelectionText = () => props.selection.map((i, index) => (React__namespace.createElement(React__namespace.Fragment, { key: `${i}${index}` },
        React__namespace.createElement(Text, { color: "primary", size: props.size, cx: css$K.selection }, i),
        (props.postfix || index !== props.selection.length - 1) && React__namespace.createElement("span", null, ",\u00A0"))));
    return (React__namespace.createElement(uuiComponents.FlexRow, Object.assign({}, props, { rawProps: {
            style: { maxWidth: `${props.maxWidth ? props.maxWidth + 'px' : 'auto'}` },
            role: 'button',
            tabIndex: props.isDisabled ? -1 : 0,
            onKeyDown: onKeyDownHandler,
        }, cx: cx__default.default(UUI_FILTERS_PANEL_ITEM_TOGGLER, css$K.root, uuiCore.uuiElement.inputBox, uuiCore.uuiMarkers.clickable, props.isOpen && uuiCore.uuiMod.opened, `size-${props.size || defaultSize}`, props.cx), onClick: togglerPickerOpened, ref: ref }),
        React__namespace.createElement(uuiComponents.FlexRow, { cx: css$K.titleWrapper },
            React__namespace.createElement(Text, { size: props.size, cx: css$K.title }, getTitle),
            props.selection && (React__namespace.createElement("div", { className: css$K.textWrapper },
                getSelectionText(),
                props.postfix && (React__namespace.createElement(Text, { color: "primary", size: props.size, cx: css$K.postfix }, props.postfix))))),
        !props.isDisabled && React__namespace.createElement(uuiComponents.IconContainer, { icon: systemIcons.foldingArrow, flipY: props.isOpen, cx: "uui-icon-dropdown" })));
});

const pickerHeight = 300;
function FilterPickerBody(_a) {
    var _b;
    var { highlightSearchMatches = true } = _a, restProps = __rest(_a, ["highlightSearchMatches"]);
    const props = Object.assign(Object.assign({}, restProps), { highlightSearchMatches });
    const shouldShowBody = () => props.isOpen;
    const { view, getName, isSingleSelect, getRows, dataSourceState, getFooterProps, getPickerBodyProps, getListProps, handleDataSourceValueChange, } = uuiComponents.usePickerInput(Object.assign(Object.assign({}, props), { shouldShowBody }));
    const prevValue = uuiCore.usePrevious(props.value);
    const prevOpened = uuiCore.usePrevious(props.isOpen);
    React__namespace.useLayoutEffect(() => {
        if (prevOpened === props.isOpen && props.isOpen
            && prevValue !== props.value && props.value !== props.emptyValue
            && props.selectionMode === 'single') {
            props.onClose();
        }
    }, [props.value]);
    const getSubtitle = ({ path }, { search }) => {
        if (!search)
            return;
        return path
            .map(({ value }) => getName(value))
            .filter(Boolean)
            .join(' / ');
    };
    const renderItem = (item, rowProps, dsState) => {
        const { flattenSearchResults } = view.getConfig();
        return (React__namespace.createElement(PickerItem, Object.assign({ title: getName(item), highlightSearchMatches: highlightSearchMatches }, (flattenSearchResults ? { subtitle: getSubtitle(rowProps, dsState) } : {}), { dataSourceState: dsState, size: "36" }, rowProps)));
    };
    const onSelect = (row) => {
        handleDataSourceValueChange((currentDataSourceState) => (Object.assign(Object.assign({}, currentDataSourceState), { search: '', selectedId: row.id })));
    };
    const renderRow = (rowProps, dsState) => {
        if (rowProps.isSelectable && isSingleSelect() && props.editMode !== 'modal') {
            rowProps.onSelect = onSelect;
        }
        return props.renderRow ? (props.renderRow(rowProps, dataSourceState)) : (React__namespace.createElement(DataPickerRow, Object.assign({}, rowProps, { key: rowProps.rowKey, size: "36", padding: "12", renderItem: (item, itemProps) => renderItem(item, itemProps, dsState) })));
    };
    const renderFooter = () => {
        return React__namespace.createElement(DataPickerFooter, Object.assign({}, getFooterProps(), { size: "36" }));
    };
    const renderBody = (bodyProps, rows) => {
        const renderedDataRows = rows.map((props) => renderRow(props, dataSourceState));
        const maxHeight = uuiCore.isMobile() ? document.documentElement.clientHeight : props.maxBodyHeight || pickerHeight;
        const maxWidth = uuiCore.isMobile() ? undefined : 360;
        return (React__namespace.createElement(React__namespace.Fragment, null,
            React__namespace.createElement(DataPickerBody, Object.assign({}, bodyProps, { selectionMode: props.selectionMode, rows: renderedDataRows, maxHeight: maxHeight, maxWidth: maxWidth, searchSize: "36", editMode: "dropdown" })),
            renderFooter()));
    };
    const rows = getRows();
    return renderBody(Object.assign(Object.assign(Object.assign({}, getPickerBodyProps(rows)), getListProps()), { showSearch: (_b = props.showSearch) !== null && _b !== void 0 ? _b : true }), rows);
}

var css$J = {"container":"_5pfoqI"};

const defaultFormat = 'MMM D, YYYY';
const valueFormat = 'YYYY-MM-DD';
const supportedDateFormats = (format) => {
    return [
        ...(format ? [format] : []), 'MM/DD/YYYY', 'DD-MM-YYYY', 'DD.MM.YYYY', 'DDMMYYYY', 'YYYY/MM/DD', 'YYYY-MM-DD', 'YYYY.MM.DD', 'MMM D, YYYY', 'D/M/YYYY', 'YYYY/M/D',
    ];
};
const uuiDatePickerBodyBase = {
    container: 'uui-datepicker-container',
};
const getNewMonth = (value) => {
    return uuiDayjs.dayjs(value, valueFormat).isValid() ? uuiDayjs.dayjs(value, valueFormat) : uuiDayjs.dayjs().startOf('day');
};
const defaultRangeValue = {
    from: null,
    to: null,
};
const getMonthOnOpen = (selectedDate, focus) => {
    if (selectedDate.from && selectedDate.to && focus) {
        return uuiDayjs.dayjs(selectedDate[focus]);
    }
    else if (selectedDate.from) {
        return uuiDayjs.dayjs(selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.from);
    }
    else if (selectedDate.to) {
        return uuiDayjs.dayjs(selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.to);
    }
    return uuiDayjs.dayjs();
};
const isValidDate = (input, format, filter) => {
    var _a, _b;
    const parsedDate = uuiDayjs.dayjs(input, supportedDateFormats(format), true);
    return (_b = (_a = parsedDate.isValid()) !== null && _a !== void 0 ? _a : filter === null || filter === void 0 ? void 0 : filter(parsedDate)) !== null && _b !== void 0 ? _b : true;
};
const isValidRange = (range) => {
    const from = uuiDayjs.dayjs(range.from);
    const to = uuiDayjs.dayjs(range.to);
    return from.isValid() && to.isValid()
        ? from.valueOf() <= to.valueOf() && to.valueOf() >= from.valueOf()
        : true;
};
const getWithFrom = (selectedDate, newValue) => {
    if (uuiDayjs.dayjs(newValue).valueOf() <= uuiDayjs.dayjs(selectedDate.to).valueOf()) {
        // update range
        return {
            from: newValue,
            to: selectedDate.to,
        };
    }
    else {
        // new range value
        return {
            from: newValue,
            to: null,
        };
    }
};
const getWithTo = (selectedDate, newValue) => {
    if (!selectedDate.from) {
        // started on "to" input
        return {
            from: null,
            to: newValue,
        };
    }
    else if (uuiDayjs.dayjs(newValue).valueOf() >= uuiDayjs.dayjs(selectedDate.from).valueOf()) {
        // range is valid
        return {
            from: selectedDate.from,
            to: newValue,
        };
    }
    else {
        // range is invalid
        return {
            from: newValue,
            to: null,
        };
    }
};
const toValueDateRangeFormat = (value, format) => {
    const from = value.from;
    const to = value.to;
    const fromObj = uuiDayjs.dayjs(from, supportedDateFormats(format), true);
    const toObj = uuiDayjs.dayjs(to, supportedDateFormats(format), true);
    return {
        from: from && fromObj.isValid() ? uuiDayjs.dayjs(from, supportedDateFormats(format), true).format(valueFormat) : null,
        to: to && toObj.isValid() ? uuiDayjs.dayjs(to, supportedDateFormats(format), true).format(valueFormat) : null,
    };
};
const toCustomDateRangeFormat = (value, format) => {
    const from = value.from;
    const to = value.to;
    const customFormat = format || defaultFormat;
    const fromObj = uuiDayjs.dayjs(from, supportedDateFormats(format), true);
    const toObj = uuiDayjs.dayjs(to, supportedDateFormats(format), true);
    return {
        from: from && fromObj.isValid() ? uuiDayjs.dayjs(from, supportedDateFormats(format), true).format(customFormat) : null,
        to: to && toObj.isValid() ? uuiDayjs.dayjs(to, supportedDateFormats(format), true).format(customFormat) : null,
    };
};
const toValueDateFormat = (value, format) => {
    return value ? uuiDayjs.dayjs(value, supportedDateFormats(format), true).format(valueFormat) : null;
};
const toCustomDateFormat = (value, format) => {
    const customFormat = format || defaultFormat;
    const dayjsObj = uuiDayjs.dayjs(value, supportedDateFormats(format), true);
    return dayjsObj.isValid() ? dayjsObj.format(customFormat) : null;
};
const getPrevMonth = (currentDate) => {
    return currentDate.subtract(1, 'month');
};
const getNextMonth = (currentDate) => {
    return currentDate.add(1, 'month');
};
const getPrevYear = (currentDate) => {
    return currentDate.subtract(1, 'year');
};
const getNextYear = (currentDate) => {
    return currentDate.add(1, 'year');
};
const getPrevYearsList = (currentDate) => {
    return currentDate.subtract(16, 'year');
};
const getNextYearsList = (currentDate) => {
    return currentDate.add(16, 'year');
};

const uuiHeader = {
    container: 'uui-datepickerheader-container',
    header: 'uui-datepickerheader-header',
    navTitle: 'uui-datepickerheader-nav-title',
    navIconRight: 'uui-datepickerheader-nav-icon-right',
    navIconLeft: 'uui-datepickerheader-nav-icon-left',
};
const MIN_SOBER_YEAR = 1000;
const MAX_SOBER_YEAR = 2200;
const isYearWithinSoberRange = (value) => {
    const year = value.year();
    return year >= MIN_SOBER_YEAR && year <= MAX_SOBER_YEAR;
};
function DatePickerHeader({ navIconLeft, navIconRight, value: { month, view }, onValueChange, isDisabled, }) {
    const onSetMonth = (newMonth) => {
        onValueChange({
            view,
            month: newMonth,
        });
    };
    const onSetView = (newView) => {
        onValueChange({
            view: newView,
            month,
        });
    };
    const onLeftNavigationArrow = () => {
        switch (view) {
            case 'DAY_SELECTION':
                onSetMonth(getPrevMonth(month));
                break;
            case 'MONTH_SELECTION':
                onSetMonth(getPrevYear(month));
                break;
            case 'YEAR_SELECTION':
                onSetMonth(getPrevYearsList(month));
                break;
        }
    };
    const onRightNavigationArrow = () => {
        switch (view) {
            case 'DAY_SELECTION':
                onSetMonth(getNextMonth(month));
                break;
            case 'MONTH_SELECTION':
                onSetMonth(getNextYear(month));
                break;
            case 'YEAR_SELECTION':
                onSetMonth(getNextYearsList(month));
                break;
        }
    };
    const onCaptionClick = (newView) => {
        let nextView;
        switch (newView) {
            case 'DAY_SELECTION':
                nextView = 'MONTH_SELECTION';
                break;
            case 'MONTH_SELECTION':
                nextView = 'YEAR_SELECTION';
                break;
            case 'YEAR_SELECTION':
                nextView = 'DAY_SELECTION';
                break;
        }
        onSetView(nextView);
    };
    const title = React__namespace.useMemo(() => {
        const monthSubstr = view !== 'MONTH_SELECTION'
            ? uuiDayjs.dayjs.months()[month.month()]
            : '';
        return `${monthSubstr} ${month.year()}`;
    }, [view, month]);
    const disablePrev = view === 'YEAR_SELECTION' && !isYearWithinSoberRange(getPrevYearsList(month));
    const disableNext = view === 'YEAR_SELECTION' && !isYearWithinSoberRange(getNextYearsList(month));
    return (React__namespace.createElement("div", { className: cx__default.default(css$J.container, uuiHeader.container, cx__default.default) },
        React__namespace.createElement("header", { className: uuiHeader.header },
            React__namespace.createElement(Button, { icon: navIconLeft || ForwardRef$v, color: "secondary", fill: "ghost", cx: uuiHeader.navIconLeft, onClick: !isDisabled && (() => onLeftNavigationArrow()), isDisabled: disablePrev }),
            React__namespace.createElement(Button, { caption: title, fill: "ghost", cx: uuiHeader.navTitle, onClick: !isDisabled && (() => onCaptionClick(view)) }),
            React__namespace.createElement(Button, { icon: navIconRight || ForwardRef$u, color: "secondary", fill: "ghost", cx: uuiHeader.navIconRight, onClick: !isDisabled && (() => onRightNavigationArrow()), isDisabled: disableNext }))));
}

var css$I = {"uui-typography":"fOwkl0","hero-header":"RwIeLS","promo-header":"GKr9T7","uui-critical":"ifdDmY","uui-info":"Kz0Fir","uui-success":"HK--02","uui-warning":"eehtE2","uui-highlight":"_27-Q05","uui-typography-size-12":"lgrE1n","uui-typography-size-14":"u9kw1d","uui-typography-size-16":"ZjAZBd","root":"HZPuOK","uuiTypography":"fOwkl0","heroHeader":"RwIeLS","promoHeader":"GKr9T7","uuiCritical":"ifdDmY","uuiInfo":"Kz0Fir","uuiSuccess":"HK--02","uuiWarning":"eehtE2","uuiHighlight":"_27-Q05","uuiTypographySize12":"lgrE1n","uuiTypographySize14":"u9kw1d","uuiTypographySize16":"ZjAZBd"};

function applyDateSelectionMods() {
    return [css$I.root];
}
const Calendar = /* @__PURE__ */uuiCore.withMods(uuiComponents.Calendar, applyDateSelectionMods);

var css$H = {"uui-typography":"_2Z8GkH","hero-header":"z4cJTv","promo-header":"Uv00ao","uui-critical":"UVCZXY","uui-info":"_3wfwVg","uui-success":"bR8iVD","uui-warning":"bIFOIl","uui-highlight":"mD5LZY","uui-typography-size-12":"rsPMMF","uui-typography-size-14":"_2IiHAh","uui-typography-size-16":"BJkrAo","root":"s0VeBO","uuiTypography":"_2Z8GkH","heroHeader":"z4cJTv","promoHeader":"Uv00ao","uuiCritical":"UVCZXY","uuiInfo":"_3wfwVg","uuiSuccess":"bR8iVD","uuiWarning":"bIFOIl","uuiHighlight":"mD5LZY","uuiTypographySize12":"rsPMMF","uuiTypographySize14":"_2IiHAh","uuiTypographySize16":"BJkrAo"};

const uuiDatePickerBody = {
    wrapper: 'uui-datepickerBody-wrapper',
    separator: 'uui-datepickerBody-separator',
};
const DatePickerBody = /* @__PURE__ */React.forwardRef(DatePickerBodyComp);
function DatePickerBodyComp(props, ref) {
    const { value, onValueChange } = props;
    const [month, setMonth] = React.useState(getNewMonth(value));
    const [view, setView] = React.useState('DAY_SELECTION');
    // sync updated props with internal state
    React.useEffect(() => {
        setMonth(getNewMonth(value));
        setView('DAY_SELECTION');
    }, [value, setMonth]);
    return (React__namespace.default.createElement(StatelessDatePickerBody, Object.assign({ ref: ref }, props, { month: month, view: view, onValueChange: onValueChange, onMonthChange: (m) => setMonth(m), onViewChange: (v) => setView(v) })));
}
const StatelessDatePickerBody = /* @__PURE__ */React.forwardRef(StatelessDatePickerBodyComp);
function StatelessDatePickerBodyComp({ renderDay, isHoliday, cx: classes, filter, rawProps, value, month, view, onValueChange, onMonthChange, onViewChange, isDisabled, }, ref) {
    const selectedDate = uuiDayjs.dayjs(value);
    const onMonthClick = (newDate) => {
        onMonthChange(newDate);
        onViewChange('DAY_SELECTION');
    };
    const onYearClick = (newDate) => {
        onMonthChange(newDate);
        onViewChange('MONTH_SELECTION');
    };
    const onDayClick = (day) => {
        if (!filter || filter(day)) {
            onValueChange(day.format(valueFormat));
        }
    };
    const getView = () => {
        switch (view) {
            case 'MONTH_SELECTION':
                return (React__namespace.default.createElement(uuiComponents.MonthSelection, { selectedDate: selectedDate, value: month, onValueChange: onMonthClick }));
            case 'YEAR_SELECTION':
                return (React__namespace.default.createElement(uuiComponents.YearSelection, { selectedDate: selectedDate, value: month, onValueChange: onYearClick }));
            case 'DAY_SELECTION':
                return (React__namespace.default.createElement(Calendar, { value: selectedDate, month: month, onValueChange: onDayClick, filter: filter, renderDay: renderDay, isHoliday: isHoliday, isDisabled: isDisabled }));
        }
    };
    return (React__namespace.default.createElement("div", Object.assign({ ref: ref, className: uuiCore.cx(uuiDatePickerBodyBase.container, classes) }, rawProps),
        React__namespace.default.createElement("div", { className: uuiCore.cx(css$H.root, uuiDatePickerBody.wrapper) },
            React__namespace.default.createElement(DatePickerHeader, { value: {
                    view,
                    month,
                }, onValueChange: (newValue) => {
                    onMonthChange(newValue.month);
                    onViewChange(newValue.view);
                }, isDisabled: isDisabled }),
            getView())));
}

function FilterDatePickerBody(props) {
    var _a;
    const { value } = props;
    const context = uuiCore.useUuiContext();
    const handleValueChange = (newValue) => {
        var _a;
        props.onValueChange(newValue);
        if (props.getValueChangeAnalyticsEvent) {
            const event = props.getValueChangeAnalyticsEvent(newValue, value);
            context.uuiAnalytics.sendEvent(event);
        }
        if (newValue) {
            (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
        }
    };
    const handleBodyChange = (newValue) => {
        if (newValue && value !== newValue) {
            handleValueChange(newValue);
        }
    };
    return (React__namespace.default.createElement(React.Fragment, null,
        React__namespace.default.createElement(FlexRow, { borderBottom: true },
            React__namespace.default.createElement(DatePickerBody, { filter: props.filter, value: value, onValueChange: handleBodyChange, renderDay: props.renderDay, isHoliday: props.isHoliday, rawProps: (_a = props.rawProps) === null || _a === void 0 ? void 0 : _a.body })),
        React__namespace.default.createElement(FlexCell, { alignSelf: "stretch" },
            React__namespace.default.createElement(FlexRow, { padding: "24", vPadding: "12" },
                React__namespace.default.createElement(Text, null, value ? uuiDayjs.dayjs(value).format('MMM DD, YYYY') : ''),
                React__namespace.default.createElement(uuiComponents.FlexSpacer, null),
                React__namespace.default.createElement(LinkButton, { isDisabled: !value, caption: i18n.filterToolbar.datePicker.clearCaption, onClick: () => {
                        handleValueChange(undefined); // null is not working with setTableData filters
                    } })))));
}

var css$G = {"uui-typography":"_1s2osU","hero-header":"_49EiAE","promo-header":"ZLL1gv","uui-critical":"_5-tVIG","uui-info":"_011O5k","uui-success":"_6PtYTK","uui-warning":"ozuPrF","uui-highlight":"ZsW92j","uui-typography-size-12":"d5Mnrj","uui-typography-size-14":"y-cDCp","uui-typography-size-16":"m-3uBT","dropdown-container":"JO-J4c","date-input":"cp-KkM","date-input-group":"d7fMEs","separator":"F86Rv6","mode-form":"sG6Hik","mode-cell":"WbtmuU","uuiTypography":"_1s2osU","heroHeader":"_49EiAE","promoHeader":"ZLL1gv","uuiCritical":"_5-tVIG","uuiInfo":"_011O5k","uuiSuccess":"_6PtYTK","uuiWarning":"ozuPrF","uuiHighlight":"ZsW92j","uuiTypographySize12":"d5Mnrj","uuiTypographySize14":"y-cDCp","uuiTypographySize16":"m-3uBT","dropdownContainer":"JO-J4c","dateInput":"cp-KkM","dateInputGroup":"d7fMEs","modeForm":"sG6Hik","modeCell":"WbtmuU"};

const RangeDatePickerInput = /* @__PURE__ */React.forwardRef(({ isDisabled, isInvalid, isReadonly, size, disableClear, rawProps, value, inFocus, format, onValueChange, onFocusInput, onBlurInput, onClick, getPlaceholder, filter, id, cx: classes, }, ref) => {
    const [inputValue, setInputValue] = React.useState(toCustomDateRangeFormat(value, format));
    React.useEffect(() => {
        setInputValue(toCustomDateRangeFormat(value, format));
    }, [format, value, setInputValue]);
    const onInputChange = (newValue, inputType) => {
        setInputValue(Object.assign(Object.assign({}, inputValue), { [inputType]: newValue }));
    };
    const handleFocus = (event, inputType) => {
        onFocusInput(event, inputType);
    };
    const handleBlur = (event, inputType) => {
        onBlurInput === null || onBlurInput === void 0 ? void 0 : onBlurInput(event, inputType);
        const selectedDate = toValueDateRangeFormat(inputValue, format);
        if (isValidRange(selectedDate) && (!filter || filter(uuiDayjs.dayjs(selectedDate[inputType])))) {
            setInputValue(toCustomDateRangeFormat(selectedDate, format));
            onValueChange(selectedDate);
        }
        else {
            setInputValue(Object.assign(Object.assign({}, inputValue), { [inputType]: null }));
            onValueChange(Object.assign(Object.assign({}, selectedDate), { [inputType]: null }));
        }
    };
    const onInputKeyDown = (e) => {
        if (e.key === 'Enter') {
            onClick();
            e.preventDefault();
        }
    };
    const clearAllowed = !disableClear && inputValue.from && inputValue.to;
    return (React__namespace.default.createElement("div", { ref: ref, className: uuiCore.cx(classes, css$G.dateInputGroup, 'uui-range-date-picker', isDisabled && uuiCore.uuiMod.disabled, isReadonly && uuiCore.uuiMod.readonly, isInvalid && uuiCore.uuiMod.invalid, inFocus && uuiCore.uuiMod.focus) },
        React__namespace.default.createElement(TextInput, { icon: systemIcons.calendar, cx: uuiCore.cx(css$G.dateInput, inFocus === 'from' && uuiCore.uuiMod.focus), size: size || settings.sizes.defaults.rangeDatePicker, placeholder: getPlaceholder ? getPlaceholder('from') : i18n.rangeDatePicker.pickerPlaceholderFrom, value: inputValue.from || undefined, onValueChange: (v) => onInputChange(v || '', 'from'), onFocus: (event) => handleFocus(event, 'from'), onBlur: (event) => handleBlur(event, 'from'), isInvalid: isInvalid, isDisabled: isDisabled, isReadonly: isReadonly, isDropdown: false, rawProps: rawProps === null || rawProps === void 0 ? void 0 : rawProps.from, onClick: onClick, onKeyDown: onInputKeyDown, id: id }),
        React__namespace.default.createElement("div", { className: css$G.separator }),
        React__namespace.default.createElement(TextInput, { cx: uuiCore.cx(css$G.dateInput, inFocus === 'to' && uuiCore.uuiMod.focus), placeholder: getPlaceholder ? getPlaceholder('to') : i18n.rangeDatePicker.pickerPlaceholderTo, size: size || settings.sizes.defaults.rangeDatePicker, value: inputValue.to || undefined, onCancel: clearAllowed ? () => {
                onValueChange(defaultRangeValue);
            } : undefined, onValueChange: (v) => onInputChange(v || '', 'to'), onFocus: (e) => handleFocus(e, 'to'), onBlur: (e) => handleBlur(e, 'to'), isInvalid: isInvalid, isDisabled: isDisabled, isReadonly: isReadonly, isDropdown: false, rawProps: rawProps === null || rawProps === void 0 ? void 0 : rawProps.to, onClick: onClick, onKeyDown: onInputKeyDown })));
});

function FilterRangeDatePickerBody(props) {
    const { value: _value, format = defaultFormat } = props;
    const value = _value || defaultRangeValue; // also handles null in comparison to default value
    const context = uuiCore.useUuiContext();
    const onOpenChange = (newIsOpen) => {
        var _a, _b;
        if (!newIsOpen) {
            (_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props);
        }
        (_b = props.onOpenChange) === null || _b === void 0 ? void 0 : _b.call(props, newIsOpen);
    };
    const [inFocus, setInFocus] = React.useState('from');
    const onValueChange = (newValue) => {
        const fromChanged = (value === null || value === void 0 ? void 0 : value.from) !== (newValue === null || newValue === void 0 ? void 0 : newValue.from);
        const toChanged = (value === null || value === void 0 ? void 0 : value.to) !== (newValue === null || newValue === void 0 ? void 0 : newValue.to);
        if (fromChanged || toChanged) {
            props.onValueChange(newValue);
            if (props.getValueChangeAnalyticsEvent) {
                const event = props.getValueChangeAnalyticsEvent(newValue, value);
                context.uuiAnalytics.sendEvent(event);
            }
        }
    };
    const onBodyValueChange = (newValue) => {
        var _a;
        setInFocus((_a = newValue.inFocus) !== null && _a !== void 0 ? _a : inFocus);
        onValueChange(newValue.selectedDate);
        const toChanged = value.to !== newValue.selectedDate.to;
        const closeBody = newValue.selectedDate.from && newValue.selectedDate.to
            && inFocus === 'to'
            && toChanged;
        if (closeBody) {
            onOpenChange(false);
        }
    };
    return (React__namespace.default.createElement(React.Fragment, null,
        React__namespace.default.createElement(FlexRow, { borderBottom: true },
            React__namespace.default.createElement(RangeDatePickerBody, { value: {
                    selectedDate: value,
                    inFocus,
                }, onValueChange: onBodyValueChange, filter: props.filter, presets: props.presets })),
        React__namespace.default.createElement(FlexCell, { alignSelf: "stretch" },
            React__namespace.default.createElement(FlexRow, { padding: "24", vPadding: "12" },
                React__namespace.default.createElement(RangeDatePickerInput, { size: "30", disableClear: props.disableClear, inFocus: inFocus, format: format, value: value, onValueChange: onValueChange, onFocusInput: (event, inputType) => {
                        if (props.onFocus) {
                            props.onFocus(event, inputType);
                        }
                        setInFocus(inputType);
                    }, onBlurInput: props.onBlur }),
                React__namespace.default.createElement(uuiComponents.FlexSpacer, null),
                React__namespace.default.createElement(LinkButton, { isDisabled: !value.from && !value.to, caption: i18n.pickerModal.clearAllButton, onClick: () => onValueChange(defaultRangeValue) })))));
}

var css$F = {"container":"VfFwHQ"};

function FilterNumericBody(props) {
    var _a, _b;
    const isInRangePredicate = (props === null || props === void 0 ? void 0 : props.selectedPredicate) === 'inRange' || (props === null || props === void 0 ? void 0 : props.selectedPredicate) === 'notInRange';
    const isWrongRange = (from, to) => {
        if (!to && to !== 0)
            return false;
        return from > to;
    };
    const rangeValueHandler = (type) => (val) => {
        var _a, _b;
        const value = props.value;
        switch (type) {
            case 'from': {
                props.onValueChange({
                    from: val,
                    to: (_a = value === null || value === void 0 ? void 0 : value.to) !== null && _a !== void 0 ? _a : null,
                });
                break;
            }
            case 'to': {
                props.onValueChange({
                    from: (_b = value === null || value === void 0 ? void 0 : value.from) !== null && _b !== void 0 ? _b : null,
                    to: val,
                });
                break;
            }
        }
    };
    const renderFooter = () => {
        const size = uuiCore.isMobile() ? '48' : '36';
        const clearSelection = () => {
            if (isInRangePredicate) {
                props.onValueChange({
                    from: undefined,
                    to: undefined,
                });
            }
            else {
                props.onValueChange(undefined);
            }
        };
        const isClearDisabled = typeof props.value !== 'number' && typeof props.value !== 'object';
        return (React__namespace.default.createElement(FlexRow, { padding: "12" },
            React__namespace.default.createElement(uuiComponents.FlexSpacer, null),
            React__namespace.default.createElement(FlexCell, { width: "auto", alignSelf: "center" },
                React__namespace.default.createElement(LinkButton, { isDisabled: isClearDisabled, size: size, caption: i18n.pickerInput.clearSelectionButtonSingle, onClick: clearSelection }))));
    };
    if (isInRangePredicate) {
        const value = props.value;
        return (React__namespace.default.createElement("div", null,
            React__namespace.default.createElement(FlexRow, { padding: "12", alignItems: "center", spacing: "12", borderBottom: true, cx: css$F.container },
                React__namespace.default.createElement(FlexCell, { width: "100%" },
                    React__namespace.default.createElement(NumericInput, { value: (_a = value === null || value === void 0 ? void 0 : value.from) !== null && _a !== void 0 ? _a : null, onValueChange: rangeValueHandler('from'), size: "36", placeholder: "Min", formatOptions: { maximumFractionDigits: 2 } })),
                React__namespace.default.createElement(FlexCell, { width: "100%" },
                    React__namespace.default.createElement(NumericInput, { value: (_b = value === null || value === void 0 ? void 0 : value.to) !== null && _b !== void 0 ? _b : null, onValueChange: rangeValueHandler('to'), size: "36", placeholder: "Max", formatOptions: { maximumFractionDigits: 2 }, isInvalid: isWrongRange(value === null || value === void 0 ? void 0 : value.from, value === null || value === void 0 ? void 0 : value.to) }))),
            renderFooter()));
    }
    return (React__namespace.default.createElement("div", null,
        React__namespace.default.createElement(FlexRow, { padding: "12", alignItems: "center", borderBottom: true, cx: css$F.container },
            React__namespace.default.createElement(FlexCell, { width: 130 },
                React__namespace.default.createElement(NumericInput, { value: typeof props.value === 'number' ? props.value : null, onValueChange: props.onValueChange, size: "36", placeholder: "Enter a number", formatOptions: { maximumFractionDigits: 2 } }))),
        renderFooter()));
}

function FilterItemBody(props) {
    switch (props.type) {
        case 'singlePicker':
            return React__namespace.default.createElement(FilterPickerBody, Object.assign({}, props, { selectionMode: "single", valueType: "id" }));
        case 'numeric':
            return React__namespace.default.createElement(FilterNumericBody, Object.assign({}, props));
        case 'multiPicker':
            return React__namespace.default.createElement(FilterPickerBody, Object.assign({}, props, { selectionMode: "multi", valueType: "id" }));
        case 'datePicker':
            return React__namespace.default.createElement(FilterDatePickerBody, Object.assign({}, props, { format: props.format || 'DD/MM/YYYY' }));
        case 'rangeDatePicker':
            return React__namespace.default.createElement(FilterRangeDatePickerBody, Object.assign({}, props, { format: props.format || 'DD/MM/YYYY', value: props.value || { from: null, to: null } }));
        case 'custom':
            return props.render(props);
    }
}

var _path$r;
function _extends$r() { _extends$r = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$r.apply(this, arguments); }
var SvgActionDeleteOutline = function SvgActionDeleteOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$r({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$r || (_path$r = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M9 3v1H4v2h1v13a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V6h1V4h-5V3H9zM7 6h10v13H7V6zm2 2v9h2V8H9zm4 0v9h2V8h-2z"
  })));
};
var ForwardRef$r = /*#__PURE__*/React.forwardRef(SvgActionDeleteOutline);

var css$E = {"uui-typography":"sKUFgq","hero-header":"_9ktNIt","promo-header":"ywPLqB","uui-critical":"ldH8e4","uui-info":"ogx1WF","uui-success":"Y-R2zL","uui-warning":"YMUrtj","uui-highlight":"qv3fta","uui-typography-size-12":"rVN39q","uui-typography-size-14":"t-CqFQ","uui-typography-size-16":"_78NlGh","header":"_5hN6x0","removeButton":"ClD6I2","with-search":"rcObIx","uuiTypography":"sKUFgq","heroHeader":"_9ktNIt","promoHeader":"ywPLqB","uuiCritical":"ldH8e4","uuiInfo":"ogx1WF","uuiSuccess":"Y-R2zL","uuiWarning":"YMUrtj","uuiHighlight":"qv3fta","uuiTypographySize12":"rVN39q","uuiTypographySize14":"t-CqFQ","uuiTypographySize16":"_78NlGh","withSearch":"rcObIx"};

function useView(props, value) {
    const forceUpdate = uuiCore.useForceUpdate();
    let useViewFn;
    const dataSourceState = {};
    if (props.type === 'singlePicker' || props.type === 'multiPicker') {
        useViewFn = props.dataSource.useView.bind(props.dataSource);
        if (props.type === 'singlePicker') {
            dataSourceState.selectedId = value;
        }
        if (props.type === 'multiPicker') {
            dataSourceState.checked = value;
        }
    }
    return useViewFn === null || useViewFn === void 0 ? void 0 : useViewFn(dataSourceState, forceUpdate, { showSelectedOnly: true });
}
function FiltersToolbarItemImpl(props) {
    const { maxCount = 2 } = props;
    const isPickersType = (props === null || props === void 0 ? void 0 : props.type) === 'multiPicker' || (props === null || props === void 0 ? void 0 : props.type) === 'singlePicker';
    const isMobileScreen = uuiCore.isMobile();
    const popperModifiers = React.useMemo(() => {
        const modifiers = [
            {
                name: 'offset',
                options: { offset: isPickersType && isMobileScreen ? [0, 0] : [0, 6] },
            },
        ];
        if (isPickersType && isMobileScreen) {
            modifiers.push({
                name: 'resetTransform',
                enabled: true,
                phase: 'beforeWrite',
                requires: ['computeStyles'],
                fn: ({ state }) => {
                    state.styles.popper.transform = '';
                },
            });
        }
        return modifiers;
    }, [isPickersType]);
    const getDefaultPredicate = () => {
        var _a, _b;
        if (!props.predicates) {
            return null;
        }
        return Object.keys(props.value || {})[0] || ((_a = props.predicates.find((i) => i.isDefault)) === null || _a === void 0 ? void 0 : _a.predicate) || ((_b = props.predicates) === null || _b === void 0 ? void 0 : _b[0].predicate);
    };
    const [isOpen, isOpenChange] = React.useState(props.autoFocus);
    const [predicate, setPredicate] = React.useState(getDefaultPredicate());
    const predicateName = React__namespace.default.useMemo(() => predicate && props.predicates.find((p) => p.predicate === predicate).name, [predicate]);
    React.useEffect(() => {
        if (props.predicates && Object.keys(props.value || {})[0] && Object.keys(props.value || {})[0] !== predicate) {
            setPredicate(Object.keys(props.value || {})[0]);
        }
    }, [props.value]);
    const onValueChange = React.useCallback((value) => {
        if (props.predicates) {
            props.onValueChange({ [props.field]: { [predicate]: value } });
        }
        else {
            props.onValueChange({ [props.field]: value });
        }
    }, [props.field, props.onValueChange]);
    const removeOnclickHandler = () => {
        props.removeFilter(props.field);
    };
    const changePredicate = (val) => {
        const isInRange = (p) => p === 'inRange' || p === 'notInRange';
        if (props.type === 'numeric') {
            let predicateValue = {
                [props.field]: { [val]: getValue() },
            };
            if (isInRange(val) && !isInRange(predicate)) {
                // from simple predicate -> to Range
                predicateValue = { [props.field]: { [val]: { from: null, to: null } } };
            }
            else if (!isInRange(val) && isInRange(predicate)) {
                // from Range -> to simple predicate
                predicateValue = { [props.field]: { [val]: null } };
            }
            props.onValueChange(predicateValue);
        }
        else {
            props.onValueChange({ [props.field]: { [val]: getValue() } });
        }
        setPredicate(val);
    };
    const renderHeader = (hideTitle) => {
        var _a;
        return (React__namespace.default.createElement("div", { className: cx__default.default(css$E.header, isPickersType && ((_a = props.showSearch) !== null && _a !== void 0 ? _a : css$E.withSearch)) },
            props.predicates ? (React__namespace.default.createElement(MultiSwitch, { items: props.predicates.map((i) => ({ id: i.predicate, caption: i.name })), value: predicate, onValueChange: changePredicate, size: "24" })) : (!hideTitle && (React__namespace.default.createElement(Text, { color: "secondary", size: "24", fontSize: "14" }, props.title))),
            !(props === null || props === void 0 ? void 0 : props.isAlwaysVisible) && (React__namespace.default.createElement(LinkButton, { cx: css$E.removeButton, caption: i18n.filterToolbar.datePicker.removeCaption, onClick: removeOnclickHandler, size: "24", icon: ForwardRef$r }))));
    };
    const renderBody = (dropdownProps) => {
        const hideHeaderTitle = isPickersType && isMobileScreen;
        return isPickersType ? (React__namespace.default.createElement(MobileDropdownWrapper, Object.assign({}, dropdownProps, { cx: UUI_FILTERS_PANEL_ITEM_BODY, title: props.title, width: 360, onClose: () => isOpenChange(false) }),
            renderHeader(hideHeaderTitle),
            React__namespace.default.createElement(FilterItemBody, Object.assign({}, props, dropdownProps, { selectedPredicate: predicate, value: getValue(), onValueChange: onValueChange })))) : (React__namespace.default.createElement(DropdownContainer, Object.assign({ cx: UUI_FILTERS_PANEL_ITEM_BODY }, dropdownProps),
            renderHeader(hideHeaderTitle),
            React__namespace.default.createElement(FilterItemBody, Object.assign({}, props, dropdownProps, { selectedPredicate: predicate, value: getValue(), onValueChange: onValueChange }))));
    };
    const getValue = () => {
        var _a;
        return predicate ? (_a = props.value) === null || _a === void 0 ? void 0 : _a[predicate] : props.value;
    };
    const getPickerItemName = (item, config) => {
        if (item.isLoading) {
            return React__namespace.default.createElement(TextPlaceholder, null);
        }
        if (item.isUnknown) {
            return 'Unknown';
        }
        return config.getName ? config.getName(item.value) : item.value.name;
    };
    const view = useView(props, getValue());
    const getTogglerValue = () => {
        const currentValue = getValue();
        const defaultFormat = 'MMM DD, YYYY';
        switch (props.type) {
            case 'multiPicker': {
                let isLoading = false;
                const selection = currentValue
                    ? currentValue === null || currentValue === void 0 ? void 0 : currentValue.slice(0, maxCount).map((i) => {
                        const item = view.getById(i, null);
                        isLoading = item === null || item === void 0 ? void 0 : item.isLoading;
                        return getPickerItemName(item, props);
                    })
                    : currentValue;
                const postfix = (!isLoading && (currentValue === null || currentValue === void 0 ? void 0 : currentValue.length) > maxCount) ? ` +${(currentValue.length - maxCount).toString()} ${i18n.filterToolbar.pickerInput.itemsPlaceholder}` : null;
                return { selection, postfix };
            }
            case 'numeric': {
                const isRangePredicate = predicate === 'inRange' || predicate === 'notInRange';
                const decimalFormat = (val) => uuiCore.getSeparatedValue(val, { maximumFractionDigits: 2 });
                if ((isRangePredicate && !currentValue) || (!isRangePredicate && !currentValue && currentValue !== 0)) {
                    return { selection: undefined };
                }
                const selection = isRangePredicate
                    ? `${!(currentValue === null || currentValue === void 0 ? void 0 : currentValue.from) && (currentValue === null || currentValue === void 0 ? void 0 : currentValue.from) !== 0 ? 'Min' : decimalFormat(currentValue === null || currentValue === void 0 ? void 0 : currentValue.from)} - ${!(currentValue === null || currentValue === void 0 ? void 0 : currentValue.to) && (currentValue === null || currentValue === void 0 ? void 0 : currentValue.to) !== 0 ? 'Max' : decimalFormat(currentValue === null || currentValue === void 0 ? void 0 : currentValue.to)}`
                    : `${!currentValue && currentValue !== 0 ? 'ALL' : decimalFormat(currentValue)}`;
                return { selection: [selection] };
            }
            case 'singlePicker': {
                if (currentValue === null || currentValue === undefined) {
                    return { selection: undefined };
                }
                const item = view.getById(currentValue, null);
                const selection = getPickerItemName(item, props);
                return { selection: [selection] };
            }
            case 'datePicker': {
                return { selection: currentValue ? [uuiDayjs.dayjs(currentValue).format(props.format || defaultFormat)] : currentValue };
            }
            case 'rangeDatePicker': {
                if (!currentValue || (!currentValue.from && !currentValue.to)) {
                    return { selection: undefined };
                }
                const currentValueFrom = (currentValue === null || currentValue === void 0 ? void 0 : currentValue.from)
                    ? uuiDayjs.dayjs(currentValue === null || currentValue === void 0 ? void 0 : currentValue.from).format(props.format || defaultFormat)
                    : i18n.filterToolbar.rangeDatePicker.emptyPlaceholderFrom;
                const currentValueTo = (currentValue === null || currentValue === void 0 ? void 0 : currentValue.to)
                    ? uuiDayjs.dayjs(currentValue === null || currentValue === void 0 ? void 0 : currentValue.to).format(props.format || defaultFormat)
                    : i18n.filterToolbar.rangeDatePicker.emptyPlaceholderTo;
                const selection = `${currentValueFrom} - ${currentValueTo}`;
                return { selection: [selection] };
            }
            case 'custom': {
                const value = props.getTogglerValue(props);
                return { selection: value !== undefined ? [value] : undefined };
            }
        }
    };
    const getTogglerWidth = () => {
        if (props.togglerWidth)
            return props.togglerWidth;
        return props.type === 'datePicker' || props.type === 'rangeDatePicker' ? null : 300;
    };
    const renderTarget = (dropdownProps) => (React__namespace.default.createElement(FilterPanelItemToggler, Object.assign({}, dropdownProps, getTogglerValue(), { title: props.title, predicateName: props.value ? predicateName : null, maxWidth: getTogglerWidth(), size: props.size })));
    return (React__namespace.default.createElement(uuiComponents.Dropdown, { renderTarget: renderTarget, renderBody: renderBody, closeBodyOnTogglerHidden: !uuiCore.isMobile(), value: isOpen, onValueChange: isOpenChange, modifiers: popperModifiers }));
}
const FiltersPanelItem = /* @__PURE__ */React__namespace.default.memo(FiltersToolbarItemImpl);

var _path$q;
function _extends$q() { _extends$q = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$q.apply(this, arguments); }
var SvgActionAddOutline = function SvgActionAddOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$q({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$q || (_path$q = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M13.286 3h-2.572v7.714H3v2.572h7.714V21h2.572v-7.714H21v-2.572h-7.714V3z"
  })));
};
var ForwardRef$q = /*#__PURE__*/React.forwardRef(SvgActionAddOutline);

const normalizeFilterWithPredicates = (filter) => {
    if (!filter) {
        return {};
    }
    const result = filter;
    const keys = Object.keys(filter);
    for (let n = 0; n < keys.length; n++) {
        const key = keys[n];
        const filterValue = filter[key];
        if (filterValue && typeof filterValue === 'object') {
            if ('from' in filterValue && 'to' in filterValue) {
                continue;
            }
            if ('in' in filterValue && (!Array.isArray(filterValue.in) || !filterValue.in.length)) {
                delete filter[key];
            }
            if ('nin' in filterValue && (!Array.isArray(filterValue.nin) || !filterValue.nin.length)) {
                delete filter[key];
            }
            if ('inRange' in filterValue) {
                if (!filterValue.inRange || (!filterValue.inRange.from && !filterValue.inRange.to)) {
                    delete filter[key];
                }
            }
            if ('notInRange' in filterValue) {
                if (!filterValue.notInRange || (!filterValue.notInRange.from && !filterValue.notInRange.to)) {
                    delete filter[key];
                }
            }
            Object.keys(filterValue).forEach((predicate) => {
                if (filterValue[predicate] === null || filterValue[predicate] === undefined) {
                    delete filter[key];
                }
            });
        }
    }
    return result;
};
function FiltersToolbarImpl(props) {
    const { filters, tableState, setTableState } = props;
    const [newFilterId, setNewFilterId] = React.useState(null);
    const pickerInputRef = React.useRef(null);
    const dataSource = uuiCore.useArrayDataSource({
        items: filters,
        getId: (item) => item.field,
    }, []);
    const onFiltersChange = (updatedFilters) => {
        var _a, _b;
        const newConfig = {};
        const newFilter = {};
        const filtersConfig = Object.values((_a = tableState.filtersConfig) !== null && _a !== void 0 ? _a : {});
        const sortedOrders = uuiCore.orderBy(filtersConfig, ({ order }) => order);
        let lastItemOrder = (sortedOrders === null || sortedOrders === void 0 ? void 0 : sortedOrders.length) ? (_b = sortedOrders[sortedOrders.length - 1]) === null || _b === void 0 ? void 0 : _b.order : null;
        updatedFilters.forEach((filter) => {
            var _a, _b;
            let order = (_b = (_a = tableState === null || tableState === void 0 ? void 0 : tableState.filtersConfig) === null || _a === void 0 ? void 0 : _a[filter === null || filter === void 0 ? void 0 : filter.field]) === null || _b === void 0 ? void 0 : _b.order;
            if (!order) {
                order = uuiCore.getOrderBetween(lastItemOrder, null);
                lastItemOrder = order;
            }
            newConfig[filter.field] = { isVisible: true, order: order };
            // Remove unselected filters from filter object
            if (tableState.filter) {
                newFilter[filter.field] = tableState.filter[filter.field];
            }
        });
        setTableState(Object.assign(Object.assign({}, tableState), { filtersConfig: newConfig, filter: newFilter }));
    };
    const handleFilterChange = (newFilter) => {
        const filter = normalizeFilterWithPredicates(Object.assign(Object.assign({}, tableState.filter), newFilter));
        setTableState(Object.assign(Object.assign({}, tableState), { filter: filter }));
    };
    const removeFilter = (field) => {
        const filterConfig = Object.assign({}, tableState.filtersConfig);
        delete filterConfig[field];
        const filter = Object.assign({}, tableState.filter);
        delete filter[field];
        const newTableState = Object.assign(Object.assign({}, tableState), { filtersConfig: filterConfig, filter: filter });
        setTableState(Object.assign({}, newTableState));
    };
    const selectedFilters = React.useMemo(() => {
        const filtersConfig = tableState.filtersConfig || {};
        return filters.filter((filter) => {
            return filter.isAlwaysVisible || (filtersConfig[filter === null || filter === void 0 ? void 0 : filter.field] ? filtersConfig[filter === null || filter === void 0 ? void 0 : filter.field].isVisible : false);
        });
    }, [tableState.filtersConfig, filters]);
    const sortedActiveFilters = React.useMemo(() => {
        return uuiCore.orderBy(selectedFilters, (f) => { var _a, _b; return (_b = (_a = tableState.filtersConfig) === null || _a === void 0 ? void 0 : _a[f.field]) === null || _b === void 0 ? void 0 : _b.order; });
    }, [filters, tableState.filtersConfig]);
    const renderAddFilterToggler = React.useCallback((togglerProps) => {
        var _a;
        return (React__namespace.default.createElement(Button, { size: (_a = props.size) !== null && _a !== void 0 ? _a : '36', onClick: togglerProps.onClick, ref: togglerProps.ref, caption: i18n.filterToolbar.addCaption, icon: ForwardRef$q, iconPosition: "left", fill: "ghost", color: "primary", cx: UUI_FILTERS_PANEL_ADD_BUTTON }));
    }, []);
    const getRowOptions = React.useCallback((item) => ({
        isDisabled: item.isAlwaysVisible,
        checkbox: {
            isVisible: true,
            isDisabled: item.isAlwaysVisible,
        },
    }), []);
    const isAllFiltersAlwaysVisible = props.filters.every((i) => i.isAlwaysVisible);
    React.useEffect(() => {
        var _a, _b;
        if (sortedActiveFilters.length && newFilterId && sortedActiveFilters.find(({ field }) => field === newFilterId)) {
            // PickerInput should be closed after filterId update and opening the filter's body.
            // Otherwise, the focus will be not set in the search input of the filter's body.
            (_b = (_a = pickerInputRef.current) === null || _a === void 0 ? void 0 : _a.closePickerBody) === null || _b === void 0 ? void 0 : _b.call(_a);
            // Reset new filter id, after first render with autofocus
            setNewFilterId(null);
        }
    }, [newFilterId, sortedActiveFilters]);
    return (React__namespace.default.createElement(React__namespace.default.Fragment, null,
        sortedActiveFilters.map((f) => {
            var _a;
            return (React__namespace.default.createElement(uuiComponents.FlexCell, { width: "auto", key: f.field },
                React__namespace.default.createElement(FiltersPanelItem, Object.assign({}, f, { value: (_a = tableState.filter) === null || _a === void 0 ? void 0 : _a[f.field], onValueChange: handleFilterChange, key: f.field, autoFocus: newFilterId === f.field, removeFilter: removeFilter, size: props.size }))));
        }),
        !isAllFiltersAlwaysVisible && (React__namespace.default.createElement(PickerInput, { dataSource: dataSource, value: selectedFilters, onValueChange: onFiltersChange, selectionMode: "multi", valueType: "entity", renderRow: (props) => (React__namespace.default.createElement(DataPickerRow, Object.assign({}, props, { padding: "12", key: props.key, onCheck: (row) => {
                    props.onCheck && props.onCheck(row);
                    setNewFilterId(row.value.field);
                }, renderItem: (item, rowProps) => React__namespace.default.createElement(PickerItem, Object.assign({}, rowProps, { title: item.title })) }))), getName: (i) => i.title, renderToggler: renderAddFilterToggler, emptyValue: [], getRowOptions: getRowOptions, fixedBodyPosition: true, size: props.size, bodyCx: UUI_FILTERS_PANEL_ADD_BUTTON_BODY, ref: pickerInputRef }))));
}
const FiltersPanel = /* @__PURE__ */React__namespace.default.memo(FiltersToolbarImpl);

var css$D = {"divider":"_7aR79c","dropdownDeleteIcon":"ZoWfDn","presetsWrapper":"iQBgXi","addPresetContainer":"_--bMQq","dropContainer":"yH-pgw"};

var _path$p;
function _extends$p() { _extends$p = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$p.apply(this, arguments); }
var SvgNavigationMoreVertOutline = function SvgNavigationMoreVertOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$p({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$p || (_path$p = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$p = /*#__PURE__*/React.forwardRef(SvgNavigationMoreVertOutline);

var _path$o;
function _extends$o() { _extends$o = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$o.apply(this, arguments); }
var SvgNavigationRefreshOutline = function SvgNavigationRefreshOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$o({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$o || (_path$o = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M12 20c-2.233 0-4.125-.775-5.675-2.325C4.775 16.125 4 14.233 4 12c0-2.233.775-4.125 2.325-5.675C7.875 4.775 9.767 4 12 4c1.15 0 2.25.238 3.3.713A7.617 7.617 0 0 1 18 6.75V4h2v7h-7V9h4.2a5.837 5.837 0 0 0-2.187-2.2A5.93 5.93 0 0 0 12 6c-1.667 0-3.083.583-4.25 1.75C6.583 8.917 6 10.333 6 12c0 1.667.583 3.083 1.75 4.25C8.917 17.417 10.333 18 12 18a5.863 5.863 0 0 0 3.475-1.1A5.81 5.81 0 0 0 17.65 14h2.1c-.467 1.767-1.417 3.208-2.85 4.325S13.833 20 12 20z"
  })));
};
var ForwardRef$o = /*#__PURE__*/React.forwardRef(SvgNavigationRefreshOutline);

var _path$n;
function _extends$n() { _extends$n = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$n.apply(this, arguments); }
var SvgActionSaveOutline = function SvgActionSaveOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$n({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$n || (_path$n = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M17 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm2 16H5V5h11.17L19 7.83V19zm-7-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zM6 6h9v4H6V6z"
  })));
};
var ForwardRef$n = /*#__PURE__*/React.forwardRef(SvgActionSaveOutline);

var _path$m;
function _extends$m() { _extends$m = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$m.apply(this, arguments); }
var SvgContentEditUndoOutline = function SvgContentEditUndoOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$m({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$m || (_path$m = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M22.5 15a8.71 8.71 0 0 0-.712-3.513 9.158 9.158 0 0 0-1.926-2.85 9.152 9.152 0 0 0-2.85-1.925A8.709 8.709 0 0 0 13.5 6a8.71 8.71 0 0 0-3.513.712 9.167 9.167 0 0 0-2.85 1.925 9.154 9.154 0 0 0-1.924 2.85A8.705 8.705 0 0 0 4.5 15v.15L2.95 13.6 1.5 15l4 4 4-4-1.45-1.4-1.55 1.55V15c0-1.95.679-3.604 2.037-4.962C9.896 8.679 11.55 8 13.5 8c1.95 0 3.604.68 4.962 2.038C19.821 11.396 20.5 13.05 20.5 15h2z"
  })));
};
var ForwardRef$m = /*#__PURE__*/React.forwardRef(SvgContentEditUndoOutline);

var _path$l;
function _extends$l() { _extends$l = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$l.apply(this, arguments); }
var SvgActionCopyContentOutline = function SvgActionCopyContentOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$l({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$l || (_path$l = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M19 19H9V9h10M9 7a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2H9zm5-4H5a2 2 0 0 0-2 2v9h2V5h9V3z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$l = /*#__PURE__*/React.forwardRef(SvgActionCopyContentOutline);

var _path$k;
function _extends$k() { _extends$k = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$k.apply(this, arguments); }
var SvgContentEditFill = function SvgContentEditFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$k({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$k || (_path$k = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m19.3 8.925-4.25-4.2 1.4-1.4a1.92 1.92 0 0 1 1.413-.575 1.92 1.92 0 0 1 1.412.575l1.4 1.4c.383.383.583.846.6 1.388a1.806 1.806 0 0 1-.55 1.387L19.3 8.925zM17.85 10.4 7.25 21H3v-4.25l10.6-10.6 4.25 4.25z"
  })));
};
var ForwardRef$k = /*#__PURE__*/React.forwardRef(SvgContentEditFill);

var _path$j, _path2$3;
function _extends$j() { _extends$j = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$j.apply(this, arguments); }
var SvgContentLinkOutline = function SvgContentLinkOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$j({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$j || (_path$j = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M12 4.93A5 5 0 0 1 19.07 12l-1.06 1.06c.12-.85.022-1.725-.295-2.534a3 3 0 0 0-4.302-4.182l-2.828 2.828a3 3 0 0 0-.07 4.17l.07.073-1.415 1.414a5 5 0 0 1 0-7.071L12 4.929z"
  })), _path2$3 || (_path2$3 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m4.93 12 .989-.99a5.018 5.018 0 0 0 .297 2.54 3 3 0 0 0 4.37 4.107l2.829-2.828a3 3 0 0 0-.828-4.83l1.464-1.463a5 5 0 0 1 .778 7.707L12 19.071a5 5 0 0 1-7.07-7.07z"
  })));
};
var ForwardRef$j = /*#__PURE__*/React.forwardRef(SvgContentLinkOutline);

var css$C = {"delete-button":"ONjxQd","tab-button":"DpiPzH","targetOpen":"Ugn6q8","deleteButton":"ONjxQd","tabButton":"DpiPzH"};

function PresetActionsDropdown(props) {
    const { uuiNotifications } = uuiCore.useUuiContext();
    const copyUrlToClipboard = React.useCallback(() => __awaiter(this, void 0, void 0, function* () {
        yield navigator.clipboard.writeText(props.getPresetLink(props.preset));
        successNotificationHandler('Link copied!');
    }), []);
    const saveInCurrent = React.useCallback((preset) => __awaiter(this, void 0, void 0, function* () {
        const newPreset = Object.assign(Object.assign({}, preset), { filter: props.tableState.filter, sorting: props.tableState.sorting, columnsConfig: props.tableState.columnsConfig, filtersConfig: props.tableState.filtersConfig, viewState: props.tableState.viewState });
        yield props.updatePreset(newPreset);
        successNotificationHandler('Changes saved!');
    }), [
        props.tableState.filter, props.tableState.columnsConfig, props.tableState.filtersConfig,
    ]);
    const successNotificationHandler = React.useCallback((text) => {
        uuiNotifications
            .show((props) => (React__namespace.default.createElement(SuccessNotification, Object.assign({}, props),
            React__namespace.default.createElement(Text, { size: "36", fontSize: "14" }, text))), { duration: 3 })
            .catch(() => null);
    }, []);
    const saveInCurrentHandler = React.useCallback(() => {
        saveInCurrent(props.preset);
    }, [props.preset]);
    const discardAllChangesHandler = React.useCallback(() => {
        props.choosePreset(props.preset);
    }, [props.preset]);
    const duplicateHandler = React.useCallback(() => {
        props.duplicatePreset(props.preset);
    }, [props.preset]);
    const deleteHandler = React.useCallback(() => __awaiter(this, void 0, void 0, function* () {
        yield props.deletePreset(props.preset);
    }), [
        props.activePresetId, props.deletePreset, props.preset,
    ]);
    const renderBody = (dropdownProps) => {
        const isReadonlyPreset = props.preset.isReadonly;
        const isPresetChanged = props.activePresetId === props.preset.id && props.hasPresetChanged(props.preset);
        const isRenameAvailable = props.preset.id === props.activePresetId && !isReadonlyPreset;
        return (React__namespace.default.createElement(DropdownMenuBody, Object.assign({}, dropdownProps),
            isPresetChanged && (React__namespace.default.createElement(React__namespace.default.Fragment, null,
                !isReadonlyPreset && (React__namespace.default.createElement(DropdownMenuButton, { key: `${props.preset.id}-save-in-current`, icon: ForwardRef$o, caption: "Save in current", onClick: saveInCurrentHandler })),
                React__namespace.default.createElement(DropdownMenuButton, { key: `${props.preset.id}-save-as-new`, icon: ForwardRef$n, caption: "Save as new", onClick: props.addPreset }),
                React__namespace.default.createElement(DropdownMenuButton, { key: `${props.preset.id}-discard`, icon: ForwardRef$m, caption: "Discard all changes", onClick: discardAllChangesHandler }),
                React__namespace.default.createElement(DropdownMenuSplitter, { key: "discard-splitter" }))),
            isRenameAvailable && (React__namespace.default.createElement(DropdownMenuButton, { key: `${props.preset.id}-rename`, icon: ForwardRef$k, caption: "Rename", onClick: props.renamePreset })),
            React__namespace.default.createElement(DropdownMenuButton, { key: `${props.preset.id}-duplicate`, icon: ForwardRef$l, caption: "Duplicate", onClick: duplicateHandler }),
            React__namespace.default.createElement(DropdownMenuButton, { key: `${props.preset.id}-copyLink`, icon: ForwardRef$j, caption: "Copy Link", onClick: copyUrlToClipboard }),
            !isReadonlyPreset && (React__namespace.default.createElement(React__namespace.default.Fragment, null,
                React__namespace.default.createElement(DropdownMenuSplitter, { key: "delete-splitter" }),
                React__namespace.default.createElement(DropdownMenuButton, { icon: ForwardRef$r, caption: "Delete", cx: css$C.deleteButton, onClick: deleteHandler })))));
    };
    const renderTarget = React.useCallback((dropdownProps) => {
        return (React__namespace.default.createElement(IconButton, Object.assign({ cx: [css$C.tabButton, dropdownProps.isOpen && css$C.targetOpen], color: props.preset.id === props.activePresetId ? 'primary' : 'neutral' }, dropdownProps, { icon: ForwardRef$p, size: "18" })));
    }, []);
    return (React__namespace.default.createElement(Dropdown, { renderBody: renderBody, renderTarget: renderTarget, placement: "bottom-end", modifiers: [{ name: 'offset', options: { offset: [0, 22] } }] }));
}

var css$B = {"preset-input-cell":"SyZQGd","preset-input":"_95ljlD","presetInputCell":"SyZQGd","presetInput":"_95ljlD"};

const UUI_PRESETS_PANEL_ADD_BUTTON = 'uui-presets-panel-add-button';
const UUI_PRESETS_PANEL_MORE_BUTTON = 'uui-presets-panel-more-button';
const UUI_PRESETS_PANEL_INPUT = 'uui-presets-panel-input';
const UUI_PRESETS_PANEL_PRESET = 'uui-presets-panel-preset';

function PresetInput(props) {
    var _a;
    const [presetCaption, setPresetCaption] = React.useState(((_a = props.preset) === null || _a === void 0 ? void 0 : _a.name) || '');
    const [readonly, setReadonly] = React.useState(false);
    const cancelActionHandler = React.useCallback(() => {
        setPresetCaption('');
        props.onCancel();
    }, [props.onCancel]);
    const acceptActionHandler = React.useCallback(() => __awaiter(this, void 0, void 0, function* () {
        setReadonly(() => true);
        if (presetCaption) {
            yield props.onSuccess(presetCaption);
        }
        props.onCancel();
        setReadonly(() => false);
    }), [presetCaption]);
    const newPresetOnBlurHandler = React.useCallback(() => {
        if (presetCaption.length) {
            return;
        }
        props.onCancel();
    }, [presetCaption.length, props.onCancel]);
    return (React__namespace.default.createElement(FlexCell, { cx: [css$B.presetInputCell, UUI_PRESETS_PANEL_INPUT], minWidth: 180 },
        React__namespace.default.createElement(TextInput, { cx: css$B.presetInput, onValueChange: setPresetCaption, value: presetCaption, onCancel: cancelActionHandler, onAccept: acceptActionHandler, onBlur: newPresetOnBlurHandler, autoFocus: true, maxLength: 50, isReadonly: readonly })));
}

var css$A = {"preset":"_1N9D09","activePreset":"jQEFOD"};

function Preset(props) {
    const [isRenamePreset, setIsRenamePreset] = React.useState(false);
    const choosePresetHandler = React.useCallback(() => props.choosePreset(props.preset), [props]);
    const cancelRenamePreset = React.useCallback(() => {
        setIsRenamePreset(() => false);
    }, []);
    const setPresetForRename = React.useCallback(() => {
        if (!isRenamePreset) {
            setIsRenamePreset(() => true);
        }
    }, []);
    const handlePresetRename = React.useCallback((name) => {
        const newPreset = Object.assign(Object.assign({}, props.preset), { name: name });
        return props.updatePreset(newPreset);
    }, [props.preset]);
    const isPresetActive = props.activePresetId === props.preset.id;
    return (React__namespace.default.createElement(FlexCell, { key: props.preset.id, alignSelf: "center", width: "auto" }, isRenamePreset ? (React__namespace.default.createElement(PresetInput, { onCancel: cancelRenamePreset, onSuccess: handlePresetRename, preset: props.preset })) : (React__namespace.default.createElement(TabButton, { caption: props.preset.name, onClick: !isPresetActive && choosePresetHandler, cx: [css$A.preset, isPresetActive && css$A.activePreset, UUI_PRESETS_PANEL_PRESET], size: "60", withNotify: isPresetActive && props.hasPresetChanged(props.preset), icon: () => React__namespace.default.createElement(PresetActionsDropdown, Object.assign({ renamePreset: setPresetForRename }, props)), iconPosition: "right", isLinkActive: isPresetActive }))));
}

var _path$i;
function _extends$i() { _extends$i = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$i.apply(this, arguments); }
var SvgActionDeleteForeverFill = function SvgActionDeleteForeverFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$i({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$i || (_path$i = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M7 21c-1.1 0-2-.9-2-2V8h14v11c0 1.1-.9 2-2 2H7zm8-17h5v2H4V4h5V3h6v1zM9.4 18.5l2.6-2.6 2.6 2.6 1.4-1.4-2.6-2.6 2.6-2.6-1.4-1.4-2.6 2.6-2.6-2.6L8 11.9l2.6 2.6L8 17.1l1.4 1.4z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$i = /*#__PURE__*/React.forwardRef(SvgActionDeleteForeverFill);

function PresetsPanel(props) {
    const [isAddingPreset, setIsAddingPreset] = React.useState(false);
    const setAddingPreset = React.useCallback(() => {
        setIsAddingPreset(true);
    }, []);
    const cancelAddingPreset = React.useCallback(() => {
        setIsAddingPreset(false);
    }, []);
    const presetApi = __rest(props, ["presets"]);
    const renderPreset = (preset) => {
        return React__namespace.default.createElement(Preset, Object.assign({ key: preset.id, preset: preset, addPreset: setAddingPreset }, presetApi));
    };
    const renderAddPresetButton = React.useCallback(() => {
        return (React__namespace.default.createElement("div", { key: "addingPresetBlock", className: css$D.addPresetContainer }, !isAddingPreset ? (React__namespace.default.createElement(Button, { cx: UUI_PRESETS_PANEL_ADD_BUTTON, size: "36", onClick: setAddingPreset, caption: i18n.presetPanel.addCaption, icon: ForwardRef$q, iconPosition: "left", fill: "ghost", color: "primary" })) : (React__namespace.default.createElement(PresetInput, { onCancel: cancelAddingPreset, onSuccess: props.createNewPreset }))));
    }, [isAddingPreset]);
    const onPresetDropdownSelect = (preset) => {
        props.choosePreset(preset.preset);
    };
    const renderMoreButtonDropdown = (item, hiddenItems) => {
        return (React__namespace.default.createElement(Dropdown, { key: "more", renderTarget: (props) => (React__namespace.default.createElement(FlexRow, null,
                React__namespace.default.createElement("div", { className: css$D.divider }),
                React__namespace.default.createElement(Button, Object.assign({ cx: UUI_PRESETS_PANEL_MORE_BUTTON, fill: "ghost", color: "secondary", caption: `${(hiddenItems === null || hiddenItems === void 0 ? void 0 : hiddenItems.length) || ''} more` }, props)))), renderBody: (propsBody) => (React__namespace.default.createElement(DropdownMenuBody, Object.assign({ minWidth: 230 }, propsBody),
                React__namespace.default.createElement(uuiComponents.ScrollBars, null, hiddenItems.map((hiddenItem) => (React__namespace.default.createElement(DropdownMenuButton, { key: hiddenItem.preset.id, onClick: () => onPresetDropdownSelect(hiddenItem), caption: hiddenItem.preset.name, icon: !hiddenItem.preset.isReadonly && ForwardRef$i, iconPosition: "right", cx: css$D.dropdownDeleteIcon, onIconClick: !hiddenItem.preset.isReadonly && (() => props.deletePreset(hiddenItem.preset)) })))))) }));
    };
    const getPresetPriority = (preset, index) => {
        return preset.id === props.activePresetId ? 100499 : 1000 - index;
    };
    const getPanelItems = () => {
        return [
            ...uuiCore.orderBy(props.presets, ({ order }) => order)
                .map((preset, index) => ({
                id: preset.id.toString(),
                render: () => renderPreset(preset),
                priority: getPresetPriority(preset, index),
                preset: preset,
            })),
            {
                id: 'collapsedContainer', render: renderMoreButtonDropdown, priority: 100501, collapsedContainer: true,
            },
            { id: 'addPreset', render: renderAddPresetButton, priority: 100501 },
        ];
    };
    return (React__namespace.default.createElement(FlexCell, { grow: 1, minWidth: 310, rawProps: props.rawProps },
        React__namespace.default.createElement(FlexRow, { size: null, columnGap: "12", cx: css$D.presetsWrapper },
            React__namespace.default.createElement(uuiComponents.AdaptivePanel, { items: getPanelItems() }))));
}

const defaultPredicates = {
    numeric: [
        { predicate: 'eq', name: '=', isDefault: true }, { predicate: 'neq', name: '≠' }, { predicate: 'lte', name: '≤' }, { predicate: 'gte', name: '≥' }, { predicate: 'inRange', name: 'In Range' },
    ],
    multiPicker: [{ predicate: 'in', name: 'is', isDefault: true }, { predicate: 'nin', name: 'is not' }],
    rangeDatePicker: [{ predicate: 'inRange', name: 'In Range', isDefault: true }, { predicate: 'notInRange', name: 'Not in Range' }],
};

const useColumnsWithFilters = (initialColumns, filters) => {
    const makeFilterRenderCallback = React.useCallback((key) => function (filterLens, dropdownProps) {
        const filter = filters === null || filters === void 0 ? void 0 : filters.find((f) => f.columnKey === key);
        if (!filter)
            return null;
        const props = filterLens.prop(filter.field).toProps();
        return React__namespace.default.createElement(FilterItemBody, Object.assign({}, props, filter, dropdownProps));
    }, [filters]);
    const columns = React.useMemo(() => {
        if (filters) {
            const filterKeys = filters.map((f) => f.columnKey);
            const newColumns = (initialColumns.map((column) => {
                if (filterKeys.includes(column.key)) {
                    return Object.assign(Object.assign({}, column), { renderFilter: makeFilterRenderCallback(column.key) });
                }
                else {
                    return column;
                }
            }));
            return newColumns;
        }
        return initialColumns;
    }, [filters, initialColumns]);
    return columns;
};

var css$z = {"line-height-12":"tOMlsI","line-height-18":"V9-Apx","line-height-24":"_2k7baW","line-height-30":"SQACQa","font-size-10":"m1K6LH","font-size-12":"_54BSJ3","font-size-14":"_3Zl5zH","font-size-16":"N7tmUr","font-size-18":"MYSyGq","font-size-24":"yfybxJ","v-padding-2":"d-6kxE","v-padding-3":"Lh7Oba","v-padding-5":"putB78","v-padding-6":"y7ROAa","v-padding-8":"_-0HSQw","v-padding-9":"d4tL-z","v-padding-11":"Lm2pDS","v-padding-12":"_-81RjD","v-padding-14":"-YSsHY","v-padding-15":"Z9ryqA","v-padding-17":"Vgho4D","v-padding-18":"Le9-hJ","v-padding-23":"MJbvAl","v-padding-24":"AgX4iw","lineHeight12":"tOMlsI","lineHeight18":"V9-Apx","lineHeight24":"_2k7baW","lineHeight30":"SQACQa","fontSize10":"m1K6LH","fontSize12":"_54BSJ3","fontSize14":"_3Zl5zH","fontSize16":"N7tmUr","fontSize18":"MYSyGq","fontSize24":"yfybxJ","vPadding2":"d-6kxE","vPadding3":"Lh7Oba","vPadding5":"putB78","vPadding6":"y7ROAa","vPadding8":"_-0HSQw","vPadding9":"d4tL-z","vPadding11":"Lm2pDS","vPadding12":"_-81RjD","vPadding14":"-YSsHY","vPadding15":"Z9ryqA","vPadding17":"Vgho4D","vPadding18":"Le9-hJ","vPadding23":"MJbvAl","vPadding24":"AgX4iw"};

function getTextClasses(props, border) {
    if (props.size === 'none') {
        return [css$z['line-height-' + props.lineHeight], css$z['font-size-' + props.fontSize]];
    }
    const setting = {
        size: props.size,
        lineHeight: props.lineHeight || settings.sizes.text[props.size].lineHeight,
        fontSize: props.fontSize || settings.sizes.text[props.size].fontSize,
    };
    const vPadding = (+setting.size - +setting.lineHeight - (border ? 2 : 0)) / 2;
    return [
        css$z['line-height-' + setting.lineHeight], css$z['font-size-' + setting.fontSize], css$z['v-padding-' + vPadding],
    ];
}

var css$y = {"root":"HZ4--V"};

function applyTextMods(mods) {
    const textClasses = getTextClasses({
        size: mods.size || settings.sizes.defaults.text,
        lineHeight: mods.lineHeight,
        fontSize: mods.fontSize,
    }, false);
    return [
        css$y.root,
        'uui-text',
        `uui-color-${mods.color || 'primary'}`,
        `uui-font-weight-${mods.fontWeight || '400'}`,
        `uui-font-style-${mods.fontStyle || 'normal'}`,
        'uui-typography',
    ].concat(textClasses);
}
const Text = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.Text, applyTextMods);

var css$x = {"root":"sGcJrc","loading-word":"LT5hwY","animated-loading":"B3sCN5","skeleton_loading":"wqRvFJ","loadingWord":"LT5hwY","animatedLoading":"B3sCN5","skeletonLoading":"wqRvFJ"};

const TextPlaceholder = (props) => {
    const pattern = '&nbsp;';
    const text = React__namespace.useMemo(() => {
        const words = [];
        for (let i = 0; i < (props.wordsCount || 1); i++) {
            const lengthWord = Math.floor(Math.random() * 10 + 8);
            words.push(pattern.repeat(lengthWord));
        }
        return words;
    }, [props.wordsCount]);
    return (React__namespace.createElement("div", Object.assign({ "aria-busy": true, className: cx__default.default(css$x.root, 'uui-text-placeholder') }, props.rawProps), text.map((it, index) => (React__namespace.createElement("span", { key: index, className: cx__default.default([
            props.cx, css$x.loadingWord, !props.isNotAnimated && css$x.animatedLoading,
        ]), dangerouslySetInnerHTML: { __html: it } })))));
};

const RichTextView = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.RichTextView, (mods) => ['uui-typography', `uui-typography-size-${mods.size || '14'}`]);

var css$w = {"uui-typography":"plCZdW","hero-header":"AeCqbS","promo-header":"GwLgrz","uui-critical":"_0Ej2kB","uui-info":"gWggi0","uui-success":"_3Jfblk","uui-warning":"_1rcgbe","uui-highlight":"rLGM-V","uui-typography-size-12":"JkgY30","uui-typography-size-14":"hWVAp6","uui-typography-size-16":"_9vwXh0","root":"_6gKM4F","modal-blocker":"_4mVAUE","animateModalBlocker":"wovPsE","modal":"zzacEk","modal-footer":"wZMpwc","modal-header":"QPR4Es","uuiTypography":"plCZdW","heroHeader":"AeCqbS","promoHeader":"GwLgrz","uuiCritical":"_0Ej2kB","uuiInfo":"gWggi0","uuiSuccess":"_3Jfblk","uuiWarning":"_1rcgbe","uuiHighlight":"rLGM-V","uuiTypographySize12":"JkgY30","uuiTypographySize14":"hWVAp6","uuiTypographySize16":"_9vwXh0","modalBlocker":"_4mVAUE","modalFooter":"wZMpwc","modalHeader":"QPR4Es"};

const ModalBlocker = /* @__PURE__ */uuiCore.withMods(uuiComponents.ModalBlocker, () => [css$w.modalBlocker]);
const ModalWindow = /* @__PURE__ */uuiCore.withMods(uuiComponents.ModalWindow, () => [css$w.root, css$w.modal], (props) => {
    const normalize = (d) => {
        if (typeof d === 'number') {
            return `${d}px`;
        }
        return d;
    };
    const width = normalize(props.width) || '420px';
    const height = normalize(props.height) || 'auto';
    const maxHeight = uuiCore.isMobile() ? '100dvh' : (normalize(props.maxHeight) || '80dvh');
    return {
        style: Object.assign(Object.assign({}, props.style), { width,
            height,
            maxHeight }),
    };
});
class ModalHeader extends React__namespace.default.Component {
    render() {
        return (React__namespace.default.createElement(FlexRow, { padding: this.props.padding || '24', vPadding: "12", borderBottom: this.props.borderBottom, cx: [css$w.root, css$w.modalHeader, this.props.cx], columnGap: "12", rawProps: this.props.rawProps },
            this.props.title && (React__namespace.default.createElement(Text, { size: "48", fontSize: "18", fontWeight: "600" }, this.props.title)),
            this.props.children,
            this.props.onClose && React__namespace.default.createElement(uuiComponents.FlexSpacer, null),
            this.props.onClose && (React__namespace.default.createElement(FlexCell, { shrink: 0, width: "auto" },
                React__namespace.default.createElement(IconButton, { rawProps: { 'aria-label': 'Close modal' }, icon: ForwardRef$Q, onClick: this.props.onClose })))));
    }
}
class ModalFooter extends React__namespace.default.Component {
    render() {
        return (React__namespace.default.createElement(FlexRow, { columnGap: this.props.columnGap || '12', cx: [
                css$w.root,
                css$w.modalFooter,
                this.props.cx,
            ], borderTop: this.props.borderTop, padding: this.props.padding || '24', vPadding: this.props.vPadding || '24', rawProps: this.props.rawProps }, this.props.children));
    }
}

var _path$h;
function _extends$h() { _extends$h = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$h.apply(this, arguments); }
var SvgNotificationHelpFill = function SvgNotificationHelpFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$h({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$h || (_path$h = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M11.95 18c.35 0 .646-.121.888-.363.241-.241.362-.537.362-.887s-.12-.646-.362-.887a1.208 1.208 0 0 0-.888-.363c-.35 0-.646.121-.888.363a1.206 1.206 0 0 0-.362.887c0 .35.12.646.362.887.242.242.538.363.888.363zm-.9-3.85h1.85c0-.55.063-.983.188-1.3.125-.317.479-.75 1.062-1.3a7.483 7.483 0 0 0 1.025-1.238c.25-.391.375-.862.375-1.412 0-.933-.342-1.65-1.025-2.15-.683-.5-1.492-.75-2.425-.75-.95 0-1.72.25-2.312.75-.592.5-1.005 1.1-1.238 1.8l1.65.65c.083-.3.271-.625.563-.975.291-.35.737-.525 1.337-.525.533 0 .933.146 1.2.437.267.292.4.613.4.963 0 .333-.1.646-.3.937-.2.292-.45.563-.75.813-.733.65-1.183 1.142-1.35 1.475-.167.333-.25.942-.25 1.825zM12 22a9.733 9.733 0 0 1-3.9-.788 10.092 10.092 0 0 1-3.175-2.137c-.9-.9-1.612-1.958-2.137-3.175A9.733 9.733 0 0 1 2 12a9.74 9.74 0 0 1 .788-3.9 10.092 10.092 0 0 1 2.137-3.175c.9-.9 1.958-1.613 3.175-2.138A9.743 9.743 0 0 1 12 2a9.74 9.74 0 0 1 3.9.787 10.105 10.105 0 0 1 3.175 2.138c.9.9 1.612 1.958 2.137 3.175A9.733 9.733 0 0 1 22 12a9.733 9.733 0 0 1-.788 3.9 10.092 10.092 0 0 1-2.137 3.175c-.9.9-1.958 1.612-3.175 2.137A9.733 9.733 0 0 1 12 22z"
  })));
};
var ForwardRef$h = /*#__PURE__*/React.forwardRef(SvgNotificationHelpFill);

var css$v = {"uui-typography":"p3QP0h","hero-header":"r-iTnY","promo-header":"U67Wpq","uui-critical":"_56MJFs","uui-info":"_9TxvLM","uui-success":"urF-A1","uui-warning":"m2MYVm","uui-highlight":"kHrMI-","uui-typography-size-12":"_2UFPir","uui-typography-size-14":"vp-0uG","uui-typography-size-16":"_08fJ6L","root":"iFF3fw","icon-wrapper":"XVRS7A","action-wrapper":"HhGJl6","action-link":"T3N-5T","close-icon":"eGWyTA","main-path":"_9jAq0V","content":"O-cwtw","close-wrapper":"Cn9xAY","notification-wrapper":"qNiE2O","clear-button":"qp3S7m","uuiTypography":"p3QP0h","heroHeader":"r-iTnY","promoHeader":"U67Wpq","uuiCritical":"_56MJFs","uuiInfo":"_9TxvLM","uuiSuccess":"urF-A1","uuiWarning":"m2MYVm","uuiHighlight":"kHrMI-","uuiTypographySize12":"_2UFPir","uuiTypographySize14":"vp-0uG","uuiTypographySize16":"_08fJ6L","iconWrapper":"XVRS7A","actionWrapper":"HhGJl6","actionLink":"T3N-5T","closeIcon":"eGWyTA","mainPath":"_9jAq0V","closeWrapper":"Cn9xAY","notificationWrapper":"qNiE2O","clearButton":"qp3S7m"};

const NotificationCard = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => {
    const notificationCardNode = React__namespace.default.useRef(null);
    React__namespace.default.useImperativeHandle(ref, () => notificationCardNode.current, [notificationCardNode.current]);
    React__namespace.default.useLayoutEffect(() => {
        var _a, _b;
        (_a = notificationCardNode.current) === null || _a === void 0 ? void 0 : _a.addEventListener('mouseenter', props.clearTimer);
        (_b = notificationCardNode.current) === null || _b === void 0 ? void 0 : _b.addEventListener('mouseleave', props.refreshTimer);
        return () => {
            var _a, _b;
            (_a = notificationCardNode.current) === null || _a === void 0 ? void 0 : _a.removeEventListener('mouseenter', props.clearTimer);
            (_b = notificationCardNode.current) === null || _b === void 0 ? void 0 : _b.removeEventListener('mouseleave', props.refreshTimer);
        };
    }, []);
    return (React__namespace.default.createElement("div", Object.assign({ role: "alert", className: cx__default.default('uui-notification_card', props.color && `uui-color-${props.color}`, css$v.root, props.cx), ref: notificationCardNode }, props.rawProps),
        React__namespace.default.createElement("div", { className: css$v.mainPath },
            props.icon && (React__namespace.default.createElement("div", { className: css$v.iconWrapper },
                React__namespace.default.createElement(uuiComponents.IconContainer, { size: 24, icon: props.icon }))),
            React__namespace.default.createElement("div", { className: css$v.content },
                props.children,
                props.actions && (React__namespace.default.createElement("div", { className: css$v.actionWrapper }, props.actions.map((action) => (React__namespace.default.createElement(LinkButton, { caption: action.name, onClick: action.action, key: action.name, cx: css$v.actionLink, size: "36", rawProps: action.rawProps })))))),
            props.onClose && (React__namespace.default.createElement("div", { className: css$v.closeWrapper },
                React__namespace.default.createElement(IconButton, { icon: ForwardRef$Q, color: "neutral", onClick: props.onClose, cx: css$v.closeIcon }))))));
});
const WarningNotification = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => (React__namespace.default.createElement(NotificationCard, Object.assign({ icon: ForwardRef$y, color: "warning" }, props, { ref: ref, cx: props.cx }))));
const SuccessNotification = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => (React__namespace.default.createElement(NotificationCard, Object.assign({ icon: ForwardRef$z, color: "success" }, props, { ref: ref, cx: props.cx }))));
const HintNotification = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => (React__namespace.default.createElement(NotificationCard, Object.assign({ icon: ForwardRef$h, color: "info" }, props, { ref: ref, cx: props.cx }))));
const ErrorNotification = /* @__PURE__ */React__namespace.default.forwardRef((props, ref) => (React__namespace.default.createElement(NotificationCard, Object.assign({ icon: ForwardRef$x, color: "error" }, props, { ref: ref, cx: props.cx }))));
function ClearNotification() {
    const uuiCtx = uuiCore.useUuiContext();
    return (React__namespace.default.createElement("div", { className: cx__default.default(css$v.notificationWrapper, css$v.clearButton) },
        React__namespace.default.createElement(LinkButton, { caption: i18n.notificationCard.closeAllNotificationsButton, onClick: () => uuiCtx.uuiNotifications.clearAll() })));
}

class ConfirmationModal extends React__namespace.Component {
    render() {
        let bodyContent;
        if (this.props.bodyContent) {
            bodyContent = React__namespace.createElement(Panel, { background: "surface-main", margin: "24" }, this.props.bodyContent);
        }
        return (React__namespace.createElement(ModalBlocker, Object.assign({}, this.props),
            React__namespace.createElement(ModalWindow, { width: 420 },
                React__namespace.createElement(ModalHeader, { borderBottom: true, title: this.props.caption, onClose: () => this.props.abort() }),
                React__namespace.createElement(ScrollBars, null, bodyContent),
                React__namespace.createElement(ModalFooter, null,
                    React__namespace.createElement(uuiComponents.FlexSpacer, null),
                    this.props.hideCancelButton || (React__namespace.createElement(Button, { caption: i18n.form.modals.discardButton, onClick: () => this.props.success(false), fill: "outline", color: "secondary" })),
                    React__namespace.createElement(Button, { caption: i18n.form.modals.saveButton, onClick: () => this.props.success(true), color: "primary" })))));
    }
}

function Snackbar(props) {
    const uuiCtx = uuiCore.useUuiContext();
    const forceUpdate = useReliableForceUpdate();
    React.useEffect(() => uuiCtx.uuiNotifications.subscribe(() => forceUpdate()), []);
    let items = uuiCtx.uuiNotifications.getNotifications().slice().reverse();
    // add button for clear notification list
    if (items.length > 1) {
        const clearOperation = {
            component: ClearNotification,
            props: { id: 111555, key: 'clearNotification' },
            config: { position: items[0].config.position, duration: 'forever' },
        };
        items = [clearOperation].concat(items);
    }
    return React__namespace.createElement(uuiComponents.Snackbar, { forwardedRef: props.forwardedRef, notifications: items });
}
/**
 *  https://legacy.reactjs.org/docs/hooks-faq.html#is-there-something-like-forceupdate
 */
function useReliableForceUpdate() {
    const red = React.useReducer((x) => x + 1, 0);
    return red[1];
}

var css$u = {"root":"g6OvGw","timepicker-input":"Q0iweq","ltr-always":"_18z8-I","timepickerInput":"Q0iweq","ltrAlways":"_18z8-I"};

const uuiTimePicker = {
    container: 'uui-timepicker-container',
    iconUp: 'uui-timepicker-icon-up',
    iconDown: 'uui-timepicker-icon-down',
    input: 'uui-timepicker-input',
    elementContainer: 'uui-timepicker-item',
};
const MIN_MINUTES = 0;
const MAX_MINUTES = 59;
const FORMAT_12H = 12;
function TimePickerBody(props) {
    const MIN_HOURS = props.format === FORMAT_12H ? 1 : 0;
    const MAX_HOURS = props.format || FORMAT_12H;
    const setValue = (newTime) => {
        props.onValueChange({ hours: newTime.hour(), minutes: newTime.minute() });
    };
    const onHoursChange = (newHours) => {
        setValue(uuiDayjs.dayjs().set(props.value).hour(newHours));
    };
    const onMinutesChange = (newMinutes) => {
        setValue(uuiDayjs.dayjs().set(props.value).minute(newMinutes));
    };
    const onTimeTypeChange = () => {
        setValue(uuiDayjs.dayjs().set(props.value).add(12, 'h'));
    };
    const handleMinutesUpClick = () => {
        const minutesStep = props.minutesStep || 5;
        const value = uuiDayjs.dayjs().set(props.value);
        const minutesToAdd = minutesStep - (value.minute() % minutesStep);
        onMinutesChange(value.add(minutesToAdd, 'm').minute());
    };
    const handleMinutesDownClick = () => {
        const minutesStep = props.minutesStep || 5;
        const value = uuiDayjs.dayjs().set(props.value);
        const minutesToSubtract = value.minute() % minutesStep === 0 ? minutesStep : value.minute() % minutesStep;
        onMinutesChange(value.subtract(minutesToSubtract, 'm').minute());
    };
    return (React__namespace.createElement("div", Object.assign({ className: uuiCore.cx(css$u.root, uuiTimePicker.container, props.cx), ref: props.forwardedRef }, props.rawProps),
        React__namespace.createElement("div", { className: css$u.ltrAlways },
            React__namespace.createElement("div", { className: uuiTimePicker.elementContainer },
                React__namespace.createElement(uuiComponents.IconContainer, { size: 18, rawProps: { 'aria-label': 'Increment hours' }, cx: uuiTimePicker.iconUp, icon: ForwardRef$P, onClick: () => onHoursChange(uuiDayjs.dayjs().set(props.value).add(1, 'h').hour()) }),
                React__namespace.createElement(uuiComponents.NumericInput, { cx: uuiTimePicker.input, onValueChange: onHoursChange, value: +(uuiDayjs.dayjs()
                        .set(props.value)
                        .format(MAX_HOURS === FORMAT_12H ? 'hh' : 'HH')), min: MIN_HOURS, max: MAX_HOURS }),
                React__namespace.createElement(uuiComponents.IconContainer, { size: 18, rawProps: { 'aria-label': 'Decrement hours' }, cx: uuiTimePicker.iconDown, icon: ForwardRef$P, onClick: () => onHoursChange(uuiDayjs.dayjs().set(props.value).subtract(1, 'h').hour()) })),
            React__namespace.createElement("div", { className: uuiTimePicker.elementContainer },
                React__namespace.createElement(uuiComponents.IconContainer, { size: 18, rawProps: { 'aria-label': 'Increment minutes' }, cx: uuiTimePicker.iconUp, icon: ForwardRef$P, onClick: handleMinutesUpClick }),
                React__namespace.createElement(uuiComponents.NumericInput, { cx: uuiTimePicker.input, onValueChange: onMinutesChange, value: +uuiDayjs.dayjs().set(props.value).format('m'), min: MIN_MINUTES, max: MAX_MINUTES }),
                React__namespace.createElement(uuiComponents.IconContainer, { size: 18, rawProps: { 'aria-label': 'Decrement minutes' }, cx: uuiTimePicker.iconDown, icon: ForwardRef$P, onClick: handleMinutesDownClick }))),
        MAX_HOURS === FORMAT_12H && (React__namespace.createElement("div", { className: uuiTimePicker.elementContainer },
            React__namespace.createElement(uuiComponents.IconContainer, { size: 18, cx: uuiTimePicker.iconUp, icon: ForwardRef$P, onClick: onTimeTypeChange }),
            React__namespace.createElement(uuiComponents.TextInput, { cx: uuiTimePicker.input, onValueChange: () => {
                }, isReadonly: true, value: uuiDayjs.dayjs().set(props.value).format('A') }),
            React__namespace.createElement(uuiComponents.IconContainer, { size: 18, cx: uuiTimePicker.iconDown, icon: ForwardRef$P, onClick: onTimeTypeChange })))));
}

const getMeridian = (newValue, format) => {
    if (format === 'hh:mm A') {
        if (newValue.toLowerCase().includes('p') && newValue.toLowerCase().includes('a')) {
            return newValue.toLowerCase().indexOf('p') < newValue.toLowerCase().indexOf('a') ? 'PM' : 'AM';
        }
        return newValue.toLowerCase().includes('p') ? 'PM' : 'AM';
    }
    return false;
};
const parseTimeNumbers = (value, separator) => {
    let hours, minutes;
    const timeNumbers = value.replace(/\D/gi, '');
    switch (separator) {
        case 0:
            hours = 0;
            minutes = parseInt(timeNumbers.trim().slice(0, 2));
            break;
        case 1:
            hours = parseInt(timeNumbers.slice(0, 1));
            minutes = parseInt(timeNumbers.slice(1, 3));
            break;
        default:
            hours = parseInt(timeNumbers.slice(0, 2));
            minutes = parseInt(timeNumbers.slice(2, 4));
    }
    return { hours, minutes };
};
const formatTime = (hours, minutes, meridian, format) => {
    const normalizeHours = (h) => Number.isNaN(h) ? '00' : h.toString().padStart(2, '0');
    const normalizeMinutes = (m) => Number.isNaN(m) ? '00' : m.toString().padStart(2, '0');
    if (meridian && normalizeHours(hours) === '00' && normalizeMinutes(minutes) === '00') {
        return '';
    }
    let hoursResult = Number.parseInt(normalizeHours(hours));
    let meridianResult = meridian;
    if ((format === 'hh:mm A') && hoursResult > 12) {
        hoursResult -= 12;
        meridianResult = 'PM';
    }
    if ((format === 'hh:mm A') && hoursResult === 0) {
        hoursResult = 12;
    }
    const time = `${normalizeHours(hoursResult)}:${normalizeMinutes(minutes)}`;
    return meridianResult ? time.concat(` ${meridianResult}`) : time;
};

const DEFAULT_MODE = EditMode.FORM;
const valueToTimeString = (value, format) => {
    if (value === null)
        return null;
    return uuiDayjs.dayjs()
        .set(value)
        .format(format === 24 ? 'HH:mm' : 'hh:mm A');
};
function TimePicker(props) {
    const [state, setState] = React.useState({
        isOpen: false,
        value: valueToTimeString(props.value, props.format),
        inputValue: valueToTimeString(props.value, props.format),
    });
    React.useEffect(() => {
        if (valueToTimeString(props.value, props.format) !== state.value) {
            const stringValue = valueToTimeString(props.value, props.format);
            setState((prevState) => (Object.assign(Object.assign({}, prevState), { value: stringValue, inputValue: stringValue })));
        }
    }, [props.value, props.format]);
    const getFormat = () => props.format === 24 ? 'HH:mm' : 'hh:mm A';
    const isTimeValid = (newValue) => uuiDayjs.dayjs(newValue, getFormat(), true).isValid();
    const formatStringTimeToObject = (stringTime) => {
        if (stringTime) {
            const value = uuiDayjs.dayjs(stringTime, getFormat(), true);
            return { hours: value.hour(), minutes: value.minute() };
        }
        return { hours: null, minutes: null };
    };
    const onClear = () => {
        props.onValueChange(null);
    };
    const onToggle = (value) => {
        setState((prevState) => (Object.assign(Object.assign({}, prevState), { isOpen: value })));
    };
    const saveTime = (newTime) => {
        setState((prevState) => (Object.assign(Object.assign({}, prevState), { inputValue: newTime })));
        props.onValueChange(formatStringTimeToObject(newTime));
    };
    const getTimeFromInputValue = (newValue) => {
        const trimmedNewValue = newValue.trimStart();
        const separator = trimmedNewValue.search(/\D/);
        const meridian = getMeridian(trimmedNewValue, getFormat());
        const { hours, minutes } = parseTimeNumbers(trimmedNewValue, separator);
        return formatTime(hours, minutes, meridian, getFormat());
    };
    const handleBodyValueChange = (newValue) => {
        const inputValue = valueToTimeString(newValue, props.format);
        saveTime(inputValue);
    };
    const handleFocus = (e) => {
        var _a;
        onToggle(true);
        (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);
    };
    const handleInputChange = (newValue) => {
        setState((prevState) => (Object.assign(Object.assign({}, prevState), { inputValue: newValue })));
        if (newValue) {
            const result = getTimeFromInputValue(newValue);
            if (isTimeValid(result)) {
                setState((prevState) => (Object.assign(Object.assign({}, prevState), { value: result })));
            }
        }
    };
    const handleBlur = (e) => {
        var _a;
        if (uuiCore.isFocusReceiverInsideFocusLock(e))
            return;
        onToggle(false);
        (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);
        if (state.value === '' || state.inputValue === '') {
            props.onValueChange(null);
            setState((prevState) => (Object.assign(Object.assign({}, prevState), { value: null, inputValue: null })));
        }
        state.value && state.inputValue && saveTime(state.value);
    };
    const renderInput = (inputProps) => {
        var _a;
        return (React__namespace.default.createElement(TextInput, Object.assign({}, inputProps, { onClick: null, size: props.size || '36', isDisabled: props.isDisabled, isReadonly: props.isReadonly, isInvalid: props.isInvalid, cx: [css$u.root, css$u.timepickerInput, props.inputCx], value: state.inputValue, onValueChange: handleInputChange, onCancel: !props.disableClear && onClear, onFocus: handleFocus, onBlur: handleBlur, isDropdown: false, placeholder: props.placeholder ? props.placeholder : getFormat(), mode: props.mode || DEFAULT_MODE, rawProps: (_a = props.rawProps) === null || _a === void 0 ? void 0 : _a.input })));
    };
    const renderBody = (bodyProps) => {
        var _a;
        const timePickerBodyProps = __rest(props, ["forwardedRef", "onValueChange"]);
        return (!props.isDisabled && !props.isReadonly && (React__namespace.default.createElement(DropdownContainer, Object.assign({}, bodyProps, { focusLock: false }),
            React__namespace.default.createElement(TimePickerBody, Object.assign({}, timePickerBodyProps, { onValueChange: handleBodyValueChange, value: formatStringTimeToObject(state.value), rawProps: (_a = props.rawProps) === null || _a === void 0 ? void 0 : _a.body, cx: props.bodyCx })))));
    };
    return (React__namespace.default.createElement(Dropdown, { renderTarget: (targetProps) => (props.renderTarget ? props.renderTarget(targetProps) : renderInput(targetProps)), renderBody: (bodyProps) => !props.isDisabled && !props.isReadonly && renderBody(bodyProps), onValueChange: !props.isDisabled && !props.isReadonly ? onToggle : null, value: state.isOpen, modifiers: [{ name: 'offset', options: { offset: [0, 6] } }], forwardedRef: props.forwardedRef }));
}

var css$t = {"root":"VU2SPi"};

function applyInputAddonMods() {
    return [
        css$t.root,
    ];
}
const InputAddon = /* @__PURE__ */uuiCore.withMods(uuiComponents.InputAddon, applyInputAddonMods);

var css$s = {"root":"QysP0a"};

function applySliderMods() {
    return [css$s.root, 'uui-color-neutral'];
}
const Slider = /* @__PURE__ */uuiCore.withMods(uuiComponents.Slider, applySliderMods);

const defaultMode = EditMode.FORM;
const modifiers$1 = [{
        name: 'offset',
        options: { offset: [0, 6] },
    }];
function DatePickerComponent(props, ref) {
    const { format = defaultFormat, value } = props;
    const context = uuiCore.useUuiContext();
    const [inputValue, setInputValue] = React.useState(toCustomDateFormat(value, format));
    const [isBodyOpen, setBodyIsOpen] = React.useState(false);
    React.useEffect(() => {
        setInputValue(toCustomDateFormat(value, format));
    }, [value, setInputValue]);
    const onValueChange = (newValue) => {
        if (value !== newValue) {
            props.onValueChange(newValue);
            if (props.getValueChangeAnalyticsEvent) {
                const event = props.getValueChangeAnalyticsEvent(newValue, value);
                context.uuiAnalytics.sendEvent(event);
            }
        }
    };
    const onBodyValueChange = (newValue) => {
        setInputValue(toCustomDateFormat(newValue, format));
        onValueChange(newValue);
        setBodyIsOpen(false);
    };
    const onBlur = (e) => {
        var _a;
        (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e);
        if (isValidDate(inputValue, format, props.filter)) {
            setInputValue(toCustomDateFormat(inputValue, format));
            onValueChange(toValueDateFormat(inputValue, format));
        }
        else {
            setInputValue(null);
            onValueChange(null);
        }
    };
    const onInputKeyDown = (e) => {
        if (e.key === 'Enter') {
            setBodyIsOpen(true);
            e.preventDefault();
        }
    };
    const renderInput = (renderProps) => {
        var _a;
        const allowClear = !props.disableClear && !!inputValue;
        return (React__namespace.default.createElement(TextInput, Object.assign({}, renderProps, { isDropdown: false, cx: uuiCore.cx(props.inputCx, isBodyOpen && uuiCore.uuiMod.focus), icon: props.mode !== EditMode.CELL && systemIcons.calendar ? systemIcons.calendar : undefined, iconPosition: props.iconPosition || 'left', placeholder: props.placeholder ? props.placeholder : format, size: props.size || settings.sizes.defaults.datePicker, value: inputValue || undefined, onValueChange: (v) => {
                setInputValue(v || '');
            }, onCancel: allowClear ? () => {
                if (!props.disableClear && !!inputValue) {
                    onValueChange(null);
                }
            } : undefined, isInvalid: props.isInvalid, isDisabled: props.isDisabled, isReadonly: props.isReadonly, tabIndex: props.isReadonly || props.isDisabled ? -1 : 0, onFocus: (e) => {
                var _a;
                (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e);
            }, onKeyDown: onInputKeyDown, onBlur: onBlur, mode: props.mode || defaultMode, rawProps: (_a = props.rawProps) === null || _a === void 0 ? void 0 : _a.input, id: props.id })));
    };
    const renderBody = (renderProps) => {
        var _a, _b;
        return (React__namespace.default.createElement(DropdownContainer, Object.assign({}, renderProps),
            React__namespace.default.createElement(DatePickerBody, { value: value, onValueChange: onBodyValueChange, cx: uuiCore.cx(props.bodyCx), filter: props.filter, isHoliday: props.isHoliday, renderDay: props.renderDay, rawProps: (_a = props.rawProps) === null || _a === void 0 ? void 0 : _a.body }), (_b = props.renderFooter) === null || _b === void 0 ? void 0 :
            _b.call(props)));
    };
    return (React__namespace.default.createElement(uuiComponents.Dropdown, { value: isBodyOpen, modifiers: modifiers$1, placement: props.placement, forwardedRef: ref, onValueChange: (v) => {
            setBodyIsOpen(v);
        }, renderTarget: (renderProps) => {
            var _a;
            return ((_a = props.renderTarget) === null || _a === void 0 ? void 0 : _a.call(props, renderProps)) || renderInput(renderProps);
        }, renderBody: (renderProps) => {
            return renderBody(renderProps);
        } }));
}
const DatePicker = /* @__PURE__ */React__namespace.default.forwardRef(DatePickerComponent);

var css$r = {"uui-typography":"W6PbRl","hero-header":"DfO11-","promo-header":"-Gz5zX","uui-critical":"go4eRs","uui-info":"_4u8OjU","uui-success":"h2JvgL","uui-warning":"_0j13Nk","uui-highlight":"B1dmBr","uui-typography-size-12":"XuLL6I","uui-typography-size-14":"_1HnpjK","uui-typography-size-16":"_0ERa03","root":"pvg7bO","uuiTypography":"W6PbRl","heroHeader":"DfO11-","promoHeader":"-Gz5zX","uuiCritical":"go4eRs","uuiInfo":"_4u8OjU","uuiSuccess":"h2JvgL","uuiWarning":"_0j13Nk","uuiHighlight":"B1dmBr","uuiTypographySize12":"XuLL6I","uuiTypographySize14":"_1HnpjK","uuiTypographySize16":"_0ERa03"};

const uuiPresets = {
    container: 'uui-presets-container',
    header: 'uui-presets-header',
    item: 'uui-presets-item',
};
const getPresets = (presets) => {
    return Object.keys(presets).map((key) => (Object.assign(Object.assign({}, presets[key].getRange()), { name: presets[key].name, key }))).sort((a, b) => a.order - b.order);
};
function CalendarPresets(props) {
    return (React__namespace.createElement("div", Object.assign({ ref: props.forwardedRef, className: uuiCore.cx(uuiPresets.container, css$r.root, props.cx) }, props.rawProps),
        React__namespace.createElement("div", { className: uuiPresets.header }, "Presets"),
        getPresets(props.presets).map((item) => (React__namespace.createElement(LinkButton, { key: item.key, caption: item.name, onClick: () => props.onPresetSet(item), size: "24" })))));
}

var css$q = {"uui-typography":"bRiMG-","hero-header":"_41dYfc","promo-header":"_0DgqS-","uui-critical":"O-WduI","uui-info":"o5Ovkn","uui-success":"LKySov","uui-warning":"HEGlnz","uui-highlight":"XoEa-m","uui-typography-size-12":"HtXpI5","uui-typography-size-14":"q5qHv9","uui-typography-size-16":"OQdiWy","root":"ytxHx-","container":"pC8g7w","day-selection":"LFE-SO","from-picker":"_1ANzDS","to-picker":"_3NTsW9","bodes-wrapper":"NxHIpK","blocker":"mJ2xEJ","uuiTypography":"bRiMG-","heroHeader":"_41dYfc","promoHeader":"_0DgqS-","uuiCritical":"O-WduI","uuiInfo":"o5Ovkn","uuiSuccess":"LKySov","uuiWarning":"HEGlnz","uuiHighlight":"XoEa-m","uuiTypographySize12":"HtXpI5","uuiTypographySize14":"q5qHv9","uuiTypographySize16":"OQdiWy","daySelection":"LFE-SO","fromPicker":"_1ANzDS","toPicker":"_3NTsW9","bodesWrapper":"NxHIpK"};

const uuiRangeDatePickerBody = {
    inRange: 'uui-range-datepicker-in-range',
    firstDayInRangeWrapper: 'uui-range-datepicker-first-day-in-range-wrapper',
    lastDayInRangeWrapper: 'uui-range-datepicker-last-day-in-range-wrapper',
    separator: 'uui-range-datepicker-separator',
};
const rangeDatePickerPresets = {
    today: {
        name: 'Today',
        getRange: () => ({
            from: uuiDayjs.dayjs().toString(),
            to: undefined,
            order: 1,
        }),
    },
    thisWeek: {
        name: 'This Week',
        getRange: () => ({
            from: uuiDayjs.dayjs().startOf('isoWeek').toString(),
            to: uuiDayjs.dayjs().endOf('isoWeek').toString(),
            order: 2,
        }),
    },
    lastWeek: {
        name: 'Last Week',
        getRange: () => ({
            from: uuiDayjs.dayjs().startOf('isoWeek').subtract(1, 'week').toString(),
            to: uuiDayjs.dayjs().endOf('isoWeek').subtract(1, 'week').toString(),
            order: 3,
        }),
    },
    thisMonth: {
        name: 'This Month',
        getRange: () => ({
            from: uuiDayjs.dayjs().startOf('month').toString(),
            to: uuiDayjs.dayjs().endOf('month').toString(),
            order: 4,
        }),
    },
    lastMonth: {
        name: 'Last Month',
        getRange: () => ({
            from: uuiDayjs.dayjs().startOf('month').subtract(1, 'month').toString(),
            to: uuiDayjs.dayjs().subtract(1, 'month').endOf('month').toString(),
            order: 5,
        }),
    },
    last3Month: {
        name: 'Last 3 Months',
        getRange: () => ({
            from: uuiDayjs.dayjs().startOf('month').subtract(3, 'month').toString(),
            to: uuiDayjs.dayjs().subtract(1, 'month').endOf('month').toString(),
            order: 5,
        }),
    },
    thisYear: {
        name: 'This Year',
        getRange: () => ({
            from: uuiDayjs.dayjs().startOf('year').toString(),
            to: uuiDayjs.dayjs().endOf('year').toString(),
            order: 7,
        }),
    },
    lastYear: {
        name: 'Last Year',
        getRange: () => ({
            from: uuiDayjs.dayjs().startOf('year').subtract(1, 'year').toString(),
            to: uuiDayjs.dayjs().subtract(1, 'year').endOf('year').toString(),
            order: 8,
        }),
    },
};
const RangeDatePickerBody = /* @__PURE__ */React.forwardRef(RangeDatePickerBodyComp);
function RangeDatePickerBodyComp(props, ref) {
    const { value: _value, filter } = props;
    const { selectedDate: _selectedDate, inFocus, } = _value;
    const selectedDate = _selectedDate || defaultRangeValue; // also handles null in comparison to default value
    const [activeMonth, setActiveMonth] = React.useState(inFocus);
    const [view, setView] = React.useState('DAY_SELECTION');
    const [month, setMonth] = React.useState(() => {
        return getMonthOnOpen(selectedDate, inFocus);
    });
    const getRange = (newValue) => {
        if (!filter || filter(uuiDayjs.dayjs(newValue))) {
            if (inFocus === 'from') {
                return getWithFrom(selectedDate, newValue);
            }
            if (inFocus === 'to') {
                return getWithTo(selectedDate, newValue);
            }
        }
    };
    const onBodyValueChange = (v, part) => {
        // selectedDate can be null, other params should always have values
        const newRange = v ? getRange(v) : selectedDate;
        let newInFocus = null;
        const fromChanged = selectedDate.from !== (newRange === null || newRange === void 0 ? void 0 : newRange.from);
        const toChanged = selectedDate.to !== (newRange === null || newRange === void 0 ? void 0 : newRange.to);
        if (inFocus === 'from' && fromChanged) {
            newInFocus = 'to';
        }
        else if (inFocus === 'to' && toChanged) {
            newInFocus = 'from';
        }
        setActiveMonth(part);
        props.onValueChange({
            selectedDate: newRange ? newRange : selectedDate,
            inFocus: newInFocus !== null && newInFocus !== void 0 ? newInFocus : inFocus,
        });
    };
    const renderDay = (renderProps) => {
        return (React__namespace.default.createElement(uuiComponents.Day, Object.assign({}, renderProps, { cx: getDayCX(renderProps.value, selectedDate) })));
    };
    const from = {
        month,
        view: activeMonth === 'from' ? view : 'DAY_SELECTION',
        value: null,
    };
    const to = {
        view: activeMonth === 'to' ? view : 'DAY_SELECTION',
        month: month.add(1, 'month'),
        value: null,
    };
    const renderPresets = (presets) => {
        return (React__namespace.default.createElement(React__namespace.default.Fragment, null,
            React__namespace.default.createElement("div", { className: uuiRangeDatePickerBody.separator }),
            React__namespace.default.createElement(CalendarPresets, { onPresetSet: (presetVal) => {
                    // enable day if smth other were selected
                    setView('DAY_SELECTION');
                    setMonth(uuiDayjs.dayjs(presetVal.from));
                    props.onValueChange({
                        inFocus: props.value.inFocus,
                        selectedDate: {
                            from: uuiDayjs.dayjs(presetVal.from).format(valueFormat),
                            to: uuiDayjs.dayjs(presetVal.to).format(valueFormat),
                        },
                    });
                }, presets: presets })));
    };
    return (React__namespace.default.createElement("div", Object.assign({ ref: ref, className: uuiCore.cx(css$q.root, uuiDatePickerBodyBase.container, props.cx) }, props.rawProps),
        React__namespace.default.createElement(FlexRow, { cx: [view === 'DAY_SELECTION' && css$q.daySelection, css$q.container], alignItems: "top" },
            React__namespace.default.createElement(FlexCell, { width: "auto" },
                React__namespace.default.createElement(FlexRow, null,
                    React__namespace.default.createElement(FlexRow, { cx: css$q.bodesWrapper, alignItems: "top" },
                        React__namespace.default.createElement(StatelessDatePickerBody, Object.assign({ key: "date-picker-body-left", cx: uuiCore.cx(css$q.fromPicker) }, from, { onValueChange: (v) => onBodyValueChange(v, 'from'), onMonthChange: (m) => {
                                setMonth(m);
                            }, onViewChange: (v) => setView(v), filter: props.filter, isHoliday: props.isHoliday, renderDay: props.renderDay || renderDay, isDisabled: view !== 'DAY_SELECTION' && activeMonth === 'to' })),
                        React__namespace.default.createElement(StatelessDatePickerBody, Object.assign({ key: "date-picker-body-right", cx: uuiCore.cx(css$q.toPicker) }, to, { onValueChange: (v) => onBodyValueChange(v, 'to'), onMonthChange: (m) => {
                                setMonth(m.subtract(1, 'month'));
                            }, onViewChange: (v) => setView(v), filter: props.filter, renderDay: props.renderDay || renderDay, isHoliday: props.isHoliday, isDisabled: view !== 'DAY_SELECTION' && activeMonth === 'from' })),
                        view !== 'DAY_SELECTION' && (React__namespace.default.createElement("div", { style: {
                                left: activeMonth === 'from' ? '50%' : undefined,
                                right: activeMonth === 'to' ? '50%' : undefined,
                            }, className: css$q.blocker }))),
                    props.presets && renderPresets(props.presets)),
                props.renderFooter && props.renderFooter()))));
}
const getDayCX = (day, selectedDate) => {
    const dayValue = day.valueOf();
    const fromValue = (selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.from)
        ? uuiDayjs.dayjs(selectedDate.from).valueOf() : null;
    const toValue = (selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.to)
        ? uuiDayjs.dayjs(selectedDate.to).valueOf() : null;
    const inRange = fromValue
        && toValue
        && dayValue >= fromValue
        && dayValue <= toValue
        && fromValue !== toValue;
    const isFirst = dayValue === fromValue;
    const isLast = dayValue === toValue;
    return [uuiCore.cx(inRange && uuiRangeDatePickerBody.inRange, isFirst && uuiRangeDatePickerBody.firstDayInRangeWrapper, !inRange && isFirst && uuiRangeDatePickerBody.lastDayInRangeWrapper, isLast && uuiRangeDatePickerBody.lastDayInRangeWrapper, !inRange && isLast && uuiRangeDatePickerBody.firstDayInRangeWrapper, (dayValue === fromValue || dayValue === toValue) && uuiComponents.uuiDaySelection.selectedDay)];
};

const modifiers = [{
        name: 'offset',
        options: { offset: [0, 6] },
    }];
function RangeDatePickerComponent(props, ref) {
    const { value: _value, format = defaultFormat } = props;
    const value = _value || defaultRangeValue; // also handles null in comparison to default value
    const context = uuiCore.useUuiContext();
    const [isOpen, setIsOpen] = React.useState(false);
    const [inFocus, setInFocus] = React.useState(null);
    const onValueChange = (newValue) => {
        const fromChanged = (value === null || value === void 0 ? void 0 : value.from) !== (newValue === null || newValue === void 0 ? void 0 : newValue.from);
        const toChanged = (value === null || value === void 0 ? void 0 : value.to) !== (newValue === null || newValue === void 0 ? void 0 : newValue.to);
        if (fromChanged || toChanged) {
            props.onValueChange(newValue);
            if (props.getValueChangeAnalyticsEvent) {
                const event = props.getValueChangeAnalyticsEvent(newValue, value);
                context.uuiAnalytics.sendEvent(event);
            }
        }
    };
    const onOpenChange = (newIsOpen) => {
        var _a;
        setIsOpen(newIsOpen);
        (_a = props.onOpenChange) === null || _a === void 0 ? void 0 : _a.call(props, newIsOpen);
    };
    const onBodyValueChange = (newValue) => {
        var _a;
        setInFocus((_a = newValue.inFocus) !== null && _a !== void 0 ? _a : inFocus);
        onValueChange(newValue.selectedDate);
        const toChanged = value.to !== newValue.selectedDate.to;
        const closeBody = newValue.selectedDate.from && newValue.selectedDate.to
            && inFocus === 'to'
            && toChanged;
        if (closeBody) {
            onOpenChange(false);
        }
    };
    const renderBody = (renderProps) => {
        var _a;
        return (React__namespace.default.createElement(DropdownContainer, Object.assign({}, renderProps, { cx: cx__default.default(css$G.dropdownContainer) }),
            React__namespace.default.createElement(FlexRow, null,
                React__namespace.default.createElement(RangeDatePickerBody, { cx: cx__default.default(props.bodyCx), value: {
                        selectedDate: _value,
                        inFocus,
                    }, onValueChange: onBodyValueChange, filter: props.filter, presets: props.presets, renderDay: props.renderDay, renderFooter: () => {
                        var _a;
                        return (_a = props.renderFooter) === null || _a === void 0 ? void 0 : _a.call(props, value);
                    }, isHoliday: props.isHoliday, rawProps: (_a = props.rawProps) === null || _a === void 0 ? void 0 : _a.body }))));
    };
    return (React__namespace.default.createElement(uuiComponents.Dropdown, { renderTarget: (renderProps) => {
            var _a;
            return ((_a = props.renderTarget) === null || _a === void 0 ? void 0 : _a.call(props, renderProps)) || (React__namespace.default.createElement(RangeDatePickerInput, { ref: renderProps.ref, cx: props.inputCx, onClick: renderProps.onClick, isDisabled: props.isDisabled, isInvalid: props.isInvalid, isReadonly: props.isReadonly, size: props.size, getPlaceholder: props.getPlaceholder, disableClear: props.disableClear, rawProps: props.rawProps, inFocus: inFocus, value: value, format: format, onValueChange: onValueChange, onFocusInput: (e, type) => {
                    var _a;
                    (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, e, type);
                    setInFocus(type);
                }, onBlurInput: (e, type) => { var _a; (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, e, type); !isOpen && setInFocus(null); } }));
        }, renderBody: (renderProps) => renderBody(renderProps), onValueChange: (v) => onOpenChange(v), value: isOpen, modifiers: modifiers, placement: props.placement, forwardedRef: ref }));
}
const RangeDatePicker = /* @__PURE__ */React__namespace.default.forwardRef(RangeDatePickerComponent);

var css$p = {"root":"_3ol1MS","blocker":"x2DkW8","marker":"rFab9L","top":"_1c-3lP","bottom":"P8Je-l","left":"UOiLJP","right":"D90zfr","inside":"Sm4f2B"};

function DropMarker(props) {
    return props.isDndInProgress
        ? (React__namespace.createElement(React__namespace.Fragment, null,
            props.enableBlocker && React__namespace.createElement("div", { className: css$p.blocker }),
            React__namespace.createElement("div", { className: cx__default.default([
                    css$p.root,
                    css$p.marker,
                    css$p[props.position],
                    props === null || props === void 0 ? void 0 : props.cx,
                ]) })))
        : null;
}

var css$o = {"uui-typography":"cwpupr","hero-header":"h7a04T","promo-header":"STxdpM","uui-critical":"_1JO6Pi","uui-info":"L8cqQU","uui-success":"EbnSU-","uui-warning":"CGlaWM","uui-highlight":"GBSP89","uui-typography-size-12":"zraU4r","uui-typography-size-14":"TJZyXJ","uui-typography-size-16":"Jk-szV","cell":"-cXDPa","wrapper":"QrQLHD","align-widgets-top":"DeQhLt","size-24":"YIDKNI","size-30":"OOVxSW","size-36":"_5TkTnM","size-42":"yn1SYJ","size-48":"Yg56-m","size-60":"Q1sNGk","align-widgets-center":"PyS0Sv","padding-6":"J-X32D","padding-12":"fSsdu7","padding-24":"efaSNV","padding-left-12":"VIRWOz","padding-left-24":"_9Ktcfn","padding-right-12":"B3L0uI","padding-right-24":"pudqU2","loading-cell":"ThpicB","uuiTypography":"cwpupr","heroHeader":"h7a04T","promoHeader":"STxdpM","uuiCritical":"_1JO6Pi","uuiInfo":"L8cqQU","uuiSuccess":"EbnSU-","uuiWarning":"CGlaWM","uuiHighlight":"GBSP89","uuiTypographySize12":"zraU4r","uuiTypographySize14":"TJZyXJ","uuiTypographySize16":"Jk-szV","alignWidgetsTop":"DeQhLt","size24":"YIDKNI","size30":"OOVxSW","size36":"_5TkTnM","size42":"yn1SYJ","size48":"Yg56-m","size60":"Q1sNGk","alignWidgetsCenter":"PyS0Sv","padding6":"J-X32D","padding12":"fSsdu7","padding24":"efaSNV","paddingLeft12":"VIRWOz","paddingLeft24":"_9Ktcfn","paddingRight12":"B3L0uI","paddingRight24":"pudqU2","loadingCell":"ThpicB"};

function DataTableCell(props) {
    props = Object.assign({}, props);
    if (props.isFirstColumn) {
        props.addons = React__namespace.createElement(DataRowAddons, Object.assign({}, props));
    }
    props.renderPlaceholder = props.renderPlaceholder
        || (() => (
        // remove `css.loadingCell` after` removing `margin: 0 3px 3px 0` from `TextPlaceholder` `loadingWord` class styles.
        React__namespace.createElement(Text, { key: "t", size: props.size !== '60' ? props.size : '48', cx: css$o.loadingCell },
            React__namespace.createElement(TextPlaceholder, { isNotAnimated: true }))));
    props.renderUnknown = props.renderUnknown
        || (() => (React__namespace.createElement(Text, { key: "t", size: props.size !== '60' ? props.size : '48' }, "Unknown")));
    props.renderTooltip = (tooltipProps) => React__namespace.createElement(Tooltip, Object.assign({ color: "critical" }, tooltipProps));
    const isEditable = !!props.onValueChange;
    const getPaddings = () => {
        const { rowProps, padding, columnsGap } = props;
        const { isLoading } = rowProps;
        if (isEditable && !isLoading) {
            return { padding: '0', sidePadding: '12' };
        }
        if (padding) {
            return { padding, sidePadding: padding };
        }
        switch (columnsGap) {
            case '12':
                return { padding: '6', sidePadding: '12' };
            case '24':
                return { padding: '12', sidePadding: '24' };
        }
        return { padding: '12', sidePadding: '24' };
    };
    props.cx = [
        'data-table-cell',
        props.cx,
        css$o.cell,
        css$o['size-' + (props.size || '36')],
        css$o[`padding-${getPaddings().padding}`],
        props.isFirstColumn && css$o[`padding-left-${getPaddings().sidePadding}`],
        props.isLastColumn && css$o[`padding-right-${getPaddings().sidePadding}`],
        css$o[`align-widgets-${props.alignActions || 'top'}`],
        (props.border || isEditable) && 'uui-dt-vertical-cell-border',
    ];
    return React__namespace.createElement(uuiComponents.DataTableCell, Object.assign({}, props));
}

var css$n = {"uui-typography":"hw4y-d","hero-header":"Er7e4O","promo-header":"Yw7ntJ","uui-critical":"mijoi4","uui-info":"f2REf9","uui-success":"O8o27y","uui-warning":"n0Pt8-","uui-highlight":"s3SYcI","uui-typography-size-12":"I5f5G1","uui-typography-size-14":"gT-Chl","uui-typography-size-16":"XIf-a7","root":"WiQZkx","size-24":"K84ODd","size-30":"MQnxWq","size-36":"GhLU6k","size-48":"-rCVPJ","size-60":"i28xcT","uuiTypography":"hw4y-d","heroHeader":"Er7e4O","promoHeader":"Yw7ntJ","uuiCritical":"mijoi4","uuiInfo":"f2REf9","uuiSuccess":"O8o27y","uuiWarning":"n0Pt8-","uuiHighlight":"s3SYcI","uuiTypographySize12":"I5f5G1","uuiTypographySize14":"gT-Chl","uuiTypographySize16":"XIf-a7","size24":"K84ODd","size30":"MQnxWq","size36":"GhLU6k","size48":"-rCVPJ","size60":"i28xcT"};

// Here we define a single instance of the renderCell function to make DataTableRow#shouldComponentUpdate work.
// As we need our mods to style the cell properly, we extract them from DataTableCellProps.rowProps, which is a hack, but it's reliable enough.
const renderCell = (props) => {
    const mods = props.rowProps;
    return React__namespace.createElement(DataTableCell, Object.assign({}, props, { size: mods.size, columnsGap: mods.columnsGap }));
};
const renderDropMarkers = (props) => React__namespace.createElement(DropMarker, Object.assign({}, props, { enableBlocker: true }));
const propsMods = { renderCell, renderDropMarkers };
const DataTableRow = /* @__PURE__ */uuiCore.withMods(uuiComponents.DataTableRow, ({ borderBottom = true, size }) => {
    return [
        css$n.root, 'uui-dt-vars', borderBottom && 'uui-dt-row-border', css$n['size-' + (size || '36')],
    ];
}, () => propsMods);

var css$m = {"uui-typography":"deXZt6","hero-header":"XGzbMz","promo-header":"OIzjV-","uui-critical":"yYiFm0","uui-info":"rGzi4B","uui-success":"ksKsu-","uui-warning":"etKG8G","uui-highlight":"_-0hvUb","uui-typography-size-12":"_16rCf6","uui-typography-size-14":"PnvAKE","uui-typography-size-16":"_9r9ayE","sorting-panel-container":"TG4YBW","sort-active":"OvkLTQ","uuiTypography":"deXZt6","heroHeader":"XGzbMz","promoHeader":"OIzjV-","uuiCritical":"yYiFm0","uuiInfo":"rGzi4B","uuiSuccess":"ksKsu-","uuiWarning":"etKG8G","uuiHighlight":"_-0hvUb","uuiTypographySize12":"_16rCf6","uuiTypographySize14":"PnvAKE","uuiTypographySize16":"_9r9ayE","sortingPanelContainer":"TG4YBW","sortActive":"OvkLTQ"};

var _path$g;
function _extends$g() { _extends$g = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$g.apply(this, arguments); }
var SvgTableSortAscOutline = function SvgTableSortAscOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$g({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$g || (_path$g = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M11 21V6.825L9.4 8.4 8 7l4-4 4 4-1.4 1.4L13 6.825V21h-2z"
  })));
};
var ForwardRef$g = /*#__PURE__*/React.forwardRef(SvgTableSortAscOutline);

var _path$f;
function _extends$f() { _extends$f = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$f.apply(this, arguments); }
var SvgTableSortDescOutline = function SvgTableSortDescOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$f({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$f || (_path$f = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M13 3v14.175l1.6-1.575L16 17l-4 4-4-4 1.4-1.4 1.6 1.575V3h2z"
  })));
};
var ForwardRef$f = /*#__PURE__*/React.forwardRef(SvgTableSortDescOutline);

const SortingPanelImpl = ({ sortDirection, onSort }) => {
    const sortAsc = React.useCallback(() => onSort(sortDirection === 'asc' ? undefined : 'asc'), [onSort]);
    const sortDesc = React.useCallback(() => onSort(sortDirection === 'desc' ? undefined : 'desc'), [onSort]);
    return (React__namespace.default.createElement(FlexCell, { cx: uuiCore.cx(css$m.sortingPanelContainer, 'uui-dropdownMenu-body') },
        React__namespace.default.createElement(DropdownMenuButton, { isActive: sortDirection === 'asc', caption: i18n.pickerFilterHeader.sortAscending, icon: ForwardRef$g, onClick: sortAsc }),
        React__namespace.default.createElement(DropdownMenuButton, { isActive: sortDirection === 'desc', caption: i18n.pickerFilterHeader.sortDescending, icon: ForwardRef$f, onClick: sortDesc })));
};
const SortingPanel = /* @__PURE__ */React__namespace.default.memo(SortingPanelImpl);

const ColumnHeaderDropdownImpl = (props) => {
    const popperModifiers = React.useMemo(() => [
        {
            name: 'offset',
            options: { offset: [0, 1] },
        }, uuiCore.mobilePopperModifier,
    ], []);
    const closeDropdown = React.useCallback(() => props.onOpenChange(false), [props.onOpenChange]);
    return (React__namespace.default.createElement(uuiComponents.Dropdown, { renderTarget: props.renderTarget, renderBody: (dropdownProps) => (React__namespace.default.createElement(MobileDropdownWrapper, { width: 280, maxWidth: "auto", title: props.title, onClose: closeDropdown },
            props.isSortable && React__namespace.default.createElement(SortingPanel, { sortDirection: props.sortDirection, onSort: props.onSort }),
            props.renderFilter(dropdownProps))), modifiers: popperModifiers, value: props.isOpen, onValueChange: props.onOpenChange }));
};
const ColumnHeaderDropdown = /* @__PURE__ */React__namespace.default.memo(ColumnHeaderDropdownImpl);

var _path$e;
function _extends$e() { _extends$e = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$e.apply(this, arguments); }
var SvgTableSwapOutline = function SvgTableSwapOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$e({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$e || (_path$e = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M7 6.825V20h2V6.825L10.6 8.4 12 7 8 3 4 7l1.4 1.4L7 6.825zm10 10.35V4h-2v13.175L13.4 15.6 12 17l4 4 4-4-1.4-1.4-1.6 1.575z"
  })));
};
var ForwardRef$e = /*#__PURE__*/React.forwardRef(SvgTableSwapOutline);

var _path$d;
function _extends$d() { _extends$d = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$d.apply(this, arguments); }
var SvgContentFiltrationFill = function SvgContentFiltrationFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$d({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$d || (_path$d = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M14 13v8l-4-2v-6L2.95 4h18.1L14 13z"
  })));
};
var ForwardRef$d = /*#__PURE__*/React.forwardRef(SvgContentFiltrationFill);

var _path$c;
function _extends$c() { _extends$c = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$c.apply(this, arguments); }
var SvgNavigationChevronUpOutline = function SvgNavigationChevronUpOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$c({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$c || (_path$c = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M18.586 15.914 20 14.5l-8-8-8 8 1.414 1.414L12 9.328l6.586 6.586z"
  })));
};
var ForwardRef$c = /*#__PURE__*/React.forwardRef(SvgNavigationChevronUpOutline);

var _path$b;
function _extends$b() { _extends$b = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$b.apply(this, arguments); }
var SvgNavigationCollapseAllOutline = function SvgNavigationCollapseAllOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$b({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$b || (_path$b = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M16.5 4.414 15.086 3 12 6.086 8.914 3 7.5 4.414l4.5 4.5 4.5-4.5zM9 13v-2h6v2H9zm6.086 8 1.414-1.414-4.5-4.5-4.5 4.5L8.914 21 12 17.914 15.086 21z"
  })));
};
var ForwardRef$b = /*#__PURE__*/React.forwardRef(SvgNavigationCollapseAllOutline);

var _path$a;
function _extends$a() { _extends$a = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$a.apply(this, arguments); }
var SvgNavigationExpandAllOutline = function SvgNavigationExpandAllOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$a({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$a || (_path$a = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m16.5 7.5-1.414 1.414L12 5.828 8.914 8.914 7.5 7.5 12 3l4.5 4.5zM9 13v-2h6v2H9zm6.086 2.086L16.5 16.5 12 21l-4.5-4.5 1.414-1.414L12 18.17l3.086-3.085z"
  })));
};
var ForwardRef$a = /*#__PURE__*/React.forwardRef(SvgNavigationExpandAllOutline);

var css$l = {"uui-typography":"IFctLC","hero-header":"_7E3sVC","promo-header":"mxglKH","uui-critical":"vdtSJC","uui-info":"_0CVnRg","uui-success":"_0pO6b7","uui-warning":"ozrKz2","uui-highlight":"z4KeBT","uui-typography-size-12":"_1I0Zqc","uui-typography-size-14":"nSCEi5","uui-typography-size-16":"q-NH8R","cell":"_2G1wDg","column-gap-12":"St5cka","caption-wrapper":"Bh9SRA","column-gap-24":"NUDR6h","first-column-12":"XHOflQ","last-column-12":"_4TLUzP","first-column-24":"_7ivK5r","last-column-24":"uEQnOE","sort-icon":"C3Hvk6","dropdown-icon":"cR6IFp","infoIcon":"m4o-dC","resizable":"c2f-C5","size-24":"yw8aZw","size-30":"EQfsof","size-36":"_74XUv-","size-42":"OLsos9","size-48":"GIr-v-","size-60":"pa0B3l","padding-left-24":"yiO0oX","padding-right-24":"FRvT4h","align-right":"FQef41","align-center":"ppzF4Z","caption":"mTDJPl","checkbox":"off2aL","icon":"WTdaVn","fold-all-icon":"ovi6eA","cell-tooltip":"MNqZDC","upper-case":"sDYzGX","font-size-14":"CzNoYN","resize-mark":"p3oSs8","resize-mark-6":"Ldp30G","resize-mark-12":"a7ZTZR","pinned-right":"_4bH2n3","draggable":"jKI6vL","ghost":"DRWtve","is-dragged-out":"_3IFWUR","dnd-marker-left":"s-4TVE","dnd-marker-right":"BeXWMq","cell-tooltip-wrapper":"dsLGNB","cell-tooltip-text":"BHq9kc","uuiTypography":"IFctLC","heroHeader":"_7E3sVC","promoHeader":"mxglKH","uuiCritical":"vdtSJC","uuiInfo":"_0CVnRg","uuiSuccess":"_0pO6b7","uuiWarning":"ozrKz2","uuiHighlight":"z4KeBT","uuiTypographySize12":"_1I0Zqc","uuiTypographySize14":"nSCEi5","uuiTypographySize16":"q-NH8R","columnGap12":"St5cka","captionWrapper":"Bh9SRA","columnGap24":"NUDR6h","firstColumn12":"XHOflQ","lastColumn12":"_4TLUzP","firstColumn24":"_7ivK5r","lastColumn24":"uEQnOE","sortIcon":"C3Hvk6","dropdownIcon":"cR6IFp","size24":"yw8aZw","size30":"EQfsof","size36":"_74XUv-","size42":"OLsos9","size48":"GIr-v-","size60":"pa0B3l","paddingLeft24":"yiO0oX","paddingRight24":"FRvT4h","alignRight":"FQef41","alignCenter":"ppzF4Z","foldAllIcon":"ovi6eA","cellTooltip":"MNqZDC","upperCase":"sDYzGX","fontSize14":"CzNoYN","resizeMark":"p3oSs8","resizeMark6":"Ldp30G","resizeMark12":"a7ZTZR","pinnedRight":"_4bH2n3","isDraggedOut":"_3IFWUR","dndMarkerLeft":"s-4TVE","dndMarkerRight":"BeXWMq","cellTooltipWrapper":"dsLGNB","cellTooltipText":"BHq9kc"};

class DataTableHeaderCell extends React__namespace.Component {
    constructor() {
        super(...arguments);
        this.state = {
            isDropdownOpen: null,
        };
        this.getTextStyle = () => {
            if (this.props.textCase === 'upper')
                return css$l.upperCase;
            return css$l['font-size-14'];
        };
        this.getTooltipContent = (column) => (React__namespace.createElement("div", { className: css$l.cellTooltipWrapper },
            React__namespace.createElement(Text, { fontSize: "14", fontWeight: "600", cx: css$l.cellTooltipText }, column.caption),
            column.info && React__namespace.createElement(Text, { fontSize: "12", cx: css$l.cellTooltipText }, column.info)));
        this.getColumnCaption = () => {
            const renderTooltip = this.props.column.renderTooltip || this.getTooltipContent;
            return (React__namespace.createElement("div", { className: uuiCore.cx(css$l.captionWrapper, css$l['align-' + this.props.column.textAlign], uuiCore.uuiDataTableHeaderCell.uuiTableHeaderCaptionWrapper) },
                React__namespace.createElement(Tooltip, { placement: "top", color: "inverted", content: renderTooltip(this.props.column), cx: css$l.cellTooltip, openDelay: 600 },
                    React__namespace.createElement(Text, { key: "text", lineHeight: "30", fontSize: "14", size: "30", cx: uuiCore.cx(css$l.caption, this.getTextStyle(), uuiCore.uuiDataTableHeaderCell.uuiTableHeaderCaption) }, this.props.column.caption)),
                this.props.column.isSortable && (!this.props.column.renderFilter || this.props.sortDirection) && (React__namespace.createElement(IconButton, { key: "sort", cx: uuiCore.cx(css$l.icon, css$l.sortIcon, this.props.sortDirection && css$l.sortIconActive, uuiCore.uuiDataTableHeaderCell.uuiTableHeaderSortIcon), color: this.props.sortDirection ? 'neutral' : 'secondary', icon: this.props.sortDirection === 'desc' ? ForwardRef$f : this.props.sortDirection === 'asc' ? ForwardRef$g : ForwardRef$e })),
                this.props.isFilterActive && (React__namespace.createElement(IconButton, { key: "filter", cx: uuiCore.cx(css$l.icon, !this.props.sortDirection && css$l.filterIcon, uuiCore.uuiDataTableHeaderCell.uuiTableHeaderFilterIcon), color: "neutral", icon: ForwardRef$d })),
                this.props.column.renderFilter && (React__namespace.createElement(IconButton, { key: "dropdown", cx: uuiCore.cx(css$l.icon, css$l.dropdownIcon, uuiCore.uuiDataTableHeaderCell.uuiTableHeaderDropdownIcon), color: "secondary", icon: this.state.isDropdownOpen ? ForwardRef$c : ForwardRef$P }))));
        };
        this.renderHeaderCheckbox = () => {
            if (this.props.selectAll && this.props.isFirstColumn) {
                return (React__namespace.createElement(Checkbox, Object.assign({ size: +this.props.size < 36 ? '12' : '18' }, this.props.selectAll, { cx: uuiCore.cx(css$l.checkbox, uuiCore.uuiDataTableHeaderCell.uuiTableHeaderCheckbox) })));
            }
        };
        this.renderFoldAllIcon = () => {
            if (this.props.isFirstColumn && this.props.showFoldAll) {
                return (React__namespace.createElement(Tooltip, { content: this.props.areAllFolded
                        ? i18n.tables.columnHeader.expandAllTooltip
                        : i18n.tables.columnHeader.collapseAllTooltip },
                    React__namespace.createElement(IconButton, { color: "secondary", cx: uuiCore.cx(css$l.icon, css$l.foldAllIcon, uuiCore.uuiDataTableHeaderCell.uuiTableHeaderFoldAllIcon), icon: this.props.areAllFolded ? ForwardRef$a : ForwardRef$b, onClick: this.props.onFoldAll, rawProps: {
                            'aria-label': this.props.areAllFolded ? 'Expand All' : 'Collapse All',
                            'aria-expanded': !!this.props.areAllFolded,
                        } })));
            }
        };
        this.renderResizeMark = (props) => {
            const resizeMarkSize = this.props.columnsGap === '12' ? '6' : '12';
            return (React__namespace.createElement("div", { role: "separator", onMouseDown: props.onResizeStart, className: uuiCore.cx(css$l.resizeMark, css$l[`resize-mark-${resizeMarkSize}`], uuiCore.uuiMarkers.draggable, uuiCore.uuiMarkers.clickable) }));
        };
        this.renderCellContent = (props, dropdownProps) => {
            var _a;
            const isResizable = (_a = this.props.column.allowResizing) !== null && _a !== void 0 ? _a : this.props.allowColumnsResizing;
            const onClickEvent = !props.isResizing && (!this.props.column.renderFilter ? props.toggleSort : dropdownProps === null || dropdownProps === void 0 ? void 0 : dropdownProps.onClick);
            const sideColumnPadding = this.props.columnsGap === '12' ? '12' : '24';
            return (React__namespace.createElement(uuiComponents.DataTableCellContainer, { column: this.props.column, ref: (ref) => {
                    var _a;
                    props.ref(ref);
                    (_a = dropdownProps === null || dropdownProps === void 0 ? void 0 : dropdownProps.ref) === null || _a === void 0 ? void 0 : _a.call(dropdownProps, ref);
                }, cx: uuiCore.cx(uuiCore.uuiDataTableHeaderCell.uuiTableHeaderCell, (this.props.column.isSortable || this.props.isDropdown) && uuiCore.uuiMarkers.clickable, css$l.cell, css$l['size-' + (this.props.size || '36')], this.props.columnsGap && css$l[`column-gap-${this.props.columnsGap}`], this.props.isFirstColumn && css$l[`first-column-${sideColumnPadding}`], this.props.isLastColumn && css$l[`last-column-${sideColumnPadding}`], this.props.column.fix && css$l['pinned-' + this.props.column.fix], isResizable && css$l.resizable, props.isDraggable && css$l.draggable, props.isDragGhost && css$l.ghost, props.isDraggedOut && css$l.isDraggedOut, props.isDndInProgress && css$l['dnd-marker-' + props.position]), onClick: onClickEvent, rawProps: Object.assign({ role: 'columnheader', 'aria-sort': this.props.sortDirection === 'asc' ? 'ascending' : this.props.sortDirection ? 'descending' : 'none' }, props.eventHandlers) },
                this.renderHeaderCheckbox(),
                this.renderFoldAllIcon(),
                this.getColumnCaption(),
                isResizable && this.renderResizeMark(props)));
        };
        this.renderCellWithFilter = (props) => (React__namespace.createElement(ColumnHeaderDropdown, { isOpen: this.state.isDropdownOpen, isSortable: this.props.column.isSortable, renderTarget: (dropdownProps) => this.renderCellContent(props, dropdownProps), renderFilter: this.props.renderFilter, onSort: this.props.onSort, sortDirection: this.props.sortDirection, onOpenChange: (isDropdownOpen) => this.setState({ isDropdownOpen }), title: this.props.column.caption }));
    }
    render() {
        if (this.props.column.renderHeaderCell) {
            return this.props.column.renderHeaderCell(this.props);
        }
        return React__namespace.createElement(uuiComponents.DataTableHeaderCell, Object.assign({}, this.props, { renderCellContent: this.props.column.renderFilter ? this.renderCellWithFilter : this.renderCellContent }));
    }
}

var _path$9;
function _extends$9() { _extends$9 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$9.apply(this, arguments); }
var SvgActionSettingsFill = function SvgActionSettingsFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$9({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$9 || (_path$9 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m9.25 22-.4-3.2a3.771 3.771 0 0 1-.612-.3 8.194 8.194 0 0 1-.563-.375L4.7 19.375l-2.75-4.75 2.575-1.95a2.39 2.39 0 0 1-.025-.338v-.675c0-.108.009-.22.025-.337L1.95 9.375l2.75-4.75 2.975 1.25c.184-.133.375-.258.575-.375.2-.117.4-.217.6-.3l.4-3.2h5.5l.4 3.2c.217.083.421.183.613.3.191.117.379.242.562.375l2.975-1.25 2.75 4.75-2.575 1.95c.017.117.025.229.025.337v.675c0 .109-.017.221-.05.338l2.575 1.95-2.75 4.75-2.95-1.25a6.826 6.826 0 0 1-.575.375c-.2.117-.4.217-.6.3l-.4 3.2h-5.5zm2.8-6.5c.967 0 1.792-.342 2.475-1.025A3.372 3.372 0 0 0 15.55 12c0-.967-.341-1.792-1.025-2.475A3.372 3.372 0 0 0 12.05 8.5c-.983 0-1.813.342-2.488 1.025A3.394 3.394 0 0 0 8.55 12c0 .967.338 1.792 1.012 2.475.676.683 1.505 1.025 2.488 1.025z"
  })));
};
var ForwardRef$9 = /*#__PURE__*/React.forwardRef(SvgActionSettingsFill);

var css$k = {"uui-typography":"_1vQmKT","hero-header":"QHN6Gg","promo-header":"_0ya0y7","uui-critical":"vB-1qk","uui-info":"pCDuaQ","uui-success":"AwJ8T2","uui-warning":"EByQuc","uui-highlight":"gnOEjL","uui-typography-size-12":"LNyVBu","uui-typography-size-14":"pCVgNJ","uui-typography-size-16":"wXaHom","header-cell":"EvpwS-","truncate":"ee0omN","uuiTypography":"_1vQmKT","heroHeader":"QHN6Gg","promoHeader":"_0ya0y7","uuiCritical":"vB-1qk","uuiInfo":"pCDuaQ","uuiSuccess":"AwJ8T2","uuiWarning":"EByQuc","uuiHighlight":"gnOEjL","uuiTypographySize12":"LNyVBu","uuiTypographySize14":"pCVgNJ","uuiTypographySize16":"wXaHom","headerCell":"EvpwS-"};

const DataTableHeaderRow = /* @__PURE__ */uuiCore.withMods(uuiComponents.DataTableHeaderRow, (props) => [css$k.root, 'uui-dt-vars', props.size === '48' && css$k.truncate], (mods) => ({
    renderCell: (props) => React__namespace.createElement(DataTableHeaderCell, Object.assign({}, props, { size: mods.size, textCase: mods.textCase || 'normal', key: props.column.key, columnsGap: mods.columnsGap })),
    renderConfigButton: () => React__namespace.createElement(IconButton, { key: "configuration", onClick: mods.onConfigButtonClick, cx: "config-icon", color: "neutral", icon: ForwardRef$9 }),
}));

var styles$1 = {"uui-typography":"AbOcMH","hero-header":"XvJ-4Y","promo-header":"XVcCr9","uui-critical":"t31Bt2","uui-info":"niYF6C","uui-success":"qHvpir","uui-warning":"nMFabM","uui-highlight":"_4WVajJ","uui-typography-size-12":"dzuE4i","uui-typography-size-14":"_1cknu-","uui-typography-size-16":"EgxOnP","main-panel":"pJhDJ5","group-title":"_36dpUL","group-title-text":"v19Io7","group-title-badge":"ioZllf","group-items":"mhLFRd","no-data":"Ps6FMI","h-divider":"_6xJrpw","search-area":"GD-Cin","subgroup-accordion":"DFZvgg","subgroup-title":"Nel2n0","uuiTypography":"AbOcMH","heroHeader":"XvJ-4Y","promoHeader":"XVcCr9","uuiCritical":"t31Bt2","uuiInfo":"niYF6C","uuiSuccess":"qHvpir","uuiWarning":"nMFabM","uuiHighlight":"_4WVajJ","uuiTypographySize12":"dzuE4i","uuiTypographySize14":"_1cknu-","uuiTypographySize16":"EgxOnP","mainPanel":"pJhDJ5","groupTitle":"_36dpUL","groupTitleText":"v19Io7","groupTitleBadge":"ioZllf","groupItems":"mhLFRd","noData":"Ps6FMI","hDivider":"_6xJrpw","searchArea":"GD-Cin","subgroupAccordion":"DFZvgg","subgroupTitle":"Nel2n0"};

var _path$8;
function _extends$8() { _extends$8 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8.apply(this, arguments); }
var SvgActionLockFill = function SvgActionLockFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$8({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$8 || (_path$8 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M12 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4zM7 9V7a5 5 0 0 1 10 0v2h1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V11a2 2 0 0 1 2-2h1zm2 0h6V7a3 3 0 1 0-6 0v2z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$8 = /*#__PURE__*/React.forwardRef(SvgActionLockFill);

var _path$7, _path2$2;
function _extends$7() { _extends$7 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7.apply(this, arguments); }
var SvgTableGroupColumnLeftFill = function SvgTableGroupColumnLeftFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$7({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$7 || (_path$7 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M5 3a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6V3H5z"
  })), _path2$2 || (_path2$2 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M13 21V3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-6zm2-16h4v14h-4V5z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$7 = /*#__PURE__*/React.forwardRef(SvgTableGroupColumnLeftFill);

var _path$6, _path2$1;
function _extends$6() { _extends$6 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6.apply(this, arguments); }
var SvgTableGroupColumnRightFill = function SvgTableGroupColumnRightFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$6({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$6 || (_path$6 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M13 3h6a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-6V3z"
  })), _path2$1 || (_path2$1 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M9 5H5v14h4V5zM5 3a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h6V3H5z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$6 = /*#__PURE__*/React.forwardRef(SvgTableGroupColumnRightFill);

var css$j = {"unpin-icon":"_8ixFfQ","pin-toggler-icon":"cAjTDl","unpinIcon":"_8ixFfQ","pinTogglerIcon":"cAjTDl"};

function PinIconButton(props) {
    const i18nLocal = i18n.tables.columnsConfigurationModal;
    const { onTogglePin, pinPosition, canUnpin, } = props;
    const isPinned = !!pinPosition;
    const isPinnedAlways = isPinned && !canUnpin;
    let pinUnpinNode;
    if (isPinned) {
        const unpinIcon = getUnpinIcon({ isPinnedAlways, pinPosition });
        const iconTooltip = isPinnedAlways ? i18nLocal.lockedColumnPinButton : i18nLocal.unPinColumnButton;
        const unpinClickHandler = isPinnedAlways ? undefined : () => onTogglePin(undefined);
        pinUnpinNode = (React__namespace.createElement(Tooltip, { content: iconTooltip, placement: "bottom", color: "inverted" },
            React__namespace.createElement(IconButton, { cx: uuiCore.cx(!isPinnedAlways && css$j.unpinIcon, css$j.pinTogglerIcon), icon: unpinIcon, onClick: unpinClickHandler, isDisabled: isPinnedAlways, color: "primary" })));
    }
    else {
        pinUnpinNode = (React__namespace.createElement("span", { style: { display: 'flex', gap: '12px' } },
            React__namespace.createElement(Tooltip, { content: i18nLocal.pinColumnToTheLeftButton, placement: "bottom", color: "inverted" },
                React__namespace.createElement(IconButton, { cx: css$j.pinTogglerIcon, icon: ForwardRef$7, onClick: () => onTogglePin('left'), isDisabled: isPinnedAlways, color: undefined })),
            React__namespace.createElement(Tooltip, { content: i18nLocal.pinColumnToTheRightButton, placement: "bottom", color: "inverted" },
                React__namespace.createElement(IconButton, { cx: css$j.pinTogglerIcon, icon: ForwardRef$6, onClick: () => onTogglePin('right'), isDisabled: isPinnedAlways, color: undefined }))));
    }
    return (React__namespace.createElement("span", null, pinUnpinNode));
}
function getUnpinIcon(params) {
    const { isPinnedAlways, pinPosition } = params;
    if (isPinnedAlways) {
        return ForwardRef$8;
    }
    switch (pinPosition) {
        case 'left': {
            return ForwardRef$7;
        }
        case 'right': {
            return ForwardRef$6;
        }
        default: {
            return;
        }
    }
}

var _path$5;
function _extends$5() { _extends$5 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5.apply(this, arguments); }
var SvgActionDragIndicator18 = function SvgActionDragIndicator18(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$5({
    xmlns: "http://www.w3.org/2000/svg",
    width: 18,
    height: 18,
    viewBox: "0 0 18 18",
    ref: ref
  }, props), _path$5 || (_path$5 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M8 13.5c0 .825-.675 1.5-1.5 1.5S5 14.325 5 13.5 5.675 12 6.5 12s1.5.675 1.5 1.5zm-1.5-6C5.675 7.5 5 8.175 5 9s.675 1.5 1.5 1.5S8 9.825 8 9s-.675-1.5-1.5-1.5zm0-4.5C5.675 3 5 3.675 5 4.5S5.675 6 6.5 6 8 5.325 8 4.5 7.325 3 6.5 3zm5 3c.825 0 1.5-.675 1.5-1.5S12.325 3 11.5 3 10 3.675 10 4.5 10.675 6 11.5 6zm0 1.5c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5S13 9.825 13 9s-.675-1.5-1.5-1.5zm0 4.5c-.825 0-1.5.675-1.5 1.5s.675 1.5 1.5 1.5 1.5-.675 1.5-1.5-.675-1.5-1.5-1.5z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$5 = /*#__PURE__*/React.forwardRef(SvgActionDragIndicator18);

var styles = {"uui-typography":"knwmxQ","hero-header":"i1Upub","promo-header":"A9jkLM","uui-critical":"n2gZgf","uui-info":"WbEEVJ","uui-success":"a5Gy8v","uui-warning":"D3Hlws","uui-highlight":"CtCpXD","uui-typography-size-12":"hBgn3K","uui-typography-size-14":"_5-fQMV","uui-typography-size-16":"Z2Z5nM","row-wrapper":"dZCaxb","not-pinned":"Gru9S6","pin-icon-button":"B3bOva","checkbox":"-V3uzv","drag-handle":"n7B9CS","dnd-disabled":"w78BoS","uuiTypography":"knwmxQ","heroHeader":"i1Upub","promoHeader":"A9jkLM","uuiCritical":"n2gZgf","uuiInfo":"WbEEVJ","uuiSuccess":"a5Gy8v","uuiWarning":"D3Hlws","uuiHighlight":"CtCpXD","uuiTypographySize12":"hBgn3K","uuiTypographySize14":"_5-fQMV","uuiTypographySize16":"Z2Z5nM","rowWrapper":"dZCaxb","notPinned":"Gru9S6","pinIconButton":"B3bOva","dragHandle":"n7B9CS","dndDisabled":"w78BoS"};

const ColumnRow = /* @__PURE__ */React__namespace.memo(function ColumnRow(props) {
    const { column } = props;
    const { toggleVisibility, togglePin, onCanAcceptDrop, onDrop, columnConfig, isDndAllowed, isPinnedAlways, } = column;
    const { isVisible, fix } = columnConfig;
    const pinPosition = fix || (isPinnedAlways ? 'left' : undefined);
    const isPinned = !!pinPosition;
    const data = { column, columnConfig };
    const renderContent = (dndActorParams) => {
        const wrapperClasses = uuiCore.cx(styles.rowWrapper, !isPinned && styles.notPinned);
        const _a = dndActorParams.eventHandlers, { onTouchStart, onPointerDown } = _a, restEventHandlers = __rest(_a, ["onTouchStart", "onPointerDown"]);
        const dndActorPropsWithoutRef = __rest(dndActorParams, ["ref"]);
        return (React__namespace.createElement(FlexRow, { size: "30", cx: wrapperClasses, ref: dndActorParams.ref, rawProps: Object.assign({}, restEventHandlers) },
            React__namespace.createElement(uuiComponents.DragHandle, { dragHandleIcon: ForwardRef$5, rawProps: { onTouchStart, onPointerDown }, isDisabled: !isDndAllowed, cx: uuiCore.cx(styles.dragHandle, !isDndAllowed && styles.dndDisabled) }),
            React__namespace.createElement(Checkbox, { key: column.key, label: props.renderItem ? props.renderItem(props.column) : column.caption, value: isVisible, onValueChange: toggleVisibility, isDisabled: column.isAlwaysVisible, cx: styles.checkbox }),
            React__namespace.createElement(FlexRow, { size: "30", cx: styles.pinIconButton },
                React__namespace.createElement(PinIconButton, { pinPosition: pinPosition, canUnpin: !isPinnedAlways, onTogglePin: togglePin })),
            React__namespace.createElement(DropMarker, Object.assign({}, dndActorPropsWithoutRef))));
    };
    return (React__namespace.createElement(uuiCore.DndActor, { key: column.key, srcData: isDndAllowed && data, dstData: data, canAcceptDrop: onCanAcceptDrop, onDrop: onDrop, render: renderContent }));
});

const renderGroupTitle = (title, amount) => (React__namespace.createElement(FlexRow, { size: "24", padding: "24", columnGap: "6", cx: styles$1.groupTitle },
    React__namespace.createElement(Text, { cx: styles$1.groupTitleText, fontWeight: "600", lineHeight: "24", fontSize: "14" }, title),
    React__namespace.createElement(CountIndicator, { caption: amount, color: "neutral", size: "18" }),
    React__namespace.createElement(uuiComponents.FlexSpacer, null)));
function ColumnsConfigurationModal(props) {
    const i18n$1 = i18n.tables.columnsConfigurationModal;
    const { columns, columnsConfig: initialColumnsConfig, defaultConfig } = props, modalProps = __rest(props, ["columns", "columnsConfig", "defaultConfig"]);
    const { groupedColumns, searchValue, columnsConfig, reset, checkAll, uncheckAll, setSearchValue, hasAnySelectedColumns, } = uuiComponents.useColumnsConfiguration({
        initialColumnsConfig,
        columns,
        defaultConfig,
        getSearchFields: props.getSearchFields,
    });
    const apply = React.useCallback(() => modalProps.success(columnsConfig), [columnsConfig, modalProps]);
    const close = React.useCallback(() => modalProps.abort(), [modalProps]);
    const isNoData = React.useMemo(() => Object.values(groupedColumns).every((v) => !v.length), [groupedColumns]);
    const renderVisible = () => {
        const amountPinnedLeft = groupedColumns.displayedPinnedLeft.length;
        const amountPinnedRight = groupedColumns.displayedPinnedRight.length;
        const amountUnPinned = groupedColumns.displayedUnpinned.length;
        const totalAmountOfVisibleColumns = amountPinnedLeft + amountUnPinned + amountPinnedRight;
        if (!totalAmountOfVisibleColumns) {
            return null;
        }
        const hasDividerBelowPinnedLeft = !!(amountPinnedLeft && amountUnPinned);
        const hasDividerAbovePinnedRight = !!(amountPinnedRight && amountUnPinned);
        return (React__namespace.createElement(React__namespace.Fragment, null,
            renderGroupTitle(i18n$1.displayedSectionTitle, totalAmountOfVisibleColumns),
            React__namespace.createElement(SubGroup, { renderItem: props.renderItem, title: i18n$1.pinnedToTheLeftSubgroupTitle, items: groupedColumns.displayedPinnedLeft }),
            hasDividerBelowPinnedLeft && React__namespace.createElement("div", { className: styles$1.hDivider }),
            React__namespace.createElement(SubGroup, { renderItem: props.renderItem, title: i18n$1.notPinnedSubgroupTitle, items: groupedColumns.displayedUnpinned }),
            hasDividerAbovePinnedRight && React__namespace.createElement("div", { className: styles$1.hDivider }),
            React__namespace.createElement(SubGroup, { renderItem: props.renderItem, title: i18n$1.pinnedToTheRightSubgroupTitle, items: groupedColumns.displayedPinnedRight })));
    };
    const renderHidden = () => {
        const items = groupedColumns.hidden;
        const title = renderGroupTitle(i18n$1.hiddenSectionTitle, items.length);
        if (!items.length) {
            return null;
        }
        return (React__namespace.createElement(React__namespace.Fragment, null,
            title,
            React__namespace.createElement(SubGroup, { renderItem: props.renderItem, items: items })));
    };
    const applyButton = React__namespace.createElement(Button, { caption: i18n$1.applyButton, isDisabled: !hasAnySelectedColumns, color: "primary", onClick: apply });
    return (React__namespace.createElement(ModalBlocker, Object.assign({}, modalProps),
        React__namespace.createElement(ModalWindow, { cx: styles$1.modal, height: "95dvh", maxHeight: "95dvh" },
            React__namespace.createElement(ModalHeader, { title: i18n$1.configureColumnsTitle, onClose: close }),
            React__namespace.createElement(FlexRow, { padding: "24", borderBottom: true, columnGap: "12", cx: styles$1.searchArea },
                React__namespace.createElement(SearchInput, { size: "30", value: searchValue, onValueChange: setSearchValue, placeholder: i18n$1.searchPlaceholder }),
                React__namespace.createElement(Dropdown, { closeOnTargetClick: true, renderBody: () => (React__namespace.createElement(DropdownMenuBody, { minWidth: 100 },
                        React__namespace.createElement(DropdownMenuButton, { caption: i18n$1.clearAllButton, onClick: uncheckAll }),
                        React__namespace.createElement(DropdownMenuButton, { caption: i18n$1.selectAllButton, onClick: checkAll }))), renderTarget: (props) => React__namespace.createElement(Button, Object.assign({}, props, { fill: "none", icon: ForwardRef$p, size: "30", color: "secondary", isDropdown: false })) })),
            React__namespace.createElement(Panel, { background: "surface-main", cx: styles$1.mainPanel },
                React__namespace.createElement(ScrollBars, null,
                    renderVisible(),
                    renderHidden(),
                    isNoData && (React__namespace.createElement(FlexRow, { cx: styles$1.noData },
                        React__namespace.createElement(Text, { fontSize: "24", lineHeight: "30", color: "primary", fontWeight: "600" }, i18n$1.noResultsFound.text),
                        React__namespace.createElement(Text, { fontSize: "16", lineHeight: "24", color: "primary" }, i18n$1.noResultsFound.subText))))),
            React__namespace.createElement(ModalFooter, { borderTop: true },
                React__namespace.createElement(LinkButton, { icon: ForwardRef$o, caption: i18n$1.resetToDefaultButton, onClick: reset }),
                React__namespace.createElement(uuiComponents.FlexSpacer, null),
                React__namespace.createElement(Button, { fill: "none", color: "secondary", caption: i18n$1.cancelButton, onClick: close }),
                !hasAnySelectedColumns ? (React__namespace.createElement(Tooltip, { content: i18n$1.enableAtLeastOneColumnMessage, placement: "top-end", color: "critical" }, applyButton)) : (applyButton)))));
}
function SubGroup(props) {
    const [isExpanded, setIsExpanded] = React.useState(true);
    const { title, items, renderItem } = props;
    const isCollapsible = !!title;
    if (items.length) {
        const content = (React__namespace.createElement(FlexRow, { cx: styles$1.groupItems, size: "30" }, items.map((c) => (React__namespace.createElement(ColumnRow, { column: c, key: c.key, renderItem: renderItem })))));
        if (isCollapsible) {
            const renderTitle = (isOpened) => {
                const toggleIcon = isOpened ? ForwardRef$P : ForwardRef$u;
                return (React__namespace.createElement("span", { className: uuiCore.cx(styles$1.subgroupTitle) },
                    React__namespace.createElement(uuiComponents.IconContainer, { size: 18, icon: toggleIcon, flipY: false }),
                    title));
            };
            return (React__namespace.createElement(uuiComponents.Accordion, { value: isExpanded, onValueChange: setIsExpanded, renderTitle: renderTitle, cx: styles$1.subgroupAccordion }, content));
        }
        return content;
    }
    return null;
}

var css$i = {"listContainer":"isxXjZ","header":"WB3-XJ","group":"_02BXus","stickyHeader":"lACdxs"};

const getChildrenAndRest = (row, rows) => {
    const firstNotChildIndex = rows.findIndex((other) => other.depth < row.depth || (row.depth === other.depth && other.isPinned));
    if (firstNotChildIndex === -1) {
        return [rows, []];
    }
    if (firstNotChildIndex === 0) {
        return [[], rows];
    }
    const children = rows.slice(0, firstNotChildIndex);
    const rest = rows.slice(firstNotChildIndex, rows.length);
    return [children, rest];
};

function DataRowsGroup({ row, childRows, renderRow, top = 1, }) {
    var _a, _b;
    const rowRef = React.useRef();
    const childrenPinnedTop = row.isPinned ? (top + ((_b = (_a = rowRef.current) === null || _a === void 0 ? void 0 : _a.clientHeight) !== null && _b !== void 0 ? _b : 0)) : top;
    return (React__namespace.default.createElement("div", { className: css$i.group, key: row.rowKey },
        React__namespace.default.createElement("div", { className: row.isPinned ? css$i.stickyHeader : css$i.header, 
            // Gaps between pinned parents should be removed by -1 from top height.
            // Otherwise, sometimes top value is rounded top.
            style: { zIndex: row.depth + 10, top: top - 1 }, ref: rowRef }, renderRow(row)),
        childRows.length > 0 && (React__namespace.default.createElement("div", null,
            React__namespace.default.createElement(DataRowsGroups, { rows: childRows, renderRow: renderRow, top: childrenPinnedTop })))));
}
const renderRows = (rows, renderRow, top) => {
    if (!rows.length)
        return [];
    const [row, ...rest] = rows;
    if (!rest.length) {
        return [renderRow(row)];
    }
    const [next] = rest;
    if (next.depth <= row.depth && !row.isPinned) {
        return [renderRow(row)].concat(renderRows(rest, renderRow, top));
    }
    const [children, otherRows] = getChildrenAndRest(row, rest);
    const group = (React__namespace.default.createElement(DataRowsGroup, { row: row, childRows: children, renderRow: renderRow, top: top, key: row.rowKey }));
    return [group].concat(renderRows(otherRows, renderRow, top));
};
function DataRowsGroups({ rows, renderRow, top = 1, }) {
    const rowsWithGroups = renderRows(rows, renderRow, top);
    // eslint-disable-next-line react/jsx-no-useless-fragment
    return (React__namespace.default.createElement(React__namespace.default.Fragment, null, rowsWithGroups));
}

function DataRowsContainer({ estimatedHeight, listContainerRef, offsetY, rows, renderRow, headerRef, }) {
    var _a;
    return (React__namespace.default.createElement("div", { className: css$i.listContainer, style: { minHeight: `${estimatedHeight}px` } },
        React__namespace.default.createElement("div", { ref: listContainerRef, role: "rowgroup", style: { marginTop: offsetY } },
            React__namespace.default.createElement(DataRowsGroups, { rows: rows, renderRow: renderRow, top: (_a = headerRef === null || headerRef === void 0 ? void 0 : headerRef.current) === null || _a === void 0 ? void 0 : _a.clientHeight }))));
}

var _path$4, _path2, _path3, _path4, _path5, _path6, _g, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _defs;
function _extends$4() { _extends$4 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4.apply(this, arguments); }
var SvgEmptyTable = function SvgEmptyTable(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$4({
    width: 232,
    height: 180,
    viewBox: "0 0 232 180",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: ref
  }, props), /*#__PURE__*/React__namespace.createElement("g", {
    clipPath: "url(#dttaa0b2ic052d5qn_a)"
  }, _path$4 || (_path$4 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M150.585 1.535C49.483-11.495 27.481 61.805 45.725 97.481c10.581 20.69-39.64 70.792 17.744 81.468 27.538 5.123 36-13.341 62.433-10.655 35.4 3.6 148.167-4.73 88.349-78.915-31.713-39.335 1.026-79.506-63.666-87.844Z",
    fill: "#F5F6FA"
  })), _path2 || (_path2 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m58.069 136.51-.654 4.238-1.27-5.38a58.934 58.934 0 0 0-11.462-4.965l-.083 5.636-2.545-6.393a55.094 55.094 0 0 0-13.655-1.854l.704 6.178-3.356-6.108c-4.151.183-8.256.946-12.195 2.268l2.33 3.525s-2.173-1.597-4.084-2.896a40.951 40.951 0 0 0-10.833 6.285 85.492 85.492 0 0 0 12.575 10.527c2.482-.637 5.127-1.279 5.127-1.279l-3.261 2.537a69.366 69.366 0 0 0 13.283 6.865c2.346-1.353 5.416-3.269 5.416-3.269l-3.554 3.931a42.226 42.226 0 0 0 15.45 2.359l4.259-4.213-1.697 4.001c7.002-.848 14.144-3.902 20.95-10.344-1.621-3.869-5.768-8.073-11.445-11.649Z",
    fill: "#9BDEFF"
  })), _path3 || (_path3 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M.557 136.978a.413.413 0 0 1 .475-.342l68.549 11.118a.414.414 0 0 1-.133.817L.9 137.453a.415.415 0 0 1-.342-.475Z",
    fill: "#fff"
  })), _path4 || (_path4 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M174.887 125.586h-88.1c-2.752 0-5.38-2.234-5.38-4.986V27.534c0-2.752 2.644-4.966 5.38-4.966h88.1c2.752 0 5.4 2.23 5.4 4.966V120.6c0 2.752-2.632 4.986-5.4 4.986Z",
    fill: "#9BDEFF"
  })), _path5 || (_path5 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M86.786 22.982c-2.55 0-4.965 2.07-4.965 4.552V120.6c0 2.484 2.4 4.572 4.965 4.572h88.101c2.582 0 4.986-2.089 4.986-4.572V27.534c0-2.464-2.418-4.552-4.986-4.552h-88.1Zm-5.793 4.552c0-3.022 2.874-5.38 5.793-5.38h88.101c2.935 0 5.814 2.374 5.814 5.38V120.6c0 3.021-2.86 5.4-5.814 5.4h-88.1c-2.94 0-5.794-2.381-5.794-5.4V27.534Z",
    fill: "#1D1E26"
  })), /*#__PURE__*/React__namespace.createElement("mask", {
    id: "dttaa03gpjzndwh0b_b",
    style: {
      maskType: "alpha"
    },
    maskUnits: "userSpaceOnUse",
    x: 81,
    y: 22,
    width: 100,
    height: 104
  }, _path6 || (_path6 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M174.887 125.586h-88.1c-2.752 0-5.38-2.234-5.38-4.986V27.534c0-2.752 2.644-4.966 5.38-4.966h88.1c2.752 0 5.4 2.23 5.4 4.966V120.6c0 2.752-2.632 4.986-5.4 4.986Z",
    fill: "#9BDEFF"
  }))), _g || (_g = /*#__PURE__*/React__namespace.createElement("g", {
    mask: "url(#dttaa03gpjzndwh0b_b)",
    fillRule: "evenodd",
    clipRule: "evenodd"
  }, /*#__PURE__*/React__namespace.createElement("path", {
    d: "M69.817 99.247a.414.414 0 0 1 .585-.003l50.88 50.483a.414.414 0 0 1-.583.588l-50.88-50.483a.414.414 0 0 1-.002-.585ZM72.802 28.407a.414.414 0 0 1 .553.192l63.6 131.172a.413.413 0 1 1-.745.361L72.61 28.96a.414.414 0 0 1 .192-.553Z",
    fill: "#fff"
  }), /*#__PURE__*/React__namespace.createElement("path", {
    d: "M142.576 6.515a.415.415 0 0 1 .087.58L60.185 118.817a.413.413 0 1 1-.665-.491L141.997 6.603a.414.414 0 0 1 .579-.088ZM197.977 60.314c.181.14.214.4.075.58l-76.734 99.311a.414.414 0 0 1-.655-.506l76.734-99.31a.413.413 0 0 1 .58-.075ZM192.316 43.44a.413.413 0 0 1-.103.576L60.089 135.878a.414.414 0 0 1-.473-.68L191.74 43.336a.414.414 0 0 1 .576.104Z",
    fill: "#fff"
  }), /*#__PURE__*/React__namespace.createElement("path", {
    d: "M91.966 11.532a.414.414 0 0 1 .585-.021l129.252 120a.414.414 0 0 1-.563.606l-129.252-120a.414.414 0 0 1-.022-.585ZM75.232 2.769a.414.414 0 0 1 .568.143l93.554 156.828a.414.414 0 1 1-.711.424L75.089 3.336a.414.414 0 0 1 .143-.567ZM125.643.329a.414.414 0 0 1 .584.041l71.81 82.759a.413.413 0 1 1-.625.542L125.602.913a.414.414 0 0 1 .041-.584Z",
    fill: "#fff"
  }), /*#__PURE__*/React__namespace.createElement("path", {
    d: "M67.271 75.369a.414.414 0 0 1 .547-.209l156.745 70.345a.413.413 0 1 1-.339.755L67.479 75.916a.414.414 0 0 1-.208-.547Z",
    fill: "#fff"
  }), /*#__PURE__*/React__namespace.createElement("path", {
    d: "M159.279 8.938a.414.414 0 0 1 .265.522L101.278 187.39a.413.413 0 1 1-.787-.258l58.266-177.93a.414.414 0 0 1 .522-.265Z",
    fill: "#fff"
  }), /*#__PURE__*/React__namespace.createElement("path", {
    d: "M86.786 22.982c-2.55 0-4.965 2.07-4.965 4.552V120.6c0 2.484 2.4 4.572 4.965 4.572h88.101c2.582 0 4.986-2.089 4.986-4.572V27.534c0-2.464-2.418-4.552-4.986-4.552h-88.1Zm-5.793 4.552c0-3.022 2.874-5.38 5.793-5.38h88.101c2.935 0 5.814 2.374 5.814 5.38V120.6c0 3.021-2.86 5.4-5.814 5.4h-88.1c-2.94 0-5.794-2.381-5.794-5.4V27.534Z",
    fill: "#1D1E26"
  }))), _path7 || (_path7 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M180.287 30.828H81.39v-3.724a4.966 4.966 0 0 1 4.966-4.966H175.3a4.963 4.963 0 0 1 4.986 4.965v3.725Z",
    fill: "#fff"
  })), _path8 || (_path8 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M177.05 22.893a4.548 4.548 0 0 0-1.748-.341H86.356a4.552 4.552 0 0 0-4.552 4.552v3.31h98.069v-3.31a4.55 4.55 0 0 0-2.823-4.211Zm-1.75-1.169a5.375 5.375 0 0 1 4.989 3.316c.272.654.412 1.355.412 2.064v3.724a.414.414 0 0 1-.414.413H81.39a.414.414 0 0 1-.413-.413v-3.724a5.38 5.38 0 0 1 5.379-5.38H175.3Z",
    fill: "#1D1E26"
  })), _path9 || (_path9 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M87.324 28.217a1.8 1.8 0 1 0 0-3.6 1.8 1.8 0 0 0 0 3.6ZM93.597 28.217a1.8 1.8 0 1 0 0-3.6 1.8 1.8 0 0 0 0 3.6ZM99.866 28.217a1.8 1.8 0 1 0 0-3.6 1.8 1.8 0 0 0 0 3.6Z",
    fill: "#1D1E26"
  })), _path10 || (_path10 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M151.71 47.806H63.614a4.986 4.986 0 0 0-4.986 4.986v93.062a4.986 4.986 0 0 0 4.986 4.986h88.096a4.986 4.986 0 0 0 4.987-4.986V52.792a4.987 4.987 0 0 0-4.987-4.986Z",
    fill: "#fff"
  })), _path11 || (_path11 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M63.614 48.22a4.572 4.572 0 0 0-4.572 4.572v93.062a4.572 4.572 0 0 0 4.572 4.572h88.096a4.572 4.572 0 0 0 4.573-4.572V52.792a4.572 4.572 0 0 0-4.573-4.573H63.614Zm-5.4 4.572a5.4 5.4 0 0 1 5.4-5.4h88.096a5.4 5.4 0 0 1 5.4 5.4v93.062a5.4 5.4 0 0 1-5.4 5.4H63.614a5.4 5.4 0 0 1-5.4-5.4V52.792Z",
    fill: "#1D1E26"
  })), _path12 || (_path12 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M157.11 56.081H58.214v-3.724a4.986 4.986 0 0 1 4.986-4.965h88.924a4.988 4.988 0 0 1 4.986 4.965v3.724Z",
    fill: "#008ACE"
  })), _path13 || (_path13 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M64.566 53.474a1.8 1.8 0 1 0 0-3.6 1.8 1.8 0 0 0 0 3.6ZM70.835 53.474a1.8 1.8 0 1 0 0-3.6 1.8 1.8 0 0 0 0 3.6ZM77.103 53.474a1.8 1.8 0 1 0 0-3.6 1.8 1.8 0 0 0 0 3.6Z",
    fill: "#1D1E26"
  })), _path14 || (_path14 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M48.968 36.067a.414.414 0 0 1 .585.018l7.005 7.448a.414.414 0 1 1-.603.567l-7.005-7.448a.414.414 0 0 1 .018-.585ZM46.99 44.047a.414.414 0 0 1 .554-.188l6.269 3.104a.414.414 0 0 1-.367.742l-6.27-3.104a.414.414 0 0 1-.187-.554ZM183.97 9.366a.414.414 0 0 1 .213.545l-2.896 6.62a.414.414 0 0 1-.759-.331l2.897-6.621a.414.414 0 0 1 .545-.213ZM192.373 9.866a.415.415 0 0 1 0 .585l-8.276 8.276a.414.414 0 1 1-.585-.585l8.275-8.276a.415.415 0 0 1 .586 0ZM192.464 19.108a.413.413 0 0 1-.23.538l-6.207 2.483a.414.414 0 0 1-.308-.768l6.207-2.483a.414.414 0 0 1 .538.23ZM182.977 54.848c.228 0 .413.185.413.414v58.345a.414.414 0 1 1-.827 0V55.262c0-.229.185-.414.414-.414Z",
    fill: "#1D1E26"
  })), _path15 || (_path15 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M133.371 157.945c23.196 0 42-18.804 42-42s-18.804-42-42-42-42 18.804-42 42 18.804 42 42 42Z",
    fill: "#008ACE"
  })), _path16 || (_path16 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M133.371 149.669c18.625 0 33.724-15.099 33.724-33.724 0-18.625-15.099-33.724-33.724-33.724-18.625 0-33.724 15.099-33.724 33.724 0 18.625 15.099 33.724 33.724 33.724Z",
    fill: "#fff"
  })), _path17 || (_path17 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M117.312 113.565a3.807 3.807 0 1 0 0-7.614 3.807 3.807 0 0 0 0 7.614ZM149.435 113.565a3.806 3.806 0 1 0 0-7.612 3.806 3.806 0 0 0 0 7.612Z",
    fill: "#1D1E26"
  })), _path18 || (_path18 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M133.38 123.952c-4.592 0-8.525 2.259-10.468 5.423a.827.827 0 1 1-1.41-.866c2.27-3.697 6.762-6.212 11.878-6.212 5.108 0 9.646 2.485 11.882 6.22a.827.827 0 1 1-1.42.85c-1.902-3.176-5.863-5.415-10.462-5.415Z",
    fill: "#1D1E26"
  })), _path19 || (_path19 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m170.965 137.356-7.822 9.777 1.668 1.334 7.822-9.777-1.668-1.334Z",
    fill: "#1D1E26"
  })), _path20 || (_path20 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M200.774 163.345c.579 2.143-3.331 6.852-5.553 6.939-7.035.277-28.73-23.913-28.73-23.913l4.44-5.553s28.122 16.142 29.843 22.527Z",
    fill: "#9BDEFF"
  })), _path21 || (_path21 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M204.424 178.378a6.223 6.223 0 0 0 6.223-6.224 6.224 6.224 0 1 0-6.223 6.224Z",
    fill: "#9BDEFF"
  })), _path22 || (_path22 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M199.586 168.269a6.173 6.173 0 0 1 3.311-2.131l-2.123-1.697c-.464 2.069-2.959 4.995-4.837 5.69l2.296 1.837a6.173 6.173 0 0 1 1.353-3.699Z",
    fill: "#1D1E26"
  })), _path23 || (_path23 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "m72.357 138.314-3.5 2.955 2.722-5.317a67.379 67.379 0 0 0-5.958-12.509l-4.014 4.514 2.38-7.076a63.412 63.412 0 0 0-9.932-11.611l-3.724 5.549 1.54-7.448a50.152 50.152 0 0 0-11.628-7.179l-.567 4.605s-.675-2.896-1.333-5.38a44.62 44.62 0 0 0-13.315-2.896 96.722 96.722 0 0 0 2.983 17.856c2.483 1.311 5.119 2.751 5.119 2.751l-4.461-.347a79.474 79.474 0 0 0 6.091 15.385c2.897.637 6.745 1.353 6.745 1.353l-5.677.55c2.871 4.965 6.492 9.6 11.069 13.349l6.45-.269-4.191 1.99c6.356 4.49 14.37 7.3 24.48 7.105 1.398-4.332.902-10.816-1.279-17.93Z",
    fill: "#008ACE"
  })), _path24 || (_path24 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M24.73 96.184a.414.414 0 0 1 .581.06l48.646 59.751a.413.413 0 1 1-.642.523L24.67 96.766a.414.414 0 0 1 .06-.582Z",
    fill: "#fff"
  }))), _defs || (_defs = /*#__PURE__*/React__namespace.createElement("defs", null, /*#__PURE__*/React__namespace.createElement("clipPath", {
    id: "dttaa0b2ic052d5qn_a"
  }, /*#__PURE__*/React__namespace.createElement("path", {
    fill: "#fff",
    transform: "translate(.552)",
    d: "M0 0h230.897v180H0z"
  })))));
};
var ForwardRef$4 = /*#__PURE__*/React.forwardRef(SvgEmptyTable);

var css$h = {"sticky-header":"UqlJi4","table":"_9c8Bu-","no-results":"bAVS9N","no-results-icon":"_1YP3fQ","no-results-title":"Flxbwi","stickyHeader":"UqlJi4","noResults":"bAVS9N","noResultsIcon":"_1YP3fQ","noResultsTitle":"Flxbwi"};

const DEFAULT_HEADER_SIZE = '36';
const DEFAULT_COLUMN_GAP = '24';
function DataTable(props) {
    var _a, _b, _c, _d;
    const { uuiModals } = uuiCore.useUuiContext();
    const headerRef = React__namespace.useRef();
    const columnsWithFilters = useColumnsWithFilters(props.columns, props.filters);
    const { columns, config, defaultConfig } = uuiCore.useColumnsConfig(columnsWithFilters, (_a = props.value) === null || _a === void 0 ? void 0 : _a.columnsConfig);
    const defaultRenderRow = React__namespace.useCallback((rowProps) => {
        return (React__namespace.createElement(DataTableRow, Object.assign({ key: rowProps.rowKey, size: props.size || '36', columnsGap: props.columnsGap || DEFAULT_COLUMN_GAP, borderBottom: props.border }, rowProps, { cx: css$h.cell })));
    }, []);
    const renderRow = (row) => { var _a; return ((_a = props.renderRow) !== null && _a !== void 0 ? _a : defaultRenderRow)(Object.assign(Object.assign({}, row), { columns })); };
    const rows = (_d = (_c = (_b = props.getRows) === null || _b === void 0 ? void 0 : _b.call(props)) !== null && _c !== void 0 ? _c : props.rows) !== null && _d !== void 0 ? _d : [];
    const renderNoResultsBlock = React__namespace.useCallback(() => {
        var _a;
        return (React__namespace.createElement("div", { className: css$h.noResults }, props.renderNoResultsBlock ? ((_a = props.renderNoResultsBlock) === null || _a === void 0 ? void 0 : _a.call(props)) : (React__namespace.createElement(React__namespace.Fragment, null,
            React__namespace.createElement(uuiComponents.IconContainer, { cx: css$h.noResultsIcon, icon: ForwardRef$4 }),
            React__namespace.createElement(Text, { cx: css$h.noResultsTitle, fontSize: "24", lineHeight: "30", color: "primary", fontWeight: "600" }, i18n.tables.noResultsBlock.title),
            React__namespace.createElement(Text, { fontSize: "16", lineHeight: "24", color: "primary" }, i18n.tables.noResultsBlock.message)))));
    }, [props.renderNoResultsBlock]);
    const onConfigurationButtonClick = React__namespace.useCallback(() => {
        const configProps = { columns: props.columns, columnsConfig: Object.assign({}, config), defaultConfig };
        uuiModals
            .show((modalProps) => {
            return (props.renderColumnsConfigurationModal
                ? props.renderColumnsConfigurationModal(Object.assign(Object.assign({}, configProps), modalProps))
                : (React__namespace.createElement(ColumnsConfigurationModal, Object.assign({}, modalProps, { columns: props.columns, columnsConfig: config, defaultConfig: defaultConfig }))));
        })
            .then((columnsConfig) => props.onValueChange(Object.assign(Object.assign({}, props.value), { columnsConfig })))
            .catch(() => null);
    }, [
        props.columns, config, defaultConfig, props.value, props.onValueChange, props.renderColumnsConfigurationModal,
    ]);
    const renderRowsContainer = React__namespace.useCallback(({ listContainerRef, estimatedHeight, offsetY, scrollShadows }) => (React__namespace.createElement(React__namespace.Fragment, null,
        React__namespace.createElement("div", { className: css$h.stickyHeader, ref: headerRef },
            React__namespace.createElement(DataTableHeaderRow, { columns: columns, onConfigButtonClick: props.showColumnsConfig && onConfigurationButtonClick, selectAll: props.selectAll, size: props.headerSize || DEFAULT_HEADER_SIZE, textCase: props.headerTextCase, allowColumnsReordering: props.allowColumnsReordering, allowColumnsResizing: props.allowColumnsResizing, showFoldAll: props.showFoldAll, value: Object.assign(Object.assign({}, props.value), { columnsConfig: config }), onValueChange: props.onValueChange, columnsGap: props.columnsGap || DEFAULT_COLUMN_GAP }),
            React__namespace.createElement("div", { className: uuiCore.cx(uuiCore.uuiScrollShadows.top, {
                    [uuiCore.uuiScrollShadows.topVisible]: scrollShadows.verticalTop,
                }) })),
        props.exactRowsCount !== 0 ? (React__namespace.createElement(DataRowsContainer, { headerRef: headerRef, listContainerRef: listContainerRef, estimatedHeight: estimatedHeight, offsetY: offsetY, scrollShadows: scrollShadows, renderRow: renderRow, rows: rows })) : (renderNoResultsBlock === null || renderNoResultsBlock === void 0 ? void 0 : renderNoResultsBlock()))), [
        props, columns, rows, renderNoResultsBlock, onConfigurationButtonClick,
    ]);
    return (React__namespace.createElement(uuiComponents.DataTableSelectionProvider, { onCopy: props.onCopy, rows: rows, columns: columns },
        React__namespace.createElement(uuiComponents.DataTableFocusProvider, { dataTableFocusManager: props.dataTableFocusManager },
            React__namespace.createElement(VirtualList, { value: props.value, onValueChange: props.onValueChange, onScroll: props.onScroll, rowsCount: props.rowsCount, renderRows: renderRowsContainer, cx: uuiCore.cx(css$h.table, 'uui-dt-vars'), isLoading: props.isReloading, rowsSelector: "[role=row]", rawProps: {
                    role: 'table',
                    'aria-colcount': columns.length,
                    'aria-rowcount': props.rowsCount,
                } }))));
}

var css$g = {"root":"tWfP2U"};

var css$f = {"root":"UNhAwr","burger-content":"zWhjjN","burgerContent":"zWhjjN"};

var _path$3;
function _extends$3() { _extends$3 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3.apply(this, arguments); }
var SvgNavigationOpenSideMenuOutline = function SvgNavigationOpenSideMenuOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$3({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$3 || (_path$3 = /*#__PURE__*/React__namespace.createElement("path", {
    d: "M2 5h20v2H2V5zm0 12h15v2H2v-2zm0-6h20v2H2v-2z"
  })));
};
var ForwardRef$3 = /*#__PURE__*/React.forwardRef(SvgNavigationOpenSideMenuOutline);

function applyBurgerMods() {
    return [cx__default.default(css$f.root, 'uui-burger')];
}
const Burger = /* @__PURE__ */uuiCore.withMods(uuiComponents.Burger, applyBurgerMods, () => ({
    burgerIcon: ForwardRef$3,
    crossIcon: ForwardRef$Q,
    burgerContentCx: css$f.burgerContent,
}));

var _path$2;
function _extends$2() { _extends$2 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }
var SvgNavigationArrowDownOutline = function SvgNavigationArrowDownOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$2({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$2 || (_path$2 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "m7 10 5 5 5-5H7z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$2 = /*#__PURE__*/React.forwardRef(SvgNavigationArrowDownOutline);

var css$e = {"uui-typography":"FqQ2Tb","hero-header":"dwVwTe","promo-header":"H0SnZ0","uui-critical":"zJu4Ka","uui-info":"hptRhN","uui-success":"LjR0L7","uui-warning":"V-2xx7","uui-highlight":"lwrLbn","uui-typography-size-12":"JqG-gJ","uui-typography-size-14":"pDbYTo","uui-typography-size-16":"tTIFZC","root":"NTDvxj","button-primary":"PsxdBn","button-secondary":"_6cEgoA","hasIcon":"pVxKFg","dropdown":"tpTnWe","uuiTypography":"FqQ2Tb","heroHeader":"dwVwTe","promoHeader":"H0SnZ0","uuiCritical":"zJu4Ka","uuiInfo":"hptRhN","uuiSuccess":"LjR0L7","uuiWarning":"V-2xx7","uuiHighlight":"lwrLbn","uuiTypographySize12":"JqG-gJ","uuiTypographySize14":"pDbYTo","uuiTypographySize16":"tTIFZC","buttonPrimary":"PsxdBn","buttonSecondary":"_6cEgoA"};

const BurgerButton = /* @__PURE__ */uuiCore.withMods(uuiComponents.Button, (props) => [
    css$e.root,
    'uui-main_menu-burger-button',
    css$e['button-' + (props.type || 'primary')],
    css$e['indent-' + (props.indentLevel || 0)],
    props.isDropdown && css$e.dropdown,
    props.icon && css$e.hasIcon,
], () => ({ dropdownIcon: ForwardRef$2, dropdownIconPosition: 'left', role: 'menuitem' }));

var css$d = {"search-input":"C2VaMy","searchInput":"C2VaMy"};

function BurgerSearch(props) {
    return (React__namespace.createElement(uuiComponents.TextInput, { cx: cx__default.default(css$d.searchInput, 'uui-main_menu-burger-search'), iconPosition: "left", icon: ForwardRef$N, placeholder: props.placeholder, value: props.value, onValueChange: props.onValueChange, onCancel: props.onCancel, cancelIcon: props.value && ForwardRef$Q }));
}

var css$c = {"root":"-RCkQq","group-header":"CqNebq","group-name":"l439Ii","line":"_33usHg","groupHeader":"CqNebq","groupName":"l439Ii"};

function BurgerGroupHeader(props) {
    return (React__namespace.createElement("div", { className: cx__default.default(css$c.root, css$c.groupHeader, 'uui-burger-group-header') },
        React__namespace.createElement("hr", { className: css$c.line }),
        React__namespace.createElement("span", { className: css$c.groupName }, props.caption)));
}

var css$b = {"uui-typography":"cfVBPL","hero-header":"rLMM85","promo-header":"_3q3UIY","uui-critical":"ZidfLz","uui-info":"-Ty5bO","uui-success":"_8wgh--","uui-warning":"IUQwPN","uui-highlight":"VzM9Hj","uui-typography-size-12":"SQa9g5","uui-typography-size-14":"b5FNg8","uui-typography-size-16":"PrFTbf","root":"_795PlD","type-primary":"taY-G-","type-secondary":"-S--06","uuiTypography":"cfVBPL","heroHeader":"rLMM85","promoHeader":"_3q3UIY","uuiCritical":"ZidfLz","uuiInfo":"-Ty5bO","uuiSuccess":"_8wgh--","uuiWarning":"IUQwPN","uuiHighlight":"VzM9Hj","uuiTypographySize12":"SQa9g5","uuiTypographySize14":"b5FNg8","uuiTypographySize16":"PrFTbf","typePrimary":"taY-G-","typeSecondary":"-S--06"};

const MainMenuButton = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    const { type } = props, clickableProps = __rest(props, ["type"]);
    return (React__namespace.createElement(uuiComponents.Clickable, Object.assign({}, clickableProps, { rawProps: Object.assign({ role: 'menuitem', 'aria-haspopup': props.isDropdown, 'aria-expanded': props.isOpen }, props.rawProps), cx: [
            css$b.root,
            css$b['type-' + (type || 'primary')],
            props.cx,
        ], ref: ref }),
        props.icon && props.iconPosition !== 'right' && (React__namespace.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: props.onIconClick })),
        props.caption && (React__namespace.createElement("div", { className: uuiCore.uuiElement.caption }, props.caption)),
        props.count !== undefined && props.count !== null && (React__namespace.createElement(CountIndicator, { caption: props.count, color: "neutral", size: "18" })),
        props.icon && props.iconPosition === 'right' && (React__namespace.createElement(uuiComponents.IconContainer, { icon: props.icon, onClick: props.onIconClick })),
        props.isDropdown && (React__namespace.createElement(uuiComponents.IconContainer, { icon: ForwardRef$P, flipY: props.isOpen }))));
});

var css$a = {"dropdown-body":"dIfb86","dropdownBody":"dIfb86"};

class MainMenuDropdown extends React__namespace.Component {
    render() {
        return (React__namespace.createElement(uuiComponents.Dropdown, { renderTarget: (props) => (React__namespace.createElement(MainMenuButton, Object.assign({ caption: this.props.caption }, props, { rawProps: this.props.rawProps, isLinkActive: this.props.isLinkActive, isDropdown: true }))), renderBody: (props) => {
                const handleEscape = (e) => {
                    if (e.key === 'Escape' && props.isOpen) {
                        props.onClose();
                    }
                };
                return (React__namespace.createElement(FocusLock__default.default, { returnFocus: true, persistentFocus: true, lockProps: { onKeyDown: handleEscape } },
                    React__namespace.createElement("div", { className: cx__default.default(css$a.dropdownBody, 'uui-main_menu-dropdown') }, this.props.renderBody
                        ? this.props.renderBody(Object.assign({}, props))
                        : React__namespace.Children.map(this.props.children, (item) => {
                            if (!item)
                                return item;
                            return React__namespace.createElement(item.type, Object.assign(Object.assign({}, item.props), { onClick: item.props.onClick
                                    ? () => {
                                        item.props.onClick();
                                        props.onClose();
                                    }
                                    : null }));
                        }))));
            }, placement: "bottom-start" }));
    }
}

function applyMainMenuMods() {
    return [
        css$g.root,
        'uui-main_menu',
    ];
}
const MainMenu = /* @__PURE__ */uuiCore.withMods(uuiComponents__namespace.MainMenu, applyMainMenuMods, () => ({
    Burger,
    MainMenuDropdown,
}));

var _path$1;
function _extends$1() { _extends$1 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }
var SvgNavigationGlobalMenuOutlineOutline = function SvgNavigationGlobalMenuOutlineOutline(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends$1({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path$1 || (_path$1 = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M12 10.85a1.333 1.333 0 1 1 0 2.666 1.333 1.333 0 0 1 0-2.666zm5.333 0a1.333 1.333 0 1 1 0 2.666 1.333 1.333 0 0 1 0-2.666zm-10.666 0a1.333 1.333 0 1 1 0 2.666 1.333 1.333 0 0 1 0-2.666zm5.333-6a1.333 1.333 0 1 1 0 2.666 1.333 1.333 0 0 1 0-2.666zm5.333 0a1.333 1.333 0 1 1 0 2.666 1.333 1.333 0 0 1 0-2.666zm-10.666 0a1.333 1.333 0 1 1 0 2.666 1.333 1.333 0 0 1 0-2.666zm5.333 12a1.333 1.333 0 1 1 0 2.666 1.333 1.333 0 0 1 0-2.666zm5.333 0a1.333 1.333 0 1 1 0 2.666 1.333 1.333 0 0 1 0-2.666zm-10.666 0a1.333 1.333 0 1 1 0 2.666 1.333 1.333 0 0 1 0-2.666z",
    clipRule: "evenodd"
  })));
};
var ForwardRef$1 = /*#__PURE__*/React.forwardRef(SvgNavigationGlobalMenuOutlineOutline);

var css$9 = {"global-menu-btn":"DX5Sq4","global-menu-icon":"yqL3vt","globalMenuBtn":"DX5Sq4","globalMenuIcon":"yqL3vt"};

const GlobalMenu = /* @__PURE__ */React__namespace.forwardRef((props, ref) => (React__namespace.createElement("button", Object.assign({ ref: ref, id: "global_menu_toggle", className: cx__default.default(css$9.globalMenuBtn, props.cx) }, props.rawProps),
    React__namespace.createElement(uuiComponents.IconContainer, { size: 36, icon: ForwardRef$1, cx: css$9.globalMenuIcon }))));

var css$8 = {"container":"_24AObP","open":"BCR5tR","folding-arrow":"G9--js","foldingArrow":"G9--js"};

const MainMenuAvatar = /* @__PURE__ */React__namespace.forwardRef((props, ref) => (React__namespace.createElement("button", { ref: ref, className: cx__default.default(css$8.container, props.isDropdown && css$8.dropdown, props.isOpen && css$8.open, props.onClick && uuiCore.uuiMarkers.clickable, props.cx), onClick: props.onClick },
    React__namespace.createElement(uuiComponents.Avatar, { size: "36", img: props.avatarUrl }),
    props.icon && React__namespace.createElement(uuiComponents.IconContainer, { icon: props.icon }),
    props.isDropdown && (React__namespace.createElement("div", null,
        React__namespace.createElement(uuiComponents.IconContainer, { size: 18, icon: ForwardRef$P, flipY: props.isOpen, cx: css$8.foldingArrow }))))));

var css$7 = {"search-input":"wOBTMq","searchInput":"wOBTMq"};

const MainMenuSearch = /* @__PURE__ */React__namespace.forwardRef((props, ref) => (React__namespace.createElement(uuiCore.IEditableDebouncer, Object.assign({}, props, { render: (iEditable) => {
        var _a;
        return (React__namespace.createElement(uuiComponents.TextInput, Object.assign({ iconPosition: "left", icon: ForwardRef$N, cancelIcon: ((_a = props.value) === null || _a === void 0 ? void 0 : _a.length) > 0 && ForwardRef$Q }, props, iEditable, { ref: ref, cx: uuiCore.cx(css$7.searchInput, props.cx) }, props.rawProps)));
    } }))));

var css$6 = {"container":"honGEK"};

const MainMenuIcon = /* @__PURE__ */React__namespace.forwardRef((props, ref) => (React__namespace.createElement(IconButton, Object.assign({ ref: ref, icon: props.icon, cx: uuiCore.cx(props.cx, css$6.container) }, props))));

var css$5 = {"root":"sqKzVk"};

const Anchor = /* @__PURE__ */uuiCore.withMods(uuiComponents.Anchor, () => [css$5.root]);

function Form(props) {
    const context = uuiCore.useUuiContext();
    const beforeLeave = React__namespace.useCallback(() => {
        return context.uuiModals.show((modalProps) => React__namespace.createElement(ConfirmationModal, Object.assign({ caption: i18n.form.modals.beforeLeaveMessage }, modalProps)));
    }, [context.uuiModals]);
    const loadUnsavedChanges = () => {
        return context.uuiNotifications
            .show((props) => (React__namespace.createElement(WarningNotification, Object.assign({}, props, { actions: [
                {
                    name: i18n.form.notifications.actionButtonCaption,
                    action: props.onSuccess,
                },
            ] }),
            React__namespace.createElement(RichTextView, null,
                React__namespace.createElement(Text, { size: "36" }, i18n.form.notifications.unsavedChangesMessage)))), { duration: 5, position: 'bot-left' });
    };
    return React__namespace.createElement(uuiCore.Form, Object.assign({ loadUnsavedChanges: loadUnsavedChanges, beforeLeave: beforeLeave }, props));
}

function useForm(props) {
    const context = uuiCore.useUuiContext();
    const beforeLeave = React.useCallback(() => {
        return context.uuiModals.show((modalProps) => React__namespace.default.createElement(ConfirmationModal, Object.assign({ caption: i18n.form.modals.beforeLeaveMessage }, modalProps)));
    }, [context.uuiModals]);
    const loadUnsavedChanges = () => {
        return context.uuiNotifications.show((props) => (React__namespace.default.createElement(WarningNotification, Object.assign({}, props, { actions: [
                {
                    name: i18n.form.notifications.actionButtonCaption,
                    action: props.onSuccess,
                },
            ] }),
            React__namespace.default.createElement(RichTextView, null,
                React__namespace.default.createElement(Text, { size: "36" }, i18n.form.notifications.unsavedChangesMessage)))), { duration: 5, position: 'bot-left' });
    };
    return uuiCore.useForm(Object.assign({ beforeLeave, loadUnsavedChanges }, props));
}

var _path;
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var SvgFileCloudUploadFill = function SvgFileCloudUploadFill(props, ref) {
  return /*#__PURE__*/React__namespace.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    ref: ref
  }, props), _path || (_path = /*#__PURE__*/React__namespace.createElement("path", {
    fillRule: "evenodd",
    d: "M14 13v4h-4v-4H7l5-5 5 5m2.35-2.97A7.49 7.49 0 0 0 12 4C9.11 4 6.6 5.64 5.35 8.03A6.004 6.004 0 0 0 6 20h13a5 5 0 0 0 5-5c0-2.64-2.05-4.78-4.65-4.97z",
    clipRule: "evenodd"
  })));
};
var ForwardRef = /*#__PURE__*/React.forwardRef(SvgFileCloudUploadFill);

var css$4 = {"root":"Hzzr7w","drop-start":"pzeSnD","drop-over":"_8sOctr","link":"-gPI3I","drop-area":"B5DiLw","drop-caption":"_8-AX2U","icon-blue":"TK2rfQ","dropStart":"pzeSnD","dropOver":"_8sOctr","dropArea":"B5DiLw","dropCaption":"_8-AX2U","iconBlue":"TK2rfQ"};

function DropSpot(props) {
    const getInfoText = typeof props.infoText === 'string'
        ? (React__namespace.createElement(Text, { lineHeight: "24", size: "24", fontSize: "14", color: "tertiary" }, props.infoText)) : props === null || props === void 0 ? void 0 : props.infoText;
    const renderAttachmentArea = (params) => {
        return (React__namespace.createElement("div", Object.assign({ className: uuiCore.cx(css$4.root, props.cx, params.isDragStart && css$4.dropStart, params.isDraggingOver && css$4.dropOver) }, props.rawProps),
            React__namespace.createElement("div", Object.assign({}, params.eventHandlers, { className: css$4.dropArea }),
                React__namespace.createElement(FlexRow, { size: "24" },
                    React__namespace.createElement(uuiComponents.IconContainer, { icon: ForwardRef, cx: css$4.iconBlue }),
                    React__namespace.createElement(Text, { lineHeight: "24", size: "24", fontSize: "14", cx: css$4.dropCaption }, i18n.fileUpload.labelStart),
                    React__namespace.createElement(uuiComponents.UploadFileToggler, { onFilesAdded: props.onUploadFiles, render: (props) => (React__namespace.createElement(RichTextView, null,
                            React__namespace.createElement(LinkButton, Object.assign({ caption: i18n.fileUpload.browse }, props, { cx: css$4.link })))), accept: props.accept, single: props.single })),
                getInfoText)));
    };
    return React__namespace.createElement(uuiComponents.DropSpot, { render: renderAttachmentArea, onFilesDropped: props.onUploadFiles });
}

var css$3 = {"uui-typography":"u3DI6o","hero-header":"_4nhTg9","promo-header":"_8HgdwJ","uui-critical":"_9JeXd-","uui-info":"Z-6hhk","uui-success":"_5Kv6Jj","uui-warning":"zTMIW2","uui-highlight":"wM1UOw","uui-typography-size-12":"Nxwk7E","uui-typography-size-14":"c-8aoq","uui-typography-size-16":"GtR5uo","root":"Uknelp","file-name":"_8TMdnw","default-color":"OOGvg1","doc-color":"tnSx8B","xls-color":"MgGAIG","pdf-color":"_8Qo1Rh","movie-color":"oawVAB","img-color":"_7ssvK-","mov-color":"-j5OYl","error-block":"U9JBm6","icons-block":"ZrtuW2","uuiTypography":"u3DI6o","heroHeader":"_4nhTg9","promoHeader":"_8HgdwJ","uuiCritical":"_9JeXd-","uuiInfo":"Z-6hhk","uuiSuccess":"_5Kv6Jj","uuiWarning":"zTMIW2","uuiHighlight":"wM1UOw","uuiTypographySize12":"Nxwk7E","uuiTypographySize14":"c-8aoq","uuiTypographySize16":"GtR5uo","fileName":"_8TMdnw","defaultColor":"OOGvg1","docColor":"tnSx8B","xlsColor":"MgGAIG","pdfColor":"_8Qo1Rh","movieColor":"oawVAB","imgColor":"_7ssvK-","movColor":"-j5OYl","errorBlock":"U9JBm6","iconsBlock":"ZrtuW2"};

var css$2 = {"root":"K7f1GK"};

const SvgCircleProgress = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    const outsetRadius = props.size / 2 - 1;
    const insetRadius = props.size / 2 - 3;
    const circumference = insetRadius * Math.PI;
    return (React__namespace.createElement("svg", Object.assign({ className: css$2.root, width: props.size, height: props.size, ref: ref }, props.rawProps),
        React__namespace.createElement("circle", { strokeDasharray: circumference, strokeDashoffset: circumference - (props.progress / 100) * circumference, strokeWidth: insetRadius, fill: "transparent", r: insetRadius / 2, cx: props.size / 2, cy: props.size / 2 }),
        React__namespace.createElement("circle", { strokeWidth: 1, fill: "transparent", r: outsetRadius, cx: props.size / 2, cy: props.size / 2 })));
});

const FileCard = /* @__PURE__ */React__namespace.forwardRef((props, ref) => {
    const [isLoadingShow, setIsLoadingShow] = React__namespace.useState(true);
    const { file } = props;
    const getIcon = (extension) => {
        switch (extension) {
            case 'doc':
            case 'docx':
                return React__namespace.createElement(uuiComponents.IconContainer, { size: 24, icon: fileIcons.docIcon, cx: css$3.docColor });
            case 'xls':
            case 'xlsx':
                return React__namespace.createElement(uuiComponents.IconContainer, { size: 24, icon: fileIcons.exelIcon, cx: css$3.xlsColor });
            case 'pdf':
                return React__namespace.createElement(uuiComponents.IconContainer, { size: 24, icon: fileIcons.pdfIcon, cx: css$3.pdfColor });
            case 'gif':
            case 'jpg':
            case 'jpeg':
            case 'svg':
            case 'png':
            case 'webp':
                return React__namespace.createElement(uuiComponents.IconContainer, { size: 24, icon: fileIcons.imgIcon, cx: css$3.imgColor });
            case 'avi':
            case 'mov':
            case 'mp4':
            case 'wmw':
            case 'mkv':
                return React__namespace.createElement(uuiComponents.IconContainer, { size: 24, icon: fileIcons.videoIcon, cx: css$3.movColor });
            case 'csv':
            case 'xml':
                return React__namespace.createElement(uuiComponents.IconContainer, { size: 24, icon: fileIcons.tableIcon, cx: css$3.defaultColor });
            case 'rtf':
            case 'txt':
                return React__namespace.createElement(uuiComponents.IconContainer, { size: 24, icon: fileIcons.textIcon, cx: css$3.defaultColor });
            case 'eml':
            case 'emlx':
                return React__namespace.createElement(uuiComponents.IconContainer, { size: 24, icon: fileIcons.mailIcon, cx: css$3.defaultColor });
            default:
                return React__namespace.createElement(uuiComponents.IconContainer, { size: 24, icon: fileIcons.fileIcon, cx: css$3.defaultColor });
        }
    };
    const { cx: componentCx, width, file: { progress, size, name, extension, error, abortXHR, }, onClick, } = props;
    const fileExtension = extension || (name === null || name === void 0 ? void 0 : name.split('.').pop());
    const fileName = name === null || name === void 0 ? void 0 : name.split('.').slice(0, -1).join('');
    const isLoading = progress < 100;
    const isCrossShow = ((!isLoadingShow && isLoading) || !isLoading) && onClick;
    const mouseLeaveHandler = (e) => {
        e.stopPropagation();
        setIsLoadingShow(() => true);
    };
    const mouseEnterHandler = (e) => {
        e.stopPropagation();
        setIsLoadingShow(() => false);
    };
    const renderErrorContent = () => (React__namespace.createElement(Tooltip, { content: file.error.message, placement: "bottom-start" },
        React__namespace.createElement("div", { className: css$3.errorBlock },
            React__namespace.createElement(uuiComponents.IconContainer, { icon: ForwardRef$x, size: 12 }),
            i18n.fileCard.failedUploadErrorMessage)));
    const renderSuccessfulContent = () => (React__namespace.createElement(Text, { size: "18", fontSize: "14", lineHeight: "18", color: "tertiary" },
        fileExtension && `${fileExtension.toUpperCase()}, `,
        isLoading && uuiCore.formatBytes((size / 100) * progress, 2, false) + i18n.fileCard.fileSizeProgress,
        uuiCore.formatBytes(size)));
    const removeHandler = () => {
        progress && progress < 100 && abortXHR();
        onClick();
    };
    return (React__namespace.createElement(FlexCell, { ref: ref, cx: uuiCore.cx(css$3.root, 'uui-file_card', (isLoading || (error === null || error === void 0 ? void 0 : error.isError)) && uuiCore.uuiMod.loading, componentCx, (error === null || error === void 0 ? void 0 : error.isError) && uuiCore.uuiMod.error), minWidth: width, width: !width ? '100%' : undefined },
        React__namespace.createElement(FlexRow, { size: "36", alignItems: "top", columnGap: "6" },
            fileExtension && getIcon(fileExtension),
            React__namespace.createElement(FlexCell, { width: "100%" },
                React__namespace.createElement(Text, { size: "18", fontSize: "14", lineHeight: "18", color: (progress < 100 || (error === null || error === void 0 ? void 0 : error.isError)) ? 'tertiary' : 'primary', cx: css$3.fileName }, fileName),
                (error === null || error === void 0 ? void 0 : error.isError) ? renderErrorContent() : renderSuccessfulContent()),
            React__namespace.createElement("div", { className: uuiCore.cx(css$3.iconsBlock), onMouseEnter: mouseEnterHandler, onMouseLeave: mouseLeaveHandler },
                isLoadingShow && isLoading && React__namespace.createElement(SvgCircleProgress, { progress: progress, size: 18 }),
                isCrossShow && React__namespace.createElement(IconButton, { icon: ForwardRef$Q, onClick: removeHandler })))));
});

const getRecoveryMessageConfig = () => ({
    'auth-lost': i18n.errorHandler.recoveryMessageConfig['auth-lost'],
    'connection-lost': i18n.errorHandler.recoveryMessageConfig['connection-lost'],
    maintenance: i18n.errorHandler.recoveryMessageConfig.maintenance,
    'server-overload': i18n.errorHandler.recoveryMessageConfig['server-overload'],
});
const getErrorPageConfig = () => ({
    notFound: {
        imageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Error_404_Monochrome.svg',
        mobileImageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Error_404_Monochrome.svg',
        title: i18n.errorHandler.errorPageConfig.notFound.title,
        subtitle: i18n.errorHandler.errorPageConfig.notFound.subtitle,
    },
    permissionDenied: {
        imageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Error_403_Monochrome.svg',
        mobileImageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Error_403_Monochrome.svg',
        title: i18n.errorHandler.errorPageConfig.permissionDenied.title,
        subtitle: i18n.errorHandler.errorPageConfig.permissionDenied.subtitle,
    },
    serverError: {
        imageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Error_500_Monochrome.svg',
        mobileImageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Error_500_Monochrome.svg',
        title: i18n.errorHandler.errorPageConfig.serverError.title,
        subtitle: i18n.errorHandler.errorPageConfig.serverError.subtitle,
    },
    serviceUnavailable: {
        imageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Error_503_Monochrome.svg',
        mobileImageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Error_503_Monochrome.svg',
        title: i18n.errorHandler.errorPageConfig.serviceUnavailable.title,
        subtitle: i18n.errorHandler.errorPageConfig.serviceUnavailable.subtitle,
    },
    default: {
        imageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Empty_Monochrome.svg',
        mobileImageUrl: 'https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/error-pages-illustrations/L_Empty_Monochrome.svg',
        title: i18n.errorHandler.errorPageConfig.default.title,
        subtitle: i18n.errorHandler.errorPageConfig.default.subtitle,
    },
});

var css$1 = {"container":"_5wUSML"};

const ErrorPage = (props) => {
    const isMobileScreen = uuiCore.isMobile();
    return (React__namespace.default.createElement("div", { className: uuiCore.cx(css$1.container, props.cx) },
        React__namespace.default.createElement("div", { className: "uui-error-content" },
            React__namespace.default.createElement("img", { className: "uui-error-image", src: isMobileScreen && props.mobileImageUrl ? props.mobileImageUrl : props.imageUrl, alt: "ERROR OCCURRED!" }),
            React__namespace.default.createElement("div", { className: "uui-error-title" }, props.title),
            React__namespace.default.createElement("div", { className: "uui-error-subtitle" }, props.subtitle))));
};

var css = {"recovery-spinner":"qLWsws","recovery-message":"gH8Egf","modal-blocker":"c3jkWY","modalFadeIn":"m2FCGA","recoverySpinner":"qLWsws","recoveryMessage":"gH8Egf","modalBlocker":"c3jkWY"};

function ErrorHandler(props) {
    const { uuiNotifications, uuiModals, uuiApi } = uuiCore.useUuiContext();
    const { errorType, errorInfo } = uuiCore.useUuiError({
        getErrorInfo: props.getErrorInfo,
        options: { errorConfig: getErrorPageConfig(), recoveryConfig: getRecoveryMessageConfig() },
    });
    const isAuthLost = uuiApi.recoveryReason === 'auth-lost';
    const showNotifications = (errors) => {
        errors.forEach((c) => {
            if (props.onNotificationError) {
                props.onNotificationError(c);
            }
            else {
                uuiNotifications.show((notificationProps) => (React__namespace.default.createElement(ErrorNotification, Object.assign({}, notificationProps),
                    React__namespace.default.createElement(Text, { size: "36" }, c.responseData && c.responseData.errorMessage))));
            }
            c.dismissError();
        });
    };
    const renderRecoveryBlocker = (errorInform) => {
        const { title, subtitle } = errorInform;
        return (React__namespace.default.createElement(ModalBlocker, { key: "recovery-blocker", cx: css.modalBlocker, isActive: true, zIndex: 100500, success: () => { }, abort: () => { } },
            React__namespace.default.createElement(ModalWindow, null,
                React__namespace.default.createElement(ModalHeader, { borderBottom: true, title: title }),
                React__namespace.default.createElement(Spinner, { cx: css.recoverySpinner }),
                React__namespace.default.createElement(FlexRow, { padding: "24", cx: css.recoveryMessage },
                    React__namespace.default.createElement(FlexCell, { grow: 1 },
                        React__namespace.default.createElement(RichTextView, null, subtitle),
                        isAuthLost && (React__namespace.default.createElement(Text, { color: "tertiary" },
                            "We have redirected you to the login page, if the page didn't open, please click on this",
                            ' ',
                            React__namespace.default.createElement(Anchor, { href: uuiApi.apiReloginPath, target: "_blank" }, "link"),
                            ".")))))));
    };
    const renderErrorPage = (errorInform) => {
        return React__namespace.default.createElement(ErrorPage, Object.assign({ cx: props.cx }, errorInform));
    };
    if (errorType === 'error') {
        uuiModals.closeAll();
        return renderErrorPage(errorInfo);
    }
    if (errorType === 'notification') {
        showNotifications(errorInfo);
    }
    return (React__namespace.default.createElement(uuiComponents.ErrorCatch, null,
        props.children,
        errorType === 'recovery' && renderRecoveryBlocker(errorInfo)));
}

Object.defineProperty(exports, "Avatar", {
    enumerable: true,
    get: function () { return uuiComponents.Avatar; }
});
Object.defineProperty(exports, "DataTableCellContainer", {
    enumerable: true,
    get: function () { return uuiComponents.DataTableCellContainer; }
});
Object.defineProperty(exports, "FlexSpacer", {
    enumerable: true,
    get: function () { return uuiComponents.FlexSpacer; }
});
Object.defineProperty(exports, "IconContainer", {
    enumerable: true,
    get: function () { return uuiComponents.IconContainer; }
});
exports.Accordion = Accordion;
exports.Alert = Alert;
exports.Anchor = Anchor;
exports.AvatarStack = AvatarStack;
exports.Badge = Badge;
exports.Blocker = Blocker;
exports.Burger = Burger;
exports.BurgerButton = BurgerButton;
exports.BurgerGroupHeader = BurgerGroupHeader;
exports.BurgerSearch = BurgerSearch;
exports.Button = Button;
exports.Calendar = Calendar;
exports.Checkbox = Checkbox;
exports.CheckboxGroup = CheckboxGroup;
exports.ClearNotification = ClearNotification;
exports.ColumnHeaderDropdown = ColumnHeaderDropdown;
exports.ColumnsConfigurationModal = ColumnsConfigurationModal;
exports.ConfirmationModal = ConfirmationModal;
exports.ControlGroup = ControlGroup;
exports.CountIndicator = CountIndicator;
exports.DataPickerBody = DataPickerBody;
exports.DataPickerFooter = DataPickerFooter;
exports.DataPickerHeader = DataPickerHeader;
exports.DataPickerRow = DataPickerRow;
exports.DataRowAddons = DataRowAddons;
exports.DataRowsContainer = DataRowsContainer;
exports.DataTable = DataTable;
exports.DataTableCell = DataTableCell;
exports.DataTableHeaderCell = DataTableHeaderCell;
exports.DataTableHeaderRow = DataTableHeaderRow;
exports.DataTableRow = DataTableRow;
exports.DatePicker = DatePicker;
exports.DatePickerBody = DatePickerBody;
exports.DatePickerComponent = DatePickerComponent;
exports.DropMarker = DropMarker;
exports.DropSpot = DropSpot;
exports.Dropdown = Dropdown;
exports.DropdownContainer = DropdownContainer;
exports.DropdownMenuBody = DropdownMenuBody;
exports.DropdownMenuButton = DropdownMenuButton;
exports.DropdownMenuHeader = DropdownMenuHeader;
exports.DropdownMenuSplitter = DropdownMenuSplitter;
exports.DropdownMenuSwitchButton = DropdownMenuSwitchButton;
exports.DropdownSubMenu = DropdownSubMenu;
exports.ErrorAlert = ErrorAlert;
exports.ErrorHandler = ErrorHandler;
exports.ErrorNotification = ErrorNotification;
exports.ErrorPage = ErrorPage;
exports.FileCard = FileCard;
exports.FilterItemBody = FilterItemBody;
exports.FilterPickerBody = FilterPickerBody;
exports.FiltersPanel = FiltersPanel;
exports.FlexCell = FlexCell;
exports.FlexRow = FlexRow;
exports.Form = Form;
exports.GlobalMenu = GlobalMenu;
exports.HintAlert = HintAlert;
exports.HintNotification = HintNotification;
exports.IconButton = IconButton;
exports.IndeterminateBar = IndeterminateBar;
exports.IndicatorBar = IndicatorBar;
exports.InputAddon = InputAddon;
exports.LabeledInput = LabeledInput;
exports.LinkButton = LinkButton;
exports.MainMenu = MainMenu;
exports.MainMenuAvatar = MainMenuAvatar;
exports.MainMenuButton = MainMenuButton;
exports.MainMenuDropdown = MainMenuDropdown;
exports.MainMenuIcon = MainMenuIcon;
exports.MainMenuSearch = MainMenuSearch;
exports.MobileDropdownWrapper = MobileDropdownWrapper;
exports.ModalBlocker = ModalBlocker;
exports.ModalFooter = ModalFooter;
exports.ModalHeader = ModalHeader;
exports.ModalWindow = ModalWindow;
exports.MultiSwitch = MultiSwitch;
exports.NotificationCard = NotificationCard;
exports.NumericInput = NumericInput;
exports.Paginator = Paginator;
exports.Panel = Panel;
exports.PickerInput = PickerInput;
exports.PickerItem = PickerItem;
exports.PickerList = PickerList;
exports.PickerListItem = PickerListItem;
exports.PickerModal = PickerModal;
exports.PickerToggler = PickerToggler;
exports.PickerTogglerTag = PickerTogglerTag;
exports.PresetsPanel = PresetsPanel;
exports.ProgressBar = ProgressBar;
exports.RadioGroup = RadioGroup;
exports.RadioInput = RadioInput;
exports.RangeDatePicker = RangeDatePicker;
exports.RangeDatePickerBody = RangeDatePickerBody;
exports.RangeDatePickerInput = RangeDatePickerInput;
exports.RichTextView = RichTextView;
exports.ScrollBars = ScrollBars;
exports.SearchInput = SearchInput;
exports.Slider = Slider;
exports.Snackbar = Snackbar;
exports.Spinner = Spinner;
exports.StatusIndicator = StatusIndicator;
exports.SuccessAlert = SuccessAlert;
exports.SuccessNotification = SuccessNotification;
exports.SvgCircleProgress = SvgCircleProgress;
exports.Switch = Switch;
exports.TabButton = TabButton;
exports.Tag = Tag;
exports.Text = Text;
exports.TextArea = TextArea;
exports.TextInput = TextInput;
exports.TextPlaceholder = TextPlaceholder;
exports.TimePicker = TimePicker;
exports.TimePickerBody = TimePickerBody;
exports.Tooltip = Tooltip;
exports.VerticalTabButton = VerticalTabButton;
exports.VirtualList = VirtualList;
exports.WarningAlert = WarningAlert;
exports.WarningNotification = WarningNotification;
exports.applyDateSelectionMods = applyDateSelectionMods;
exports.defaultPredicates = defaultPredicates;
exports.getErrorPageConfig = getErrorPageConfig;
exports.getHighlightRanges = getHighlightRanges;
exports.getHighlightedSearchMatches = getHighlightedSearchMatches;
exports.getRecoveryMessageConfig = getRecoveryMessageConfig;
exports.getTextClasses = getTextClasses;
exports.i18n = i18n;
exports.propsMods = propsMods;
exports.rangeDatePickerPresets = rangeDatePickerPresets;
exports.renderCell = renderCell;
exports.renderDropMarkers = renderDropMarkers;
exports.settings = settings;
exports.useColumnsWithFilters = useColumnsWithFilters;
exports.useForm = useForm;
exports.uuiDatePickerBody = uuiDatePickerBody;
exports.uuiRangeDatePickerBody = uuiRangeDatePickerBody;
exports.uuiTimePicker = uuiTimePicker;
//# sourceMappingURL=index.js.map
