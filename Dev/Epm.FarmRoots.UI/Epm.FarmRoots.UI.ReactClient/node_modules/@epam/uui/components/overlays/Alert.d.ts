import * as React from 'react';
import { IHasChildren, IHasCX, Icon, IHasRawProps } from '@epam/uui-core';
interface AlertNotificationAction {
    name: string;
    action: () => void;
}
interface AlertMods {
    /** Alert color */
    color: 'info' | 'success' | 'warning' | 'error';
}
export interface AlertCoreProps extends IHasChildren, IHasCX, IHasRawProps<React.HTMLAttributes<HTMLDivElement>> {
    /** List of actions to display in the alert. Each action has name and 'action' callback */
    actions?: AlertNotificationAction[];
    /** When specified, a close icon is rendered. onClose callback will be called on clicking the close icon */
    onClose?(): void;
    /** An optional icon to show on the left of the alert */
    icon?: Icon;
    /**
     * Component size. If omitted, 48 size will be used.
     * @default '48'
     */
    size?: '36' | '48';
}
/** Represents the properties of the Alert component. */
export interface AlertProps extends AlertCoreProps, AlertMods {
}
export declare const Alert: React.ForwardRefExoticComponent<AlertProps & React.RefAttributes<HTMLDivElement>>;
export declare const WarningAlert: React.ForwardRefExoticComponent<Omit<AlertProps, "color"> & React.RefAttributes<HTMLDivElement>>;
export declare const SuccessAlert: React.ForwardRefExoticComponent<Omit<AlertProps, "color"> & React.RefAttributes<HTMLDivElement>>;
export declare const HintAlert: React.ForwardRefExoticComponent<Omit<AlertProps, "color"> & React.RefAttributes<HTMLDivElement>>;
export declare const ErrorAlert: React.ForwardRefExoticComponent<Omit<AlertProps, "color"> & React.RefAttributes<HTMLDivElement>>;
export {};
//# sourceMappingURL=Alert.d.ts.map