import React from 'react';
import { IHasChildren, VPanelProps, IHasIcon, ICanRedirect, IHasCaption, IDisableable, IAnalyticableClick, IHasCX, IClickable, DropdownBodyProps, IDropdownTogglerProps } from '@epam/uui-core';
import { DropdownContainerProps } from '@epam/uui-components';
export interface IDropdownMenuItemProps extends IDropdownTogglerProps, IHasCaption, IHasIcon, ICanRedirect, IHasCX, IDisableable, IAnalyticableClick {
    isSelected?: boolean;
    isActive?: boolean;
    indent?: boolean;
}
export interface DropdownMenuContainerProps extends VPanelProps, IHasChildren, DropdownBodyProps, Pick<DropdownContainerProps, 'focusLock'> {
    closeOnKey?: React.KeyboardEvent<HTMLElement>['key'];
    minWidth?: number;
}
export declare enum IDropdownControlKeys {
    ENTER = "Enter",
    ESCAPE = "Escape",
    LEFT_ARROW = "ArrowLeft",
    RIGHT_ARROW = "ArrowRight",
    UP_ARROW = "ArrowUp",
    DOWN_ARROW = "ArrowDown"
}
export declare const DropdownMenuBody: React.ComponentType<DropdownMenuContainerProps & React.RefAttributes<any>>;
export declare const DropdownMenuButton: React.ForwardRefExoticComponent<Pick<IDropdownMenuItemProps, "isDisabled" | "toggleDropdownOpening" | "isInteractedOutside" | "isOpen" | "isDropdown" | "onClick" | "link" | "cx" | "caption" | "isActive" | "icon" | "iconPosition" | "onIconClick" | "clickAnalyticsEvent" | "target" | "href" | "isSelected" | "isLinkActive" | "indent"> & React.RefAttributes<any>>;
export declare function DropdownMenuSplitter(props: IHasCX): JSX.Element;
interface IDropdownMenuHeader extends IHasCX, IHasCaption {
}
export declare function DropdownMenuHeader(props: IDropdownMenuHeader): JSX.Element;
interface IDropdownSubMenu extends IHasChildren, IHasCaption, IHasIcon, IDropdownMenuItemProps {
    openOnHover?: boolean;
}
export declare function DropdownSubMenu(props: IDropdownSubMenu): JSX.Element;
interface IDropdownMenuSwitchButton extends IHasCX, IHasCaption, IHasIcon, IDisableable, IAnalyticableClick, IClickable {
    onValueChange: (value: boolean) => void;
    isSelected: boolean;
}
export declare function DropdownMenuSwitchButton(props: IDropdownMenuSwitchButton): JSX.Element;
export {};
//# sourceMappingURL=DropdownMenu.d.ts.map