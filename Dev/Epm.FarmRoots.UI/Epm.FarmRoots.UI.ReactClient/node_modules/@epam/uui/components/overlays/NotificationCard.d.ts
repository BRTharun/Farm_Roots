import React from 'react';
import { INotification, Icon, IHasChildren, IHasCX, IHasRawProps } from '@epam/uui-core';
interface NotificationAction extends IHasRawProps<React.ButtonHTMLAttributes<HTMLButtonElement>> {
    /** Defines NotificationAction name. */
    name: string;
    /** Called when action is clicked */
    action: () => void;
}
export interface NotificationCardCoreProps extends INotification, IHasChildren, IHasCX, IHasRawProps<React.HTMLAttributes<HTMLDivElement>> {
    /** Array of Notification actions. If provided will be displayed as LinkButtons in the end of notification. */
    actions?: NotificationAction[];
    /** NotificationCard icon */
    icon?: Icon;
}
interface NotificationMods {
    /** NotificationCard color */
    color?: 'info' | 'success' | 'warning' | 'error';
}
export interface NotificationCardProps extends NotificationCardCoreProps, NotificationMods {
}
export declare const NotificationCard: React.ForwardRefExoticComponent<NotificationCardProps & React.RefAttributes<HTMLDivElement>>;
export declare const WarningNotification: React.ForwardRefExoticComponent<NotificationCardCoreProps & React.RefAttributes<HTMLDivElement>>;
export declare const SuccessNotification: React.ForwardRefExoticComponent<NotificationCardCoreProps & React.RefAttributes<HTMLDivElement>>;
export declare const HintNotification: React.ForwardRefExoticComponent<NotificationCardCoreProps & React.RefAttributes<HTMLDivElement>>;
export declare const ErrorNotification: React.ForwardRefExoticComponent<NotificationCardCoreProps & React.RefAttributes<HTMLDivElement>>;
export declare function ClearNotification(): JSX.Element;
export {};
//# sourceMappingURL=NotificationCard.d.ts.map