import React from 'react';
import { Icon, IDropdownToggler, IHasCaption, IHasIcon, Overwrite } from '@epam/uui-core';
import { ClickableComponentProps } from '@epam/uui-components';
interface TagMods {
    /**
     * Defines component color.
     * @default 'neutral'
     */
    color?: 'info' | 'success' | 'warning' | 'critical' | 'neutral';
    /**
     * Defines component size.
     * @default '36'
     */
    size?: '18' | '24' | '30' | '36' | '42' | '48';
}
export interface TagModsOverride {
}
/** Represents the Core properties of the Tag component. */
export type TagCoreProps = ClickableComponentProps & IDropdownToggler & IHasIcon & IHasCaption & {
    /**
     * Defines component fill style.
     * @default 'solid'
     */
    fill?: 'solid' | 'outline';
    /** Call to clear toggler value */
    onClear?(e?: any): void;
    /** Icon for clear value button (usually cross) */
    clearIcon?: Icon;
    /** Icon for drop-down toggler */
    dropdownIcon?: Icon;
    /** Count value to be placed in component */
    count?: React.ReactNode;
};
/** Represents the properties of the Tag component. */
export interface TagProps extends TagCoreProps, Overwrite<TagMods, TagModsOverride> {
}
export declare const Tag: React.ForwardRefExoticComponent<TagProps & React.RefAttributes<HTMLAnchorElement | HTMLButtonElement | HTMLSpanElement>>;
export {};
//# sourceMappingURL=Tag.d.ts.map