import * as React from 'react';
import { ICanBeInvalid, ICanBeReadonly, IDisableable, IEditable, IHasCX, IHasDirection, IHasForwardedRef, IHasRawProps } from '@epam/uui-core';
import { CheckboxProps } from '../inputs';
interface CheckboxGroupItem<TValue> extends Omit<CheckboxProps, 'id' | 'onValueChange' | 'value'> {
    /** Checkbox label. Can be a string, or React.ReactNode */
    name?: React.ReactNode;
    /** Item ID to put into selection */
    id: TValue;
    /** Render callback for checkbox label.
     * If omitted, 'name' prop value will be rendered.
     */
    renderName?: () => React.ReactNode;
}
export interface CheckboxGroupProps<TValue> extends ICanBeInvalid, IHasCX, IEditable<TValue[]>, IDisableable, IHasDirection, ICanBeReadonly, IHasRawProps<React.FieldsetHTMLAttributes<HTMLFieldSetElement>>, IHasForwardedRef<HTMLFieldSetElement> {
    /** Array of checkbox items to be rendered in group */
    items: CheckboxGroupItem<TValue>[];
    /** Defines group components size */
    size?: CheckboxProps['size'];
}
export declare function CheckboxGroup<TValue>(props: CheckboxGroupProps<TValue>): JSX.Element;
export {};
//# sourceMappingURL=CheckboxGroup.d.ts.map