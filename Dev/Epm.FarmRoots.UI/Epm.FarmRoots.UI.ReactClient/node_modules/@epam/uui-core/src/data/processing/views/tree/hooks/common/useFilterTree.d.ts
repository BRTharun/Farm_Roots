import { DataSourceState } from '../../../../../../types';
import { TreeState } from '../../treeState';
export type UseFilterTreeProps<TItem, TId, TFilter = any> = {
    getFilter?: (filter: TFilter) => (item: TItem) => boolean;
    tree: TreeState<TItem, TId>;
    dataSourceState: DataSourceState<TFilter, TId>;
    isLoading?: boolean;
};
export declare function useFilterTree<TItem, TId, TFilter = any>({ tree, dataSourceState: { filter }, getFilter, isLoading }: UseFilterTreeProps<TItem, TId, TFilter>, deps: any[]): TreeState<TItem, TId>;
//# sourceMappingURL=useFilterTree.d.ts.map