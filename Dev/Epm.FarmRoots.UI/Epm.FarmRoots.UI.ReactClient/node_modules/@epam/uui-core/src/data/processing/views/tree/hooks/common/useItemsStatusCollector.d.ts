import { DataSourceState, IMap, PatchOptions } from '../../../../../../types';
import { RecordStatus } from '../../types';
import { ItemsStatusCollector } from '../../ItemsStatusCollector';
import { ITreeParams } from '../../treeStructure';
export interface UseItemsStatusCollectorProps<TItem, TId, TFilter = any> extends ITreeParams<TItem, TId>, Pick<PatchOptions<TItem, TId>, 'patch'> {
    itemsStatusMap?: IMap<TId, RecordStatus>;
    itemsStatusCollector?: ItemsStatusCollector<TItem, TId, TFilter>;
    dataSourceState: DataSourceState<TFilter, TId>;
}
export declare function useItemsStatusCollector<TItem, TId>({ itemsStatusMap, complexIds, getId, itemsStatusCollector, dataSourceState, patch, }: UseItemsStatusCollectorProps<TItem, TId>, deps: any[]): ItemsStatusCollector<TItem, TId, any>;
//# sourceMappingURL=useItemsStatusCollector.d.ts.map