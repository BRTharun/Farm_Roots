import { CascadeSelection, DataRowProps } from '../../../../types';
export interface NodeStats {
    isSomeCheckable: boolean;
    isSomeChecked: boolean;
    isAllChecked: boolean;
    isSomeSelected: boolean;
    hasMoreRows: boolean;
    isSomeCheckboxEnabled: boolean;
}
export declare const getDefaultNodeStats: () => {
    isSomeCheckable: boolean;
    isSomeChecked: boolean;
    isAllChecked: boolean;
    isSomeSelected: boolean;
    hasMoreRows: boolean;
    isSomeCheckboxEnabled: boolean;
};
export declare const mergeStats: (parentStats: NodeStats, childStats: NodeStats) => {
    isSomeSelected: boolean;
    isSomeCheckable: boolean;
    isSomeChecked: boolean;
    isAllChecked: boolean;
    isSomeCheckboxEnabled: boolean;
    hasMoreRows: boolean;
};
export declare const getRowStats: <TItem, TId>(row: DataRowProps<TItem, TId>, actualStats: NodeStats, cascadeSelection: CascadeSelection) => NodeStats;
//# sourceMappingURL=stats.d.ts.map