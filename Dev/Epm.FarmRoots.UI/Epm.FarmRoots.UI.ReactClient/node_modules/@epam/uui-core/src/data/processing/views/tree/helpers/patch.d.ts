import { DataSourceState, IImmutableMap, IMap, PatchOptions, SortConfig, SortedPatchByParentId } from '../../../../../types';
import { ITree } from '../ITree';
export declare const getSortedPatchByParentId: <TItem, TId, TFilter>(tree: ITree<TItem, TId>, patch: IMap<TId, TItem> | IImmutableMap<TId, TItem>, patchAtLastSort: IMap<TId, TItem> | IImmutableMap<TId, TItem>, getNewItemPosition: PatchOptions<TItem, TId>['getNewItemPosition'], getItemTemporaryOrder: PatchOptions<TItem, TId>['getItemTemporaryOrder'] | undefined, sortBy: SortConfig<TItem>['sortBy'], sorting: DataSourceState<TFilter, TId>['sorting'], isDeleted?: (item: TItem) => boolean, fixItemBetweenSortings?: boolean) => SortedPatchByParentId<TItem, TId>;
//# sourceMappingURL=patch.d.ts.map