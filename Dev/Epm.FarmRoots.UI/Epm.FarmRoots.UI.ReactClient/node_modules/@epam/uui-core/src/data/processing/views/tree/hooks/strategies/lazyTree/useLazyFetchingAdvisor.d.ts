import { DataSourceState } from '../../../../../../../types';
export interface UseLazyFetchingAdvisorProps<TId, TFilter = any> {
    dataSourceState: DataSourceState<TFilter, TId>;
    filter?: TFilter;
    forceReload?: boolean;
    backgroundReload?: boolean;
    showSelectedOnly?: boolean;
}
export declare function useLazyFetchingAdvisor<TId, TFilter = any>({ dataSourceState, filter, forceReload, backgroundReload, showSelectedOnly, }: UseLazyFetchingAdvisorProps<TId, TFilter>, deps?: any[]): {
    shouldLoad: boolean;
    shouldRefetch: boolean;
    shouldFetch: boolean;
    shouldReload: boolean;
};
//# sourceMappingURL=useLazyFetchingAdvisor.d.ts.map