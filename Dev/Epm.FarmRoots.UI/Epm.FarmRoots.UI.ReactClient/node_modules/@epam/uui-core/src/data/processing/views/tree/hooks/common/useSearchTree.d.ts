import { DataSourceState } from '../../../../../../types';
import { TreeState } from '../../treeState';
export type UseSearchTreeProps<TItem, TId, TFilter = any> = {
    getSearchFields?: (item: TItem) => string[];
    sortSearchByRelevance?: boolean;
    tree: TreeState<TItem, TId>;
    dataSourceState: DataSourceState<TFilter, TId>;
    isLoading?: boolean;
};
export declare function useSearchTree<TItem, TId, TFilter = any>({ tree, dataSourceState: { search }, getSearchFields, sortSearchByRelevance, isLoading, }: UseSearchTreeProps<TItem, TId, TFilter>, deps?: any[]): TreeState<TItem, TId>;
//# sourceMappingURL=useSearchTree.d.ts.map