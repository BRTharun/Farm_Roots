import React from 'react';
import { IEditable, IAnalyticableOnChange } from '../types';
/**
 * IEditableDebouncer component options.
 */
export interface IEditableDebouncerOptions {
    /** Pass true to disable debouncing */
    disableDebounce?: boolean;
    /** Debounce delay in ms. Default value is 500ms */
    debounceDelay?: number;
}
/**
 * IEditableDebouncer component props.
 */
export interface IEditableDebouncerProps<T> extends IEditable<T>, IEditableDebouncerOptions, IAnalyticableOnChange<T> {
    /**
     * Render wrapped component.
     */
    render: (props: IEditable<T>) => React.ReactNode;
}
/**
 * Wrap other IEditable components into the IEditableDebouncer to debounce onValueChange calls.
 * Useful for search inputs, or any other components that cause expensive computations on change.
 * Wrapped component still behaves as controlled component, and will react to external value changes immediately.
 */
export declare const IEditableDebouncer: <T>(props: IEditableDebouncerProps<T>) => React.ReactElement<any, string | React.JSXElementConstructor<any>>;
//# sourceMappingURL=IEditableDebouncer.d.ts.map