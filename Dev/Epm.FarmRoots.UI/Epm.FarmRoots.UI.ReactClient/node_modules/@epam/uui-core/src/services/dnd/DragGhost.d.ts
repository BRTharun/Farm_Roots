import * as React from 'react';
import { UuiContexts } from '../../types/contexts';
import { DndContextState } from './DndContext';
export interface DragGhostProps {
}
interface DragGhostState extends DndContextState {
    pointerX?: number;
    pointerY?: number;
}
export declare class DragGhost extends React.Component<DragGhostProps, DragGhostState> {
    static contextType: React.Context<import("../../types/contexts").CommonContexts<any, any>>;
    context: UuiContexts;
    private layer;
    state: DragGhostState;
    onPointerMove: (e: PointerEvent) => void;
    contextUpdateHandler: (state: DndContextState) => void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    getGhostCoords(pointerX: number, pointerY: number): {
        left: number;
        top: number;
    };
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=DragGhost.d.ts.map