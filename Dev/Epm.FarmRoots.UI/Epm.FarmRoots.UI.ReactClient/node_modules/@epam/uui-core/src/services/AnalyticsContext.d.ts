import { BaseContext } from './BaseContext';
import { IRouterContext, IAnalyticsListener, IAnalyticsContext } from '../types/contexts';
import { AnalyticsEvent } from '../types/objects';
interface AnalyticsContextOptions {
    /** Instance of UUI router context */
    router: IRouterContext;
}
export declare class AnalyticsContext extends BaseContext implements IAnalyticsContext {
    private removeRouteListener;
    private currentLocation;
    private readonly router;
    listeners: IAnalyticsListener[];
    constructor(options: AnalyticsContextOptions);
    destroyContext(): void;
    init(): void;
    sendEvent(event: AnalyticsEvent | null | undefined, eventType?: 'event' | 'pageView' | 'apiTiming'): void;
    private handleChangeRoute;
    addListener(listener: IAnalyticsListener): void;
    private getParameters;
}
export {};
//# sourceMappingURL=AnalyticsContext.d.ts.map