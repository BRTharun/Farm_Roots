import * as React from 'react';
import { IDndContext } from '../../types/contexts';
import { BaseContext } from '../BaseContext';
export interface DndContextState {
    isDragging: boolean;
    ghostOffsetX?: number;
    ghostOffsetY?: number;
    ghostWidth?: number;
    renderGhost?(): React.ReactNode;
}
export declare class DndContext extends BaseContext<DndContextState> implements IDndContext {
    isDragging: boolean;
    dragData: any;
    private scrollZoneSize;
    private ghostOffsetX;
    private ghostOffsetY;
    private ghostWidth;
    private renderGhostCallback;
    private lastScrollTime;
    private mouseCoordsService;
    init(): void;
    destroyContext(): void;
    getMouseCoords: () => TMouseCoords;
    startDrag(node: HTMLElement, data: {}, renderGhost: () => React.ReactNode): void;
    endDrag(): void;
    xScrollNode: HTMLElement;
    yScrollNode: HTMLElement;
    private windowPointerMoveHandler;
    private windowPointerUpHandler;
    private getScrollStep;
    private scrollWindow;
}
export type TMouseCoords = {
    mousePageX: number;
    mousePageY: number;
    mouseDx: number;
    mouseDy: number;
    mouseDxSmooth: number;
    mouseDySmooth: number;
    mouseDownPageX: number;
    mouseDownPageY: number;
    buttons: number;
};
//# sourceMappingURL=DndContext.d.ts.map