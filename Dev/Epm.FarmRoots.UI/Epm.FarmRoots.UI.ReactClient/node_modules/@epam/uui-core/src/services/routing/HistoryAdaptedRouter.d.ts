import { Link } from '../../types/objects';
import { IRouterContext } from '../../types/contexts';
export interface IHistory4 {
    location: Link;
    push(link: Link): void;
    replace(link: Link): void;
    createHref(link: Link): string;
    listen(listener: (location: Link) => void): () => void;
    block(listener: (args: any) => any): () => void;
}
export declare class HistoryAdaptedRouter implements IRouterContext {
    private history;
    constructor(history: IHistory4);
    getCurrentLink(): Link;
    redirect(link: Link): void;
    transfer(link: Link): void;
    isActive(link: Link): boolean;
    createHref(link: Link): string;
    listen(listener: (link: Link) => void): () => void;
    block(listener: (link: Link) => void): () => void;
    private static searchToQuery;
    private static queryToSearch;
}
//# sourceMappingURL=HistoryAdaptedRouter.d.ts.map