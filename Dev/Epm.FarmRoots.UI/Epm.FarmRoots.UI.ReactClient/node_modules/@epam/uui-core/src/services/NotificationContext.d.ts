import * as React from 'react';
import { BaseContext } from './BaseContext';
import { NotificationParams, INotificationContext } from '../types/contexts';
import { LayoutContext } from './LayoutContext';
import { INotification } from '../types/props';
export interface NotificationOperation {
    /** Notification component that should be rendered */
    component: React.ComponentType<any>;
    /** Notification component props */
    props: INotification;
    /** Notification config */
    config: NotificationParams;
}
export declare class NotificationContext extends BaseContext implements INotificationContext {
    private layoutCtx;
    private notifications;
    constructor(layoutCtx: LayoutContext);
    destroyContext(): void;
    show(render: (props: INotification) => React.ReactNode, notificationParams: NotificationParams): Promise<void>;
    getNotifications(): NotificationOperation[];
    handleRedirect(): void;
    remove(id: number): void;
    clearAll(): void;
}
//# sourceMappingURL=NotificationContext.d.ts.map