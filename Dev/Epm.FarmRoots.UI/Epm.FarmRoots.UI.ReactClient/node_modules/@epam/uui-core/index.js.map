{"version":3,"file":"index.js","sources":["rollup://@epam/uui-core/./src/constants/selectors.ts","rollup://@epam/uui-core/./src/helpers/forwardRef.ts","rollup://@epam/uui-core/./src/helpers/withMods.ts","rollup://@epam/uui-core/./src/helpers/events.ts","rollup://@epam/uui-core/./src/helpers/arrayToMatrix.ts","rollup://@epam/uui-core/./src/helpers/cx.ts","rollup://@epam/uui-core/./src/helpers/ssr.ts","rollup://@epam/uui-core/./src/helpers/getOffset.ts","rollup://@epam/uui-core/./src/services/BaseContext.ts","rollup://@epam/uui-core/./src/services/dnd/DndContext.tsx","rollup://@epam/uui-core/./src/services/UuiContext.ts","rollup://@epam/uui-core/./src/services/dnd/DragGhost.tsx","rollup://@epam/uui-core/./src/services/dnd/helpers.ts","rollup://@epam/uui-core/./src/services/dnd/DndActor.tsx","rollup://@epam/uui-core/./src/services/LayoutContext.ts","rollup://@epam/uui-core/./node_modules/tslib/tslib.es6.js","rollup://@epam/uui-core/./src/services/routing/StubAdaptedRouter.tsx","rollup://@epam/uui-core/./src/helpers/queryToSearch.ts","rollup://@epam/uui-core/./src/helpers/searchToQuery.ts","rollup://@epam/uui-core/./src/services/routing/HistoryAdaptedRouter.tsx","rollup://@epam/uui-core/./src/services/routing/NextRouterAdapter.tsx","rollup://@epam/uui-core/./src/services/routing/NextAppRouterAdapter.tsx","rollup://@epam/uui-core/./src/services/routing/interfaces/IRouter6.ts","rollup://@epam/uui-core/./src/services/routing/Router6AdaptedRouter.ts","rollup://@epam/uui-core/./src/services/analytics/GAListener.ts","rollup://@epam/uui-core/./src/services/AnalyticsContext.ts","rollup://@epam/uui-core/./src/helpers/cookie.ts","rollup://@epam/uui-core/./src/services/ApiContext.ts","rollup://@epam/uui-core/./src/services/ErrorContext.ts","rollup://@epam/uui-core/./src/services/LockContext.ts","rollup://@epam/uui-core/./src/services/ModalContext.ts","rollup://@epam/uui-core/./src/services/NotificationContext.tsx","rollup://@epam/uui-core/./src/services/UserSettingsContext.ts","rollup://@epam/uui-core/./src/hooks/useUuiServices.ts","rollup://@epam/uui-core/./src/services/ContextProvider.tsx","rollup://@epam/uui-core/./src/helpers/IEditableDebouncer.ts","rollup://@epam/uui-core/./src/helpers/getOrderBetween.ts","rollup://@epam/uui-core/./src/helpers/urlUtils.ts","rollup://@epam/uui-core/./src/data/querying/getOrderComparer.ts","rollup://@epam/uui-core/./src/helpers/orderBy.ts","rollup://@epam/uui-core/./src/helpers/applyColumnsConfig.ts","rollup://@epam/uui-core/./src/helpers/formatBytes.ts","rollup://@epam/uui-core/./src/helpers/numericInputCalculations.ts","rollup://@epam/uui-core/./src/helpers/mobile.ts","rollup://@epam/uui-core/./src/helpers/uuiLogger.ts","rollup://@epam/uui-core/./src/helpers/clearEmptyValueFromRecord.ts","rollup://@epam/uui-core/./src/helpers/createSkinComponent.ts","rollup://@epam/uui-core/./src/helpers/range.ts","rollup://@epam/uui-core/./src/types/contexts.ts","rollup://@epam/uui-core/./src/types/dataSources.ts","rollup://@epam/uui-core/./src/helpers/dayJsHelper.ts","rollup://@epam/uui-core/./src/data/querying/getFilterPredicate.ts","rollup://@epam/uui-core/./src/data/querying/getSearchFilter.ts","rollup://@epam/uui-core/./src/data/querying/runDataQuery.ts","rollup://@epam/uui-core/./src/hooks/usePrevious.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/helpers/map.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/constants.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/ItemsAccessor.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeStructure/helpers/checked.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeStructure/helpers/FetchingHelper.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/ItemsMap.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/helpers/comparators.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/Tree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeStructure/TreeStructure.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeStructure/helpers/CheckingHelper.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeStructure/helpers/FilterHelper.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeStructure/helpers/SearchHelper.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeStructure/helpers/SortHelper.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/ItemsStorage.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/lazyTree/useLoadData.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useDataSourceStateWithDefaults.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/ItemsStatusCollector.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useItemsStatusCollector.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useItemsStorage.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/helpers/patch.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/usePatchTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/checked.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useDepsChanged.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useUpdateTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useSelectedOnlyTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useSearchTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useSortTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useFilterTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/common/useActualItemsMap.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/lazyTree/helpers.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/lazyTree/useLazyFetchingAdvisor.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/lazyTree/useLazyTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/helpers/merge.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeStructure/helpers/PatchHelper.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeStructure/helpers/TreeHelper.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/treeState/TreeState.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/asyncTree/useLoadData.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/asyncTree/useAsyncTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/syncTree/useCreateTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/syncTree/useSyncTree.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/strategies/index.ts","rollup://@epam/uui-core/./src/data/processing/views/tree/hooks/useTree.ts","rollup://@epam/uui-core/./src/data/processing/views/helpers/convert.ts","rollup://@epam/uui-core/./src/data/processing/views/helpers/setters.ts","rollup://@epam/uui-core/./src/data/processing/views/helpers/status.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/services/buildParentsLookup.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/services/useCheckingService.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/services/useFoldingService.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/services/useFocusService.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/services/useSelectingService.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/services/useCascadeSelectionService.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/useDataRowProps.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/stats.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/useBuildRows.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/useSelectAll.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/usePinnedRows.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/useUpdateRowProps.ts","rollup://@epam/uui-core/./src/data/processing/views/dataRows/useDataRows.ts","rollup://@epam/uui-core/./src/data/processing/BaseDataSource.tsx","rollup://@epam/uui-core/./src/data/processing/ArrayDataSource.tsx","rollup://@epam/uui-core/./src/hooks/useColumnsConfig.ts","rollup://@epam/uui-core/./src/ssr/useLayoutEffectSafeForSsr.ts","rollup://@epam/uui-core/./src/hooks/useVirtualList/utils.ts","rollup://@epam/uui-core/./src/hooks/useVirtualList/useVirtualList.ts","rollup://@epam/uui-core/./src/hooks/useScrollShadows.ts","rollup://@epam/uui-core/./src/hooks/useForceUpdate.ts","rollup://@epam/uui-core/./src/hooks/useUuiError.ts","rollup://@epam/uui-core/./src/hooks/useTableState/utils.ts","rollup://@epam/uui-core/./src/hooks/useTableState/useTableState.ts","rollup://@epam/uui-core/./src/hooks/useLayer.ts","rollup://@epam/uui-core/./src/hooks/useResizeObserver.ts","rollup://@epam/uui-core/./src/data/processing/AsyncDataSource.tsx","rollup://@epam/uui-core/./src/helpers/useMemoWithDestructor.ts","rollup://@epam/uui-core/./src/data/processing/hooks/useAsyncDataSource.ts","rollup://@epam/uui-core/./src/data/processing/hooks/useArrayDataSource.ts","rollup://@epam/uui-core/./src/data/processing/LazyDataSource.tsx","rollup://@epam/uui-core/./src/data/processing/hooks/useLazyDataSource.ts","rollup://@epam/uui-core/./src/i18n.ts","rollup://@epam/uui-core/./src/data/validation/validate.ts","rollup://@epam/uui-core/./src/data/validation/validateServerErrorState.ts","rollup://@epam/uui-core/./src/data/validation/mergeValidation.ts","rollup://@epam/uui-core/./src/data/lenses/lensesImpl.tsx","rollup://@epam/uui-core/./src/data/lenses/LensBuilder.ts","rollup://@epam/uui-core/./src/data/lenses/builders.ts","rollup://@epam/uui-core/./src/data/lenses/index.ts","rollup://@epam/uui-core/./src/data/forms/useLock.ts","rollup://@epam/uui-core/./src/data/forms/shouldCreateUndoCheckpoint.ts","rollup://@epam/uui-core/./src/data/forms/useForm.ts","rollup://@epam/uui-core/./src/data/forms/Form.tsx","rollup://@epam/uui-core/./src/ssr/useUuiServicesSsr.tsx","rollup://@epam/uui-core/./src/ssr/useNextAppRouter.ts"],"sourcesContent":["export const uuiElement = {\n    widget: 'uui-widget',\n    buttonBox: 'uui-button-box',\n    anchor: 'uui-anchor',\n    inputBox: 'uui-input-box',\n    input: 'uui-input',\n    placeholder: 'uui-placeholder',\n    valueInPlaceholder: 'uui-value-in-placeholder',\n    checkbox: 'uui-checkbox',\n    checkboxContainer: 'uui-checkbox-container',\n    foldingArrow: 'uui-folding-arrow',\n    radioInput: 'uui-radioinput',\n    icon: 'uui-icon',\n    iconPrimary: 'uui-icon-primary',\n    count: 'uui-count',\n    caption: 'uui-caption',\n    label: 'uui-label',\n    labeledContainer: 'uui-labeled-container',\n    inputLabel: 'uui-input-label',\n    invalidMessage: 'uui-invalid-message',\n    dropdownBody: 'uui-dropdown-body',\n    switchBody: 'uui-switch-body',\n    switchToggler: 'uui-switch-toggler',\n    ratingStar: 'uui-rating-star',\n    tooltipContainer: 'uui-tooltip-container',\n    tooltipBody: 'uui-tooltip-body',\n    tooltipArrow: 'uui-tooltip-arrow',\n    modalBlocker: 'uui-modal-blocker',\n    modalWindow: 'uui-modal-window',\n    textareaCounter: 'uui-textarea-counter',\n} as const;\n\nexport const uuiMod = {\n    enabled: 'uui-enabled',\n    disabled: 'uui-disabled',\n    readonly: 'uui-readonly',\n    focus: 'uui-focus',\n    active: 'uui-active',\n    invalid: 'uui-invalid',\n    checked: 'uui-checked',\n    selected: 'uui-selected',\n    opened: 'uui-opened',\n    loading: 'uui-loading',\n    error: 'uui-error',\n} as const;\n\nexport const labelMod = {\n    left: 'uui-label-left',\n    top: 'uui-label-top',\n} as const;\n\nexport const directionMode = {\n    vertical: 'uui-vertical-direction',\n    horizontal: 'uui-horizontal-direction',\n} as const;\n\nexport const uuiMarkers = {\n    lockFocus: '-lock-focus',\n    clickable: '-clickable',\n    draggable: '-draggable',\n    scrolledLeft: '-scrolled-left',\n    scrolledRight: '-scrolled-right',\n    scrolledTop: '-scrolled-top',\n    scrolledBottom: '-scrolled-bottom',\n} as const;\n\nexport const uuiDndState = {\n    draggedOut: 'uui-dragged-out',\n    dropAccepted: 'uui-drop-accepted',\n    dragGhost: 'uui-drag-ghost',\n} as const;\n\nexport const uuiDataTableHeaderCell = {\n    uuiTableHeaderCell: 'uui-table-header-cell',\n    uuiTableHeaderCaption: 'uui-table-header-caption',\n    uuiTableHeaderCaptionWrapper: 'uui-table-header-caption-wrapper',\n    uuiTableHeaderCheckbox: 'uui-table-header-checkbox',\n    uuiTableHeaderSortIcon: 'uui-table-header-sort-icon',\n    uuiTableHeaderFilterIcon: 'uui-table-header-filter-icon',\n    uuiTableHeaderDropdownIcon: 'uui-table-header-dropdown-icon',\n    uuiTableHeaderFoldAllIcon: 'uui-table-header-fold-all-icon',\n} as const;\n\nexport const uuiScrollShadows = {\n    top: 'uui-scroll-shadow-top',\n    topVisible: 'uui-scroll-shadow-top-visible',\n    bottom: 'uui-scroll-shadow-bottom',\n    bottomVisible: 'uui-scroll-shadow-bottom-visible',\n} as const;\n","import React from 'react';\n\n/**\n * React forward-ref function, with a patched type, allowed generic types to pass-thru\n * More here: https://fettblog.eu/typescript-react-generic-forward-refs/\n * We go with re-export this way, instead of patching React typings, to not break typings in dependent projects.\n */\nexport const forwardRef = React.forwardRef as <T, P = {}>(\n    render: (props: P, ref: React.Ref<T>) => React.ReactElement | null\n) => (props: P & React.RefAttributes<T>) => React.ReactElement | null;\n","import * as React from 'react';\nimport { CX, IHasCX } from '../types';\nimport { forwardRef } from './forwardRef';\n\nexport function withMods<TSource, TResult>(\n    Component: React.ComponentType<TSource>,\n    getCx?: (props: Readonly<TResult>) => CX,\n    getProps?: (props: TResult) => Partial<TSource>,\n): React.ComponentType<TResult & React.RefAttributes<any>> {\n    const isClassComponent = Component.prototype instanceof React.Component;\n\n    // Class components needs to be wrapped in any case,\n    // as they might rely on withMods to add forwardedRef.\n    if (!isClassComponent && !getProps && !getCx) {\n        return Component as any;\n    }\n\n    function applyMods(props: Readonly<TResult>) {\n        // Most components are wrapped in withMods component.\n        // Please keep this method simple and performant.\n        // Don't clone objects/arrays if not needed.\n\n        const modProps = getProps?.(props);\n        const result: Readonly<TResult> = Object.assign({}, props, modProps);\n\n        const cx = getCx?.(props);\n\n        if (cx) {\n            (result as IHasCX).cx = [cx, (props as any).cx];\n        }\n\n        return result;\n    }\n\n    let wrappedComponent: React.ComponentType<TResult & React.RefAttributes<any>>;\n\n    if (!Component) {\n        // Happens in tests, probably due to circular dependencies.\n        return null;\n    } else if (isClassComponent) {\n        // Class component. Wrap with forwardRef, and pass ref in the forwardedRef prop\n        wrappedComponent = forwardRef<any, Readonly<TResult>>((props, ref) => {\n            const allProps: any = applyMods(props);\n            allProps.forwardedRef = ref;\n            return React.createElement(Component, allProps);\n        });\n    } else if ((Component as any).render) {\n        // React.forwardRef component.\n        // Basically its object like { $$type: Symbol(FORWARD_REF), render: (props, ref) => ... }\n        // However, $$type is not exposed, so there's no good way to detect this.\n        // We re-wrap it in another forward ref, to avoid unnecessary stacking two forwardRefs\n        wrappedComponent = forwardRef(\n            (props: Readonly<TResult>, ref: any) => (Component as any).render(applyMods(props), ref),\n        );\n    } else if (Component instanceof Function) {\n        // Plain functional component. Just wrap with function, and apply mods to props\n        wrappedComponent = (props: TResult) => (Component as Function)(applyMods(props));\n    } else {\n        // Any other type of component. E.g. React.memo.\n        // Wrap it in another functional component\n        wrappedComponent = (props: TResult) => React.createElement(Component, applyMods(props));\n    }\n\n    wrappedComponent.displayName = `${Component?.displayName || Component?.name || 'unknown'} (withMods)`;\n\n    return wrappedComponent;\n}\n","import * as React from 'react';\nimport { uuiElement, uuiMarkers } from '../constants';\n\nexport function isEventTargetInsideClickable(e: React.SyntheticEvent<Element>): boolean {\n    return isAnyParentHasClass(_getEventTarget(e), e.currentTarget, [uuiMarkers.clickable]);\n}\n\n/**\n * This method receives blur event. So, relatedTarget is the element receiving focus.\n * @param e - blur event\n */\nexport function isFocusReceiverInsideFocusLock(e: React.FocusEvent<HTMLElement>): boolean {\n    return isAnyParentHasClass(e.relatedTarget, _getEventTarget(e) as Node, [uuiMarkers.lockFocus]);\n}\n\nexport function isEventTargetInsideDraggable(e: React.PointerEvent, toElement: Node) {\n    return isAnyParentHasClass(_getEventTarget(e), toElement, [uuiMarkers.draggable]);\n}\n\nexport function isEventTargetInsideInput(e: Event | React.PointerEvent, toElement: Node) {\n    return isAnyParentHasClass(_getEventTarget(e), toElement, [uuiElement.input]);\n}\n\nexport function releasePointerCaptureOnEventTarget(e: React.PointerEvent) {\n    (_getEventTarget(e) as HTMLElement).releasePointerCapture(e.pointerId);\n}\n\n/**\n * Iterates parent elements starting from \"fromElement\" and goes through its parents until \"toElement\" is found.\n * It returns true if any element along this path contains one of the class names specified in the \"classNames\" array.\n *\n * @param fromElement\n * @param toElement\n * @param classNames\n */\nexport function isAnyParentHasClass(fromElement: EventTarget, toElement: Node, classNames: string[]): boolean {\n    let el = fromElement as HTMLElement;\n    while (el && toElement !== el) {\n        if (el.classList && classNames.some((className) => el.classList.contains(className))) {\n            return true;\n        }\n        el = _getParentElement(el) as HTMLElement;\n    }\n    return false;\n}\n\nexport function blurFocusedElement() {\n    const elem = _getActiveElement() as HTMLElement;\n    elem?.blur();\n}\n\nexport function preventDefaultIfTargetFocused(e: Event) {\n    if (_getActiveElement() === e.target) {\n        e.preventDefault();\n    }\n}\n\n/**\n * Works exactly like native \"closest\" method, with next enhancements:\n * - supports HTMLElement as a selector\n * - takes Event as an input and performs search for the \"event target\" or \"event related target\" for focus/blur events.\n *\n * @param event\n * @param condition\n */\nexport function closestTargetParentByCondition(e: Event, condition: string | HTMLElement) {\n    const element = _getInteractionTarget(e) as HTMLElement;\n    if (!element || !condition) {\n        return null;\n    }\n    const conditionCallback = (elem: HTMLElement) => {\n        if (typeof condition === 'string') {\n            return elem.matches(condition);\n        }\n        return condition === elem;\n    };\n    if (conditionCallback(element)) {\n        return element;\n    }\n    let parent = _getParentElement(element) as HTMLElement;\n    while (parent) {\n        if (conditionCallback(parent)) {\n            return parent as HTMLElement;\n        }\n        parent = _getParentElement(parent) as HTMLElement;\n    }\n    return null;\n}\n\nexport function getScrollParentOfEventTarget(event: Event, dimension: 'x' | 'y'): HTMLElement {\n    const node = _getEventTarget(event) as HTMLElement;\n    return _getScrollParent(node, dimension);\n}\n\n/**\n * ↓ PRIVATE methods below this comment ↓\n */\n\n/**\n * Works as normal \"element.parentElement\" with next enhancement:\n * - If direct parent element is a shadow root, then it returns the shadow host element instead of null.\n * @param element\n */\nfunction _getParentElement(element: Element) {\n    let parentElem: Element = element.parentElement;\n    const parentNode: Node = element.parentNode;\n    if (!parentElem && parentNode instanceof ShadowRoot) {\n        parentElem = parentNode.host;\n    }\n    return parentElem;\n}\n\n/**\n * Works as normal \"document.activeElement\" with next enhancement:\n * - if focused element is located inside shadow DOM, then it returns actual focused element instead of the shadow DOM host.\n */\nfunction _getActiveElement(): HTMLElement | null {\n    const activeEl = document.activeElement || null;\n    if (activeEl && activeEl.shadowRoot) {\n        return activeEl.shadowRoot.activeElement as HTMLElement;\n    }\n    return activeEl as HTMLElement;\n}\n\nfunction _getScrollParent(node: HTMLElement, dimension: 'x' | 'y'): HTMLElement {\n    if (node == null) {\n        return null;\n    }\n\n    const isElement = node instanceof HTMLElement;\n    const style = isElement && window.getComputedStyle(node);\n\n    let overflow: string;\n    let scrollSize: number;\n    let clientSize: number;\n\n    if (dimension === 'x') {\n        overflow = style && style.overflowX;\n        scrollSize = node.scrollWidth;\n        clientSize = node.clientWidth;\n    } else {\n        overflow = style && style.overflowY;\n        scrollSize = node.scrollHeight;\n        clientSize = node.clientHeight;\n    }\n\n    const isScrollable = overflow !== 'visible' && overflow !== 'hidden';\n\n    if (isScrollable && scrollSize > clientSize) {\n        return node;\n    } else {\n        return _getScrollParent(_getParentElement(node) as HTMLElement, dimension);\n    }\n}\n\n/**\n * 1. For native Event - works as normal \"event.target\" with next enhancement:\n *    - If event occurs inside shadow DOM and caught outside the shadow dom then the real target is returned instead of the shadow DOM host.\n * 2. For React synthetic event - just returns \"event.target\" because it already points to the actual target.\n *\n * @param event\n */\nfunction _getEventTarget(event: Event | React.SyntheticEvent) {\n    if (event instanceof Event) {\n        let target;\n        if (['focus', 'blur', 'focusin', 'focusout'].includes(event.type)) {\n            target = (event as FocusEvent).relatedTarget;\n        } else {\n            target = event.target;\n        }\n\n        if (target instanceof Element && target.shadowRoot) {\n            /**\n             * If event occurs inside shadow DOM and caught outside the shadow dom,\n             * then \"event.target\" points to the shadow dom host, instead of the real target\n             */\n            return event.composedPath()[0];\n        }\n        return target;\n    }\n    // event target is always correct in synthetic events.\n    return event.target;\n}\n\nconst _isFocusEvent = (e: Event | React.SyntheticEvent | FocusEvent): e is FocusEvent =>\n    ['focus', 'blur', 'focusin', 'focusout'].includes(e.type);\n\nfunction _getInteractionTarget(e: Event | React.SyntheticEvent) {\n    if (_isFocusEvent(e)) {\n        return e.relatedTarget;\n    }\n\n    return _getEventTarget(e);\n}\n","export function arrayToMatrix(array: Array<any>, divider: number) {\n    const matrix = [];\n    for (let i = 0; i < array.length / divider; i += 1) {\n        matrix.push(array.slice(i * divider, (i + 1) * divider));\n    }\n    return matrix;\n}\n","import classNames from 'classnames';\n\ninterface ClassDictionary {\n    [id: string]: any;\n}\n\ninterface ClassArray extends Array<ClassValue> {}\n\n/* The ClassValue type is a union type that represents the valid values that can be passed as arguments to the classnames function. It can be one of the following types:\n- string: A string representing a class name.\n- number: A number representing a class name. This is useful when using CSS modules.\n- ClassDictionary: An object whose keys are class names and values are booleans. If the value is true, the corresponding class name will be included in the resulting string, otherwise it will be omitted.\n- ClassArray: An array of values of type ClassValue. This allows you to pass multiple class names or class dictionaries as arguments to classnames.\n- undefined: If undefined is passed as an argument, it will be ignored.\n- null: If null is passed as an argument, it will be ignored.\n- boolean: If a boolean value is passed as an argument, it will be ignored if it is false and included if it is true. */\nexport type ClassValue = string | number | ClassDictionary | ClassArray | undefined | null | boolean;\n\nexport const cx = (...args: ClassValue[]) => {\n    return classNames(...args);\n};\n","export const isClientSide = typeof window !== 'undefined';\n","export function getOffset(element: Element) {\n    const box = element.getBoundingClientRect();\n\n    return {\n        top: box.top + window.pageYOffset - document.documentElement.clientTop,\n        left: box.left + window.pageXOffset - document.documentElement.clientLeft,\n    };\n}\n","import ReactDOM from 'react-dom';\n\nexport class BaseContext<TState = {}> {\n    private handlers: ((state: TState) => void)[] = [];\n\n    init() {\n\n    }\n\n    subscribe(handler: (state: TState) => void) {\n        this.handlers.push(handler);\n    }\n\n    unsubscribe(handler: (state: TState) => void) {\n        this.handlers = this.handlers.filter((h) => h !== handler);\n    }\n\n    update(state: TState) {\n        ReactDOM.unstable_batchedUpdates(() => {\n            this.handlers.forEach((h) => h && h(state));\n        });\n    }\n\n    destroyContext() {\n        this.handlers = [];\n    }\n}\n","import { isClientSide } from '../../helpers/ssr';\nimport { getOffset } from '../../helpers/getOffset';\nimport { getScrollParentOfEventTarget } from '../../helpers/events';\nimport * as React from 'react';\nimport { IDndContext } from '../../types/contexts';\nimport { BaseContext } from '../BaseContext';\n\nconst maxScrollSpeed = 2000; // px/second\n\nexport interface DndContextState {\n    isDragging: boolean;\n    ghostOffsetX?: number;\n    ghostOffsetY?: number;\n    ghostWidth?: number;\n\n    renderGhost?(): React.ReactNode;\n}\n\nexport class DndContext extends BaseContext<DndContextState> implements IDndContext {\n    public isDragging = false;\n    public dragData: any;\n    private scrollZoneSize = 85;\n    private ghostOffsetX: number = 0;\n    private ghostOffsetY: number = 0;\n    private ghostWidth: number = 300;\n    private renderGhostCallback: () => React.ReactNode = null;\n    private lastScrollTime = new Date().getTime();\n    private mouseCoordsService = new MouseCoordsService();\n\n    init() {\n        super.init();\n\n        if (isClientSide) {\n            this.mouseCoordsService.init();\n            window.addEventListener('pointermove', this.windowPointerMoveHandler);\n            window.addEventListener('pointerup', this.windowPointerUpHandler);\n        }\n    }\n\n    public destroyContext() {\n        super.destroyContext();\n        if (isClientSide) {\n            window.removeEventListener('pointermove', this.windowPointerMoveHandler);\n            window.removeEventListener('pointerup', this.windowPointerUpHandler);\n            this.mouseCoordsService.destroy();\n        }\n    }\n\n    public getMouseCoords = (): TMouseCoords => {\n        return this.mouseCoordsService.getCoords();\n    };\n\n    public startDrag(node: HTMLElement, data: {}, renderGhost: () => React.ReactNode) {\n        const offset = getOffset(node);\n        const mouseCoords = this.mouseCoordsService.getCoords();\n\n        this.ghostOffsetX = offset.left - mouseCoords.mouseDownPageX - parseInt(getComputedStyle(node, null).marginLeft, 10);\n        this.ghostOffsetY = offset.top - mouseCoords.mouseDownPageY - parseInt(getComputedStyle(node, null).marginTop, 10);\n        this.ghostWidth = node.offsetWidth + parseInt(getComputedStyle(node, null).marginLeft, 10) + parseInt(getComputedStyle(node, null).marginRight, 10);\n\n        this.dragData = data;\n        this.renderGhostCallback = renderGhost;\n\n        // prepare scroll\n        this.lastScrollTime = new Date().getTime();\n        isClientSide && window.requestAnimationFrame(() => this.scrollWindow());\n\n        this.update({\n            isDragging: true,\n            ghostOffsetX: this.ghostOffsetX,\n            ghostOffsetY: this.ghostOffsetY,\n            ghostWidth: this.ghostWidth,\n            renderGhost: this.renderGhostCallback,\n        });\n        this.isDragging = true;\n\n        // To close dropdowns\n        const ev = document.createEvent('Events');\n        ev.initEvent('dragstart', true, false);\n        document.body.dispatchEvent(ev);\n    }\n\n    public endDrag() {\n        if (!this.isDragging) {\n            return;\n        }\n\n        new Promise<void>((res) => {\n            this.update({ isDragging: false });\n            res();\n        }).then(() => {\n            this.renderGhostCallback = null;\n            this.dragData = null;\n            this.isDragging = false;\n        });\n    }\n\n    xScrollNode: HTMLElement = null;\n    yScrollNode: HTMLElement = null;\n    private windowPointerMoveHandler = (e: PointerEvent) => {\n        if (this.isDragging) {\n            this.xScrollNode = getScrollParentOfEventTarget(e, 'x');\n            this.yScrollNode = getScrollParentOfEventTarget(e, 'y');\n        }\n    };\n\n    private windowPointerUpHandler = () => {\n        this.endDrag();\n    };\n\n    private getScrollStep(nodeSize: number, nodeOffset: number, nodeScroll: number, mousePageCoord: number, mouseDelta: number) {\n        const now = new Date().getTime();\n\n        const startToMouse = mousePageCoord - nodeOffset;\n        const endToMouse = nodeOffset + nodeSize - mousePageCoord;\n        const scrollZoneSize = Math.min(this.scrollZoneSize, nodeSize / 4);\n\n        let scrollDir = 0;\n\n        // left/up\n        if (mouseDelta < 0.5) {\n            scrollDir = -Math.max(0, (scrollZoneSize - startToMouse) / scrollZoneSize);\n        }\n\n        // right/down\n        if (mouseDelta > 0.5) {\n            scrollDir = Math.max(0, (scrollZoneSize - endToMouse) / scrollZoneSize);\n        }\n\n        if (scrollDir !== 0) {\n            const step = ((now - this.lastScrollTime) / 1000) * maxScrollSpeed * scrollDir;\n            return nodeScroll + step;\n        }\n    }\n\n    private scrollWindow() {\n        const now = new Date().getTime();\n        const mouseCoords = this.mouseCoordsService.getCoords();\n\n        if (this.xScrollNode) {\n            const scrollX = this.getScrollStep(\n                this.xScrollNode.offsetWidth,\n                getOffset(this.xScrollNode).left,\n                this.xScrollNode.scrollLeft,\n                mouseCoords.mousePageX,\n                mouseCoords.mouseDxSmooth,\n            );\n\n            if (scrollX !== undefined && scrollX !== 0) {\n                this.xScrollNode.scrollLeft = scrollX;\n            }\n        }\n\n        if (this.yScrollNode) {\n            const scrollY = this.getScrollStep(\n                this.yScrollNode.offsetHeight,\n                getOffset(this.yScrollNode).top,\n                this.yScrollNode.scrollTop,\n                mouseCoords.mousePageY,\n                mouseCoords.mouseDySmooth,\n            );\n\n            if (scrollY !== undefined && scrollY !== 0) {\n                this.yScrollNode.scrollTop = scrollY;\n            }\n        }\n\n        this.lastScrollTime = now;\n\n        if (this.isDragging) {\n            window.requestAnimationFrame(() => this.scrollWindow());\n        }\n    }\n}\n\nexport type TMouseCoords = {\n    mousePageX: number,\n    mousePageY: number,\n    mouseDx: number,\n    mouseDy: number,\n    mouseDxSmooth: number,\n    mouseDySmooth: number,\n    mouseDownPageX: number,\n    mouseDownPageY: number,\n    buttons: number,\n};\n\nclass MouseCoordsService {\n    private _prevMouseCoords: TMouseCoords;\n\n    init = () => {\n        this._prevMouseCoords = {\n            mousePageX: 0,\n            mousePageY: 0,\n            mouseDx: 0,\n            mouseDy: 0,\n            mouseDxSmooth: 0,\n            mouseDySmooth: 0,\n            mouseDownPageX: 0,\n            mouseDownPageY: 0,\n            buttons: 0,\n        };\n        if (isClientSide) {\n            document.addEventListener('pointermove', this.handleMouseCoordsChange);\n        }\n    };\n\n    public destroy() {\n        if (isClientSide) {\n            document.removeEventListener('pointermove', this.handleMouseCoordsChange);\n        }\n    }\n\n    private handleMouseCoordsChange = (e: PointerEvent) => {\n        this._prevMouseCoords = getMouseCoordsFromPointerEvent(e, this._prevMouseCoords);\n    };\n\n    public getCoords = () => {\n        return this._prevMouseCoords;\n    };\n}\n\nfunction getMouseCoordsFromPointerEvent(e: PointerEvent, prevCoords: TMouseCoords): TMouseCoords {\n    const mouseDx = e.pageX - prevCoords.mousePageX;\n    const mouseDy = e.pageY - prevCoords.mousePageY;\n    const mouseDxSmooth = prevCoords.mouseDxSmooth * 0.8 + mouseDx * 0.2;\n    const mouseDySmooth = prevCoords.mouseDySmooth * 0.8 + mouseDy * 0.2;\n    const mousePageX = e.pageX;\n    const mousePageY = e.pageY;\n    const result: TMouseCoords = {\n        mouseDx,\n        mouseDy,\n        mouseDxSmooth,\n        mouseDySmooth,\n        mousePageX,\n        mousePageY,\n        buttons: e.buttons,\n        mouseDownPageX: prevCoords.mouseDownPageX || 0,\n        mouseDownPageY: prevCoords.mouseDownPageY || 0,\n    };\n    if ((prevCoords.buttons === 0 && e.buttons > 0) || e.pointerType === 'touch') {\n        result.mouseDownPageX = mousePageX;\n        result.mouseDownPageY = mousePageY;\n    }\n    return result;\n}\n","import { createContext } from 'react';\nimport { CommonContexts } from '../types';\n\nexport const UuiContext = createContext({} as CommonContexts<any, any>);\n","import * as React from 'react';\nimport { UuiContexts } from '../../types/contexts';\nimport { DndContextState } from './DndContext';\nimport { LayoutLayer } from '../LayoutContext';\nimport { UuiContext } from '../UuiContext';\n\nexport interface DragGhostProps {}\n\ninterface DragGhostState extends DndContextState {\n    pointerX?: number;\n    pointerY?: number;\n}\n\nexport class DragGhost extends React.Component<DragGhostProps, DragGhostState> {\n    static contextType = UuiContext;\n    context: UuiContexts;\n    private layer: LayoutLayer = null;\n    state: DragGhostState = {\n        isDragging: false,\n    };\n\n    onPointerMove = (e: PointerEvent) => {\n        if (this.state.isDragging) {\n            this.setState((state) => ({ ...state, pointerX: e.clientX, pointerY: e.clientY }));\n        }\n    };\n\n    contextUpdateHandler = (state: DndContextState) => {\n        if (state.isDragging && !this.layer) {\n            this.layer = this.context.uuiLayout?.getLayer();\n        } else if (!state.isDragging && this.layer) {\n            this.context.uuiLayout.releaseLayer(this.layer);\n            this.layer = null;\n        }\n        const mouseCoords = this.context.uuiDnD.getMouseCoords();\n        this.setState({ ...state, pointerX: mouseCoords.mousePageX, pointerY: mouseCoords.mousePageY });\n    };\n\n    componentDidMount() {\n        if (!this.context) return;\n        this.context.uuiDnD.subscribe(this.contextUpdateHandler);\n        window.addEventListener('pointermove', this.onPointerMove);\n    }\n\n    componentWillUnmount() {\n        this.layer && this.context.uuiLayout.releaseLayer(this.layer);\n        window.removeEventListener('pointermove', this.onPointerMove);\n        this.context.uuiDnD.unsubscribe(this.contextUpdateHandler);\n    }\n\n    getGhostCoords(pointerX: number, pointerY: number) {\n        return {\n            left: pointerX + this.state.ghostOffsetX,\n            top: pointerY + this.state.ghostOffsetY,\n        };\n    }\n\n    render() {\n        if (!this.state.isDragging || !this.state.renderGhost) {\n            return null;\n        }\n\n        return (\n            <div\n                style={ {\n                    position: 'fixed',\n                    width: this.state.ghostWidth,\n                    left: this.state.pointerX + this.state.ghostOffsetX,\n                    top: this.state.pointerY + this.state.ghostOffsetY,\n                    pointerEvents: 'none',\n                    zIndex: this.layer.zIndex,\n                } }\n            >\n                {this.state.renderGhost()}\n            </div>\n        );\n    }\n}\n","export function getSector(x: number, y: number) {\n    const rads = Math.atan2(y, x); // (-PI, PI)\n    const rotatedRads = rads + Math.PI * 2 + Math.PI / 2; // rotate to make positive and align with clock convention (top is the 0)\n    const sector = Math.floor((rotatedRads / (Math.PI * 2)) * 8) % 8;\n    return sector;\n}\n","import * as React from 'react';\nimport {\n    IDndActor, DropPosition, AcceptDropParams, DndActorRenderParams, DropPositionOptions,\n} from '../../types/dnd';\n\nimport { UuiContexts } from '../../types/contexts';\n\nimport {\n    isEventTargetInsideDraggable,\n    isEventTargetInsideInput,\n    releasePointerCaptureOnEventTarget,\n} from '../../helpers/events';\nimport { getSector } from './helpers';\nimport { uuiDndState, uuiMarkers } from '../../constants';\nimport { UuiContext } from '../UuiContext';\nimport { DndContextState } from './DndContext';\n\nexport interface DndActorProps<TSrcData, TDstData> extends IDndActor<TSrcData, TDstData> {\n    /** Render callback for DragActor content */\n    render(props: DndActorRenderParams): React.ReactNode;\n}\n\nconst DND_START_THRESHOLD = 5;\n\ninterface DndActorState {\n    pointerX: number;\n    pointerY: number;\n    isMouseDown: boolean;\n    isDragging: boolean;\n    isMouseOver: boolean;\n    position?: DropPosition;\n    dndContextState: DndContextState;\n}\n\nconst initialState: DndActorState = {\n    pointerX: 0,\n    pointerY: 0,\n    isMouseDown: false,\n    isDragging: false,\n    isMouseOver: false,\n    position: null,\n    dndContextState: {\n        isDragging: false,\n    },\n};\n\n/**\n * This workaround is needed to make it tree-shakable, but it does not look good.\n * It's better to rewrite it to functional component instead.\n * The key point here is to get rid of any static props (like sectorPositionPriorities, contextType).\n */\n\nexport const DndActor = TREE_SHAKEABLE_INIT();\nfunction TREE_SHAKEABLE_INIT() {\n    return class DndActorComponent<TSrcData = any, TDstData = any> extends React.Component<DndActorProps<TSrcData, TDstData>, DndActorState> {\n        state = initialState;\n        static contextType = UuiContext;\n        public context: UuiContexts;\n        dndRef = React.createRef<HTMLElement>();\n\n        componentDidMount() {\n            this.context?.uuiDnD?.subscribe?.(this.contextUpdateHandler);\n            window.addEventListener('pointerup', this.windowPointerUpHandler);\n            window.addEventListener('pointermove', this.windowPointerMoveHandler);\n        }\n\n        componentWillUnmount() {\n            window.removeEventListener('pointerup', this.windowPointerUpHandler);\n            window.removeEventListener('pointermove', this.windowPointerMoveHandler);\n            this.context.uuiDnD.unsubscribe(this.contextUpdateHandler);\n        }\n\n        contextUpdateHandler = (dndContextState: DndContextState) => {\n            this.setState({ dndContextState });\n        };\n\n        windowPointerUpHandler = () => {\n            if (this.state.isDragging || this.state.isMouseDown) {\n                this.setState(() => initialState);\n                this.context.uuiDnD.endDrag();\n            }\n        };\n\n        windowPointerMoveHandler = (e: MouseEvent) => {\n            if (\n                !this.state.isMouseDown\n                    || e.buttons === 0 // can happen if native drag-n-drop occurs\n                    || this.state.isDragging\n            ) return;\n\n            if (isEventTargetInsideInput(e, this.dndRef.current)) {\n                return;\n            }\n\n            const mouseCoords = this.context.uuiDnD.getMouseCoords();\n            const dist = Math.sqrt(Math.pow(this.state.pointerX - mouseCoords.mousePageX, 2) + Math.pow(this.state.pointerY - mouseCoords.mousePageY, 2));\n\n            if (dist > DND_START_THRESHOLD) {\n                this.context.uuiDnD.startDrag(this.dndRef.current, this.props.srcData, () =>\n                    this.props.render({\n                        isDragGhost: true,\n                        isDraggedOver: false,\n                        isDraggable: false,\n                        isDraggedOut: false,\n                        isDropAccepted: false,\n                        isDndInProgress: true,\n                        eventHandlers: {},\n                        classNames: [uuiDndState.dragGhost],\n                    }));\n\n                this.setState((s) => ({\n                    ...s,\n                    isDragging: true,\n                    isDropAccepted: false /* TBD: fix state when DnD is just started, and drop is accepted by underlying element */,\n                }));\n            }\n        };\n\n        getDropParams(e: React.MouseEvent<HTMLElement>): AcceptDropParams<TSrcData, TDstData> {\n            const {\n                left, top, width, height,\n            } = e.currentTarget.getBoundingClientRect();\n\n            return {\n                srcData: this.context.uuiDnD.dragData,\n                dstData: this.props.dstData,\n                offsetLeft: e.clientX - left,\n                offsetTop: e.clientY - top,\n                targetWidth: width,\n                targetHeight: height,\n            };\n        }\n\n        static sectorPositionPriorities: Record<string, DropPosition[]> = {\n            0: [\n                'top', 'right', 'inside',\n            ],\n            1: [\n                'right', 'top', 'inside',\n            ],\n            2: [\n                'right', 'bottom', 'inside',\n            ],\n            3: [\n                'bottom', 'right', 'inside',\n            ],\n            4: [\n                'bottom', 'left', 'inside',\n            ],\n            5: [\n                'left', 'bottom', 'inside',\n            ],\n            6: [\n                'left', 'top', 'inside',\n            ],\n            7: [\n                'top', 'left', 'inside',\n            ],\n        };\n\n        getPosition(params: AcceptDropParams<TSrcData, TDstData>, options: DropPositionOptions): DropPosition {\n            if (options == null) return null;\n\n            // Compute x/y offsets relative to the center, normalized by element dimensions:\n            // -------------------------------\n            // |(-1, -1)   (0,-1)     (1, -1)|\n            // |                             |\n            // |(-1,  0)   (0, 0)     (1,  0)|\n            // |                             |\n            // |(-1,  1)   (0, 1)     (1,  1)|\n            // -------------------------------\n            const x = (params.offsetLeft / params.targetWidth - 0.5) * 2;\n            const y = (params.offsetTop / params.targetHeight - 0.5) * 2;\n\n            if (options.inside) {\n                const insideBoxLeft = options.left ? -0.5 : -1;\n                const insideBoxRight = options.right ? 0.5 : 1;\n                const insideBoxTop = options.top ? -0.5 : -1;\n                const insideBoxBottom = options.bottom ? 0.5 : 1;\n\n                if (insideBoxLeft < x && x < insideBoxRight && insideBoxTop < y && y < insideBoxBottom) {\n                    return 'inside';\n                }\n            }\n\n            // Compute the sector#. Basically it's clock-wise angle of mouse pointer normalized to [0,7) range\n            //    7 | 0\n            // 6    |    1\n            // -----|------\n            // 5    |    2\n            //    4 | 3\n            const sector = getSector(x, y);\n\n            // Get possible positions, ordered by priority, from the lookup table\n            const optionsByPriority = DndActor.sectorPositionPriorities[sector + ''].filter((o) => options[o]);\n\n            if (optionsByPriority.length > 0) {\n                return optionsByPriority[0];\n            } else {\n                return null;\n            }\n        }\n\n        render() {\n            const params: DndActorRenderParams = {\n                isDraggable: !!this.props.srcData,\n                isDraggedOut: this.state.isDragging,\n                isDraggedOver: this.context.uuiDnD?.isDragging && this.state.isMouseOver,\n                isDropAccepted: this.state.isMouseOver && !!this.state.position,\n                isDragGhost: false,\n                isDndInProgress: this.state.dndContextState.isDragging,\n                dragData: this.state.isMouseOver ? this.context.uuiDnD.dragData : null,\n                eventHandlers: {},\n                position: this.state.isMouseOver ? this.state.position : null,\n                classNames: null,\n                ref: this.dndRef,\n            };\n\n            params.classNames = [\n                params.isDropAccepted && uuiDndState.dropAccepted, params.isDraggedOut && uuiDndState.draggedOut, params.isDraggable && uuiMarkers.draggable,\n            ].filter(Boolean);\n\n            if (!!this.props.srcData) {\n                params.eventHandlers.onPointerDown = (e: React.PointerEvent<any>) => {\n                    if (isEventTargetInsideDraggable(e, e.currentTarget)) {\n                        return;\n                    }\n                    e.persist();\n                    if (e.button === 0) {\n                        this.setState(() => {\n                            const mouseCoords = this.context.uuiDnD.getMouseCoords();\n                            return {\n                                ...initialState,\n                                isMouseDown: true,\n                                pointerX: mouseCoords.mousePageX,\n                                pointerY: mouseCoords.mousePageY,\n                            };\n                        });\n\n                        if (!isEventTargetInsideInput(e, e.currentTarget)) {\n                            // This prevents text selection start\n                            // dnd don't work without it in ff\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    }\n                };\n            }\n\n            if (this.props.canAcceptDrop) {\n                const pointerLeaveHandler = () => {\n                    if (this.context.uuiDnD.isDragging) {\n                        this.setState((s) => ({ ...s, isMouseOver: false, position: null }));\n                    }\n                };\n\n                const pointerMoveHandler = (e: React.PointerEvent<any>) => {\n                    if (this.context.uuiDnD.isDragging) {\n                        if (isEventTargetInsideDraggable(e, e.currentTarget)) {\n                            return pointerLeaveHandler();\n                        }\n\n                        releasePointerCaptureOnEventTarget(e); // allows you to trigger pointer events on other nodes\n\n                        const dropParams = this.getDropParams(e);\n                        const positionOptions = this.props.canAcceptDrop(dropParams);\n                        const position = this.getPosition(dropParams, positionOptions);\n                        this.setState((s) => ({ ...s, isMouseOver: true, position }));\n                    }\n                };\n\n                params.eventHandlers.onTouchStart = (e) => e.preventDefault(); // prevent defaults on ios\n\n                params.eventHandlers.onPointerEnter = pointerMoveHandler;\n                params.eventHandlers.onPointerMove = pointerMoveHandler;\n                params.eventHandlers.onPointerLeave = pointerLeaveHandler;\n            }\n\n            params.eventHandlers.onPointerUp = (e) => {\n                if (this.context.uuiDnD.isDragging) {\n                    if (isEventTargetInsideDraggable(e, e.currentTarget)) {\n                        return;\n                    }\n                    e.preventDefault();\n                    if (!!this.state.position) {\n                        this.props.onDrop && this.props.onDrop({\n                            ...this.getDropParams(e),\n                            position: this.state.position,\n                        });\n                    }\n                    this.context.uuiDnD.endDrag();\n                    this.setState(() => initialState);\n                } else {\n                    // TBD: investigate. Should blur inputs, but doesn't work so far.\n                    // if (this.state.pendingMouseDownTarget) {\n                    //     $(this.state.pendingMouseDownTarget).trigger(\"mousedown\");\n                    //     $(this.state.pendingMouseDownTarget).trigger(\"mouseup\");\n                    //     $(this.state.pendingMouseDownTarget).trigger(\"click\");\n                    //     this.setState(s => ({ ...s, pendingMouseDownTarget: null }));\n                    // }\n                }\n            };\n\n            return this.props.render(params);\n        }\n    };\n}\n","import { BaseContext } from './BaseContext';\nimport { isClientSide } from '../helpers/ssr';\n\nexport interface LayoutLayer {\n    /** ID of the layer */\n    id: number;\n    /** Level of the layer depth */\n    depth: number;\n    /** zIndex of the layer */\n    zIndex: number;\n}\nfunction genUniqueId() {\n    return [Math.random(), Math.random()].reduce((acc, n) => (acc + n.toString(36).substring(2)), '');\n}\n\nfunction getPortalRootById(id: string) {\n    let root = document.getElementById(id);\n    if (!root) {\n        /*\n         * document.getElementById doesn't find elements by ID if they are located in shadow DOM.\n         * so, as a fallback, we try to find shadow host by attribute name like this: [data-<id>]\n         * and after that - try to find by id in the shadow root.\n         */\n        const shadow = document.querySelector(`[data-shadow-host-id=\"${id}\"]`);\n        root = shadow?.shadowRoot?.getElementById(id);\n    }\n    return root;\n}\n\nfunction maxBy<T>(arr: T[], getMax: (item: T) => number) {\n    let maxItem: T;\n    arr.forEach((value) => {\n        if (maxItem === undefined) {\n            maxItem = value;\n        }\n\n        if (getMax(value) > getMax(maxItem)) {\n            maxItem = value;\n        }\n    });\n\n    return maxItem;\n}\n\nexport class LayoutContext extends BaseContext {\n    layerIdCounter = 0;\n    layers: LayoutLayer[] = [];\n\n    private readonly portalRootId: string = genUniqueId();\n\n    public getPortalRoot() {\n        /**\n         * TODO: we should remove this part: document.getElementById('main') || document.getElementById('root')\n         */\n        if (isClientSide) {\n            return getPortalRootById(this.portalRootId) || document.getElementById('main') || document.getElementById('root') || document.body;\n        }\n    }\n\n    public getPortalRootId() {\n        return this.portalRootId;\n    }\n\n    public getLayer(): LayoutLayer {\n        const topLayer = maxBy(this.layers, (l) => l.depth);\n        const depth = topLayer ? topLayer.depth + 1 : 0;\n        const layer = {\n            id: this.layerIdCounter++,\n            depth,\n            zIndex: depth * 100 + 2000,\n        };\n\n        this.layers.push(layer);\n\n        return layer;\n    }\n\n    public releaseLayer(layer: LayoutLayer | number) {\n        let id: number;\n        if (typeof layer === 'number') {\n            id = layer;\n        } else {\n            id = layer.id;\n        }\n        this.layers = this.layers.filter((l) => l.id !== id);\n    }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    function next() {\r\n        while (env.stack.length) {\r\n            var rec = env.stack.pop();\r\n            try {\r\n                var result = rec.dispose && rec.dispose.call(rec.value);\r\n                if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n};\r\n","import { IRouterContext, Link } from '../../types';\n\nexport class StubAdaptedRouter implements IRouterContext {\n    private warningMessage = 'Warning: [RouterContext] there is not Router Adapter provided. StubAdapter is used';\n    throwError() {\n        if (process.env.NODE_ENV !== 'test') {\n            console.error(this.warningMessage);\n        }\n    }\n\n    public getCurrentLink(): Link {\n        this.throwError();\n        if (process.env.NODE_ENV === 'test') {\n            return { pathname: '', query: {} };\n        }\n        return null;\n    }\n\n    public redirect(): void {\n        this.throwError();\n    }\n\n    public transfer(): void {\n        this.throwError();\n    }\n\n    public isActive(): boolean {\n        this.throwError();\n        return false;\n    }\n\n    public createHref(): string {\n        this.throwError();\n        return '';\n    }\n\n    public listen(): () => void {\n        this.throwError();\n        return () => {};\n    }\n\n    public block(): () => void {\n        this.throwError();\n        return () => {};\n    }\n}\n","export const queryToSearch = (query: Record<string, any>): string => {\n    if (!query) return '';\n\n    const params = new URLSearchParams();\n\n    Object.keys(query).forEach((key) => {\n        if (query[key] === undefined) return;\n\n        if (typeof query[key] === 'object') {\n            params.set(key, JSON.stringify(query[key]));\n        } else {\n            params.set(key, query[key]);\n        }\n    });\n\n    return params.toString();\n};\n","export const searchToQuery = (search: string): Record<string, any> => {\n    const query = {} as any;\n    new URLSearchParams(search).forEach((value, key) => {\n        if (!value) return;\n\n        try {\n            query[key] = JSON.parse(decodeURIComponent(value));\n        } catch (e) {\n            query[key] = value;\n        }\n    });\n\n    return query;\n};\n","import { Link } from '../../types/objects';\nimport { IRouterContext } from '../../types/contexts';\nimport { queryToSearch } from '../../helpers/queryToSearch';\nimport { searchToQuery } from '../../helpers/searchToQuery';\n\nexport interface IHistory4 {\n    location: Link;\n    push(link: Link): void;\n    replace(link: Link): void;\n    createHref(link: Link): string;\n    listen(listener: (location: Link) => void): () => void;\n    block(listener: (args: any) => any): () => void;\n}\n\nexport class HistoryAdaptedRouter implements IRouterContext {\n    constructor(private history: IHistory4) {}\n    public getCurrentLink(): Link {\n        return HistoryAdaptedRouter.searchToQuery(this.history.location);\n    }\n\n    public redirect(link: Link): void {\n        this.history.push(HistoryAdaptedRouter.queryToSearch(link));\n    }\n\n    public transfer(link: Link): void {\n        this.history.replace(HistoryAdaptedRouter.queryToSearch(link));\n    }\n\n    public isActive(link: Link): boolean {\n        const current = this.getCurrentLink();\n        return current.pathname === link.pathname;\n    }\n\n    public createHref(link: Link): string {\n        return this.history.createHref(HistoryAdaptedRouter.queryToSearch(link));\n    }\n\n    public listen(listener: (link: Link) => void) {\n        return this.history.listen(listener);\n    }\n\n    public block(listener: (link: Link) => void) {\n        return this.history.block((location) => {\n            listener(location);\n            return false;\n        });\n    }\n\n    private static searchToQuery(link: Link): Link {\n        if (link.query !== undefined) return link;\n\n        return {\n            ...link,\n            query: searchToQuery(link.search),\n        };\n    }\n\n    private static queryToSearch(link: Link): Link {\n        if (!link.query) return link;\n\n        return {\n            ...link,\n            search: queryToSearch(link.query),\n        };\n    }\n}\n","import { IRouterContext, Link } from '../../types';\nimport { queryToSearch } from '../../helpers/queryToSearch';\n\nconst createHref = (location: Link, basePath: string) => {\n    const { pathname, query } = location;\n    const search = new URLSearchParams(query).toString();\n    return `${basePath}${pathname}${search ? '?' + search : ''}`;\n};\n\nconst parseQuery = (link: Link): Link => {\n    const query = {} as any;\n    Object.keys(link.query).forEach((key) => {\n        const value = link.query[key];\n        if (!value) return;\n\n        try {\n            query[key] = JSON.parse(decodeURIComponent(value));\n        } catch (e) {\n            query[key] = value;\n        }\n    });\n\n    return {\n        ...link,\n        query,\n    };\n};\n\n/**\n * Source: https://github.com/vercel/next.js/blob/031cf7009239be5ebccd8f72418adfd2bb4af5c8/packages/next/src/shared/lib/router/router.ts#L657\n * This type is compatible with both versions of Next.js: v13 and v14.\n */\ntype TNext14Router = {\n    pathname: string,\n    basePath: string,\n    query: any,\n    push(...args: any[]): void,\n    replace(...args: any[]): void,\n    events: {\n        on(type: any, handler: (...evts: any[]) => void): void;\n        off(type: any, handler: (...evts: any[]) => void): void;\n        emit(type: any): void;\n    }\n};\n\nexport class NextRouterAdapter implements IRouterContext {\n    private isBlockRun: boolean;\n    private blockedUrl: Link | null;\n    constructor(\n        private router: TNext14Router,\n    ) {\n        this.isBlockRun = false;\n        this.blockedUrl = null;\n    }\n\n    public getCurrentLink(): Link {\n        const parsedLink = parseQuery({\n            pathname: this.router.pathname,\n            query: this.router.query,\n        });\n        return parsedLink;\n    }\n\n    parseLinkWithQuery(link: Link): Link {\n        const result = {\n            ...link,\n            search: queryToSearch(link.query),\n        };\n        delete result.query;\n        return result;\n    }\n\n    public redirect(link: Link): void {\n        this.router.push(this.parseLinkWithQuery(link));\n        if (this.isBlockRun) {\n            this.blockedUrl = link;\n        }\n    }\n\n    public transfer(link: Link): void {\n        this.router.replace(this.parseLinkWithQuery(link));\n        if (this.isBlockRun) {\n            this.blockedUrl = link;\n        }\n    }\n\n    public isActive(link: Link): boolean {\n        const current = this.getCurrentLink();\n        return current.pathname === link.pathname;\n    }\n\n    public createHref(link: Link): string {\n        return createHref(link, this.router.basePath);\n    }\n\n    private handleBeforeHistoryChange = (url: Link, listener: (link: Link) => void) => {\n        listener(url);\n        if (this.isBlockRun && this.blockedUrl) {\n            this.router.events.emit('routeChangeError');\n        }\n    };\n\n    public listen(listener: (link: Link) => void) {\n        const localHandler = (url: Link) => this.handleBeforeHistoryChange(url, listener);\n        this.router.events.on('beforeHistoryChange', localHandler);\n        return () => this.router.events.off('beforeHistoryChange', localHandler);\n    }\n\n    private handleRouterChangeError = (listener: (link: Link) => void) => {\n        listener(this.blockedUrl);\n        throw 'Block history changing';\n    };\n\n    public block(listener: (link: Link) => void) {\n        const localHandler = () => this.handleRouterChangeError(listener);\n        this.router.events.on('routeChangeError', localHandler);\n        this.isBlockRun = true;\n\n        return () => {\n            this.isBlockRun = false;\n            this.blockedUrl = null;\n            this.router.events.off('routeChangeError', localHandler);\n        };\n    }\n}\n","import { IRouterContext, Link } from '../../types';\n\ninterface NavigateOptions {\n    scroll?: boolean;\n}\n\nexport type TNextAppRouter = {\n    push(href: string, options?: NavigateOptions): void;\n    replace(href: string, options?: NavigateOptions): void;\n};\n\nexport type ReadonlySearchParams = URLSearchParams & {\n    append(): void;\n    delete(): void;\n    set(): void;\n    sort(): void;\n};\n\nconst beforeHistoryChangeEvent = 'beforeHistoryChange';\nconst blockNavigationEvent = 'blockNavigation';\n\nexport class NextAppRouterAdapter implements IRouterContext {\n    private isBlockRun: boolean;\n    private pathaname?: string;\n    private searchParams?: ReadonlySearchParams;\n\n    constructor(private router: TNextAppRouter) {\n        this.isBlockRun = false;\n    }\n\n    public updateURLParams(\n        pathname: string,\n        searchParams: ReadonlySearchParams,\n    ): void {\n        this.pathaname = pathname;\n        this.searchParams = searchParams;\n    }\n\n    public getCurrentLink(): Link {\n        return this.pathaname\n            ? parseQuery({\n                pathname: this.pathaname,\n                query: paramsToQuery(this.searchParams),\n            })\n            : {\n                pathname: '',\n                query: {},\n            };\n    }\n\n    public redirect(link: Link): void {\n        document.dispatchEvent(createBeforeHistoryEvent());\n\n        if (this.isBlockRun) {\n            document.dispatchEvent(createBlockNavigationEvent(link));\n        } else {\n            const search = link.search ? '?' + link.search : '';\n            this.router.push(link.pathname + search);\n        }\n    }\n\n    public transfer(link: Link): void {\n        document.dispatchEvent(createBeforeHistoryEvent());\n\n        if (this.isBlockRun) {\n            document.dispatchEvent(createBlockNavigationEvent(link));\n        } else {\n            const search = link.search ? '?' + link.search : '';\n            this.router.replace(link.pathname + search);\n        }\n    }\n\n    public isActive(link: Link): boolean {\n        const current = this.getCurrentLink();\n        return current.pathname === link.pathname;\n    }\n\n    // See https://nextjs.org/docs/app/api-reference/next-config-js/basePath\n    // https://nextjs.org/docs/pages/building-your-application/configuring/environment-variables#bundling-environment-variables-for-the-browser\n    public createHref(link: Link): string {\n        return createHref(\n            link,\n            process.env.NEXT_PUBLIC_BASE_PATH || '',\n        );\n    }\n\n    public listen(listener: (link: Link) => void) {\n        const onBeforeHistoryChange = (event: Event) => {\n            listener((event as any).detail.link);\n        };\n\n        document.addEventListener(\n            beforeHistoryChangeEvent,\n            onBeforeHistoryChange,\n        );\n        return () => {\n            document.removeEventListener(\n                beforeHistoryChangeEvent,\n                onBeforeHistoryChange,\n            );\n        };\n    }\n\n    // adapter state might be invalid in potential edge case like\n    // unblocking one form shouldn't unblock another one\n    public block(listener: (link: Link) => void) {\n        const onBlockNavigation = (event: Event) => {\n            const payload = (event as any).detail;\n            listener(payload.link);\n        };\n\n        this.isBlockRun = true;\n        document.addEventListener(blockNavigationEvent, onBlockNavigation);\n\n        return () => {\n            this.isBlockRun = false;\n            document.removeEventListener(\n                blockNavigationEvent,\n                onBlockNavigation,\n            );\n        };\n    }\n}\n\nconst createBeforeHistoryEvent = () =>\n    new CustomEvent(beforeHistoryChangeEvent, {\n        detail: {},\n    });\n\nconst createBlockNavigationEvent = (link: Link) =>\n    new CustomEvent(blockNavigationEvent, {\n        detail: { link },\n    });\n\nconst createHref = (location: Link, basePath: string) => {\n    const { pathname, query } = location;\n    const search = new URLSearchParams(query).toString();\n    return `${basePath}${pathname}${search ? '?' + search : ''}`;\n};\n\nconst parseQuery = (link: Link): Link => {\n    const query = {} as any;\n    Object.keys(link.query).forEach((key) => {\n        const value = link.query[key];\n        if (!value) return;\n\n        try {\n            query[key] = JSON.parse(decodeURIComponent(value));\n        } catch (e) {\n            query[key] = value;\n        }\n    });\n\n    return {\n        ...link,\n        query,\n    };\n};\n\nconst paramsToQuery = (params?: ReadonlySearchParams) => {\n    return params\n        ? [...params.entries()].reduce<Record<string, string>>(\n            (acc, [key, value]) => {\n                acc[key] = value;\n                return acc;\n            },\n            {},\n        )\n        : {};\n};\n","/**\n * From: react-router version 6.14.0\n *\n * The type definition of the IRouter6 is not complete (It's OK as long as we only use a subset of its API)\n *\n * NOTE: Complete definitions of the router is located in @remix-run/router:\n * https://github.com/remix-run/react-router/blob/main/packages/router/router.ts#L57\n */\nexport type IRouter6 = {\n    state: RouterState;\n    navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n    navigate(to: number): Promise<void>;\n    getBlocker: (key: string, fn: BlockerFunction) => unknown;\n    subscribe: (fn: (state: RouterState) => void) => () => void;\n    deleteBlocker: (key: string) => void;\n    createHref(location: Location | URL): string;\n};\nexport type RouterState = {\n    location: Location;\n    blockers: Map<string, unknown>;\n    historyAction: Action;\n};\nexport type BlockerFunction = (args: { nextLocation: Location, historyAction: Action }) => boolean;\nexport interface Location extends Path {\n    state: any;\n    key: string;\n}\nexport type To = string | Partial<Path>;\nexport type Path = {\n    pathname: string;\n    search: string;\n    hash: string;\n};\nexport enum Action {\n    Pop = 'POP',\n    Push = 'PUSH',\n    Replace = 'REPLACE'\n}\ntype RouterNavigateOptions = {\n    replace?: boolean;\n    state?: any;\n};\n","import { IRouterContext } from '../../types/contexts';\nimport { Link } from '../../types/objects';\nimport { queryToSearch } from '../../helpers/queryToSearch';\nimport { searchToQuery } from '../../helpers/searchToQuery';\nimport { Action, BlockerFunction, IRouter6, Location, To } from './interfaces/IRouter6';\n\nexport type { IRouter6 };\n\ntype History4Action = 'PUSH' | 'POP' | 'REPLACE';\nfunction mapRouter6ActionToHistory4Action(src: Action): History4Action {\n    if (src === Action.Pop) {\n        return 'POP';\n    } else if (src === Action.Push) {\n        return 'PUSH';\n    }\n    return 'REPLACE';\n}\n\n/**\n * Adds exactly 1 beforeunload event. It is no-op is such event is already added.\n * It's needed to make react-router 6 compatible with \"history.block\".\n */\nexport function getBeforeUnloadSingletone() {\n    const BeforeUnloadEventType = 'beforeunload';\n    let _unblockFn: () => void;\n\n    return {\n        ensureBlock: () => {\n            if (_unblockFn) {\n                return;\n            }\n            function promptBeforeUnload(event: BeforeUnloadEvent) {\n                // According to the specification, to show the confirmation dialog an event handler should call preventDefault() on the event.\n                event.preventDefault();\n                event.returnValue = '';\n            }\n            window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n            _unblockFn = function unblockFn() {\n                window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n            };\n        },\n        unblock: () => {\n            if (_unblockFn) {\n                _unblockFn();\n                _unblockFn = undefined;\n            }\n        },\n    };\n}\n\nexport function getRouter6BlockFn(router: IRouter6) {\n    let blockerKeyIndex = 0;\n    // uui- prefix looks sufficient so that we don't interfere with any internal blockers of router 6.\n    const nextBlockerKey = () => `uui-${++blockerKeyIndex}`;\n    const beforeUnloadSingletone = getBeforeUnloadSingletone();\n\n    return function router6BlockFn(blockerFunction: (location: Location, action: History4Action) => void) {\n        const _blockerFn: BlockerFunction = (params) => {\n            blockerFunction(params.nextLocation, mapRouter6ActionToHistory4Action(params.historyAction));\n            return true;\n            // true means - block navigation.\n            // we want to be compatible with the history 5 behavior for \"block\" as much as possible.\n            // I.e.: keep navigation blocked until unblock function is explicitly invoked.\n            // https://github.com/remix-run/history/blob/dev/docs/blocking-transitions.md\n        };\n        const key = nextBlockerKey();\n        router.getBlocker(key, _blockerFn);\n        beforeUnloadSingletone.ensureBlock();\n        return function unblock() {\n            router.deleteBlocker(key);\n            if (router.state.blockers.size === 0) {\n                // keep this singletone as long as there are any blockers\n                beforeUnloadSingletone.unblock();\n            }\n        };\n    };\n}\n\nfunction locationToLink(loc: Location): Link {\n    return {\n        ...loc,\n        query: searchToQuery(loc.search),\n    };\n}\nconst withFallback = <T>(v: T, fallback: string = '') => typeof v !== 'undefined' ? v : fallback;\nfunction linkToRouter6Dest(link: Link): { to: To, state?: any } {\n    return {\n        to: {\n            hash: withFallback(link.hash),\n            search: queryToSearch(link.query) || link.search,\n            pathname: withFallback(link.pathname),\n        },\n        state: link.state,\n    };\n}\n\nfunction linkToLocation(link: Link): Location {\n    return {\n        hash: withFallback(link.hash),\n        search: queryToSearch(link.query),\n        pathname: withFallback(link.pathname),\n        key: withFallback(link.key),\n        state: link.state,\n    };\n}\n\n/**\n *\n * NOTE: Next methods/properties of the router are marked as PRIVATE - DO NOT USE in the https://github.com/remix-run/react-router/blob/main/packages/router/router.ts#L57\n *  - state\n *  - getBlocker\n *  - subscribe\n *  - deleteBlocker\n *  - createHref\n * So we should be extra careful if decide to use another version of the react-router.\n * Though, it's OK to use such API, because there are no alternatives yet (see https://github.com/remix-run/react-router/issues/9422)\n *\n * IMPORTANT: As of now, it was tested only using react-router 6.14.0\n */\nexport class Router6AdaptedRouter implements IRouterContext {\n    constructor(private router6: IRouter6) {}\n\n    public getCurrentLink(): Link {\n        return locationToLink(this.router6.state.location);\n    }\n\n    public redirect(link: Link | string): void {\n        // NOTE: navigate is async in the router 6\n        if (typeof link === 'string') {\n            this.router6.navigate(link);\n        } else {\n            const { to, state } = linkToRouter6Dest(link);\n            this.router6.navigate(to, { state });\n        }\n    }\n\n    public transfer(link: Link): void {\n        // NOTE: it's async in the router 6\n        const { to, state } = linkToRouter6Dest(link);\n        this.router6.navigate(to, { state, replace: true });\n    }\n\n    public isActive(link: Link): boolean {\n        const current = this.getCurrentLink();\n        return current.pathname === link.pathname;\n    }\n\n    public createHref(link: Link): string {\n        return this.router6.createHref(linkToLocation(link));\n    }\n\n    public listen(listener: (link: Link) => void) {\n        return this.router6.subscribe((rState) => {\n            listener(rState.location);\n        });\n    }\n\n    public block: (listener: (link: Link) => void) => () => void = getRouter6BlockFn(this.router6);\n}\n","import { IAnalyticsListener } from '../../types/contexts';\nimport { AnalyticsEvent } from '../../types/objects';\n\nexport class GAListener implements IAnalyticsListener {\n    public gaCode: string;\n    constructor(gaCode: string) {\n        this.gaCode = gaCode;\n\n        this.init();\n    }\n\n    public init() {\n        this.addGaScript();\n        this.sendToGA('js', new Date());\n        this.sendPageView(window.location.pathname);\n    }\n\n    private addGaScript() {\n        (window as any).dataLayer = (window as any).dataLayer || [];\n\n        const gtagScript = document.createElement('script');\n        gtagScript.src = `https://www.googletagmanager.com/gtag/js?id=${this.gaCode}`;\n        gtagScript.async = true;\n        document.head.appendChild(gtagScript);\n    }\n\n    public sendEvent(event: AnalyticsEvent, parameters: Omit<AnalyticsEvent, 'name'>, eventType?: string) {\n        switch (eventType) {\n            case 'pageView':\n                this.sendPageView(event.path);\n                break;\n\n            default:\n                this.sendToGA('event', event.name, parameters);\n                break;\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private sendToGA(...args: any[]) {\n        (window as any).dataLayer.push(arguments); // For GA it's important to pass exactly arguments\n    }\n\n    private sendPageView(path: string) {\n        this.sendToGA('config', this.gaCode, { page_path: path, anonymize_ip: true });\n    }\n}\n","import { BaseContext } from './BaseContext';\nimport { IRouterContext, IAnalyticsListener, IAnalyticsContext } from '../types/contexts';\nimport { AnalyticsEvent, Link } from '../types/objects';\nimport { isClientSide } from '../helpers/ssr';\n\ninterface AnalyticsContextOptions {\n    /** Instance of UUI router context */\n    router: IRouterContext;\n}\n\nexport class AnalyticsContext extends BaseContext implements IAnalyticsContext {\n    private removeRouteListener: () => void;\n    private currentLocation: string;\n    private readonly router: IRouterContext;\n    public listeners: IAnalyticsListener[] = [];\n    constructor(options: AnalyticsContextOptions) {\n        super();\n        this.router = options.router;\n    }\n\n    public destroyContext() {\n        super.destroyContext();\n        if (isClientSide) {\n            this.removeRouteListener?.();\n        }\n    }\n\n    init() {\n        super.init();\n\n        if (isClientSide) {\n            this.currentLocation = window.location?.pathname;\n            this.removeRouteListener = this.router?.listen(this.handleChangeRoute);\n        }\n    }\n\n    public sendEvent(event: AnalyticsEvent | null | undefined, eventType: 'event' | 'pageView' | 'apiTiming' = 'event') {\n        if (!event) return;\n        if (this.listeners.length) this.listeners.forEach((listener) => listener.sendEvent(event, this.getParameters(event), eventType));\n    }\n\n    private handleChangeRoute = (location: Link) => {\n        if (this.currentLocation !== location?.pathname) {\n            this.currentLocation = location?.pathname;\n            this.sendEvent({ path: location?.pathname, name: 'pageView' }, 'pageView');\n        }\n    };\n\n    public addListener(listener: IAnalyticsListener) {\n        this.listeners.push(listener);\n    }\n\n    private getParameters(options: AnalyticsEvent) {\n        const parameters: any = { ...options };\n        delete parameters.name;\n        return parameters;\n    }\n}\n","export function getCookie(name: string) {\n    const matches = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)'));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\n// options - (expires, path, domain, secure)\nexport function setCookie(name: string, value: string, options?: any) {\n    options = options || {};\n\n    let expires = options.expires;\n\n    if (typeof expires == 'number' && expires) {\n        const d = new Date();\n        d.setTime(d.getTime() + expires * 1000);\n        options.expires = d;\n        expires = d;\n    }\n    if (expires && expires.toUTCString) {\n        options.expires = expires.toUTCString();\n    }\n\n    value = encodeURIComponent(value);\n\n    let updatedCookie = name + '=' + value;\n\n    for (const propName in options) {\n        updatedCookie += '; ' + propName;\n        const propValue = options[propName];\n        if (propValue !== true) {\n            updatedCookie += '=' + propValue;\n        }\n    }\n\n    document.cookie = updatedCookie;\n}\n\nexport function deleteCookie(name: string) {\n    setCookie(name, '', { expires: -1 });\n}\n","import { BaseContext } from './BaseContext';\nimport { AnalyticsContext } from './AnalyticsContext';\nimport {\n    IApiContext, ApiStatus, ApiRecoveryReason, ApiCallInfo, IProcessRequest,\n} from '../types';\nimport { isClientSide } from '../helpers/ssr';\nimport { getCookie } from '../helpers/cookie';\n\ninterface ApiCall extends ApiCallInfo {\n    /** Request promise resolve callback */\n    resolve: (value?: any) => any;\n    /** Request promise reject callback */\n    reject: (value?: any) => any;\n}\n\nexport class ApiCallError extends Error {\n    constructor(public call: ApiCall) {\n        super('ApiContext: API call failed');\n    }\n}\n\nexport interface FileUploadOptions {\n    /** Called during the file uploading, used to track upload progress */\n    onProgress?: (progress: number) => any;\n    /** Callback to receive the instance of xhr. Can be used to abort the request. */\n    getXHR?: (xhr: XMLHttpRequest) => any;\n}\n\nexport interface FileUploadResponse {\n    /** ID of the file */\n    id: number;\n    /** Name of the file */\n    name: string;\n    /** File size */\n    size: number;\n    /** Path to the file source */\n    path?: string;\n    /** Type of file representation. Used for UUI SlateRTE file displaying. */\n    type?: BlockTypes;\n    /** Extension of the file */\n    extension?: string;\n    /** Upload error  */\n    error?: {\n        /** If true, indicates about error while file uploading */\n        isError: boolean;\n        /** Error message */\n        message?: string;\n    };\n}\n\nexport type BlockTypes = 'attachment' | 'iframe' | 'image';\nexport interface ApiContextProps {\n    /** Url to the relogin page. Used to open new browser window by this path, in case of auth lost error.\n     * Opened by this path page, should process authentication and then post 'authSuccess' cross-window message to the opener, to recover failed requests.\n     * @default '/auth/login'\n     * */\n    apiReloginPath?: string;\n    /** Url to the api, which ApiContext will start pinging in case of 'connection lost', until it gets 200 status. Then it will retry failed requests.\n     * @default '/auth/ping'\n     * */\n    apiPingPath?: string;\n    /** Url to the server api under which all requests will be processed. Usefully for cases, when all api located by some specific url, which is not much app url.\n     * @default ''\n     * */\n    apiServerUrl?: string;\n\n    /**\n     * Allows to replace fetch implementation, for adding auth headers, mocking for testing, etc.\n     * By default, standard fetch will be used.\n     */\n    fetch?: typeof fetch;\n}\n\nexport class ApiContext extends BaseContext implements IApiContext {\n    private queue: ApiCall[] = [];\n    private isRunScheduled = false;\n    public status: ApiStatus = 'idle';\n    public recoveryReason: ApiRecoveryReason | null = null;\n    public apiReloginPath: string;\n    constructor(private props: ApiContextProps, private analyticsCtx?: AnalyticsContext) {\n        super();\n        this.apiReloginPath = this.props.apiReloginPath ?? '/auth/login';\n        this.props.apiPingPath = this.props.apiPingPath ?? '/auth/ping';\n        this.props.apiServerUrl = this.props.apiServerUrl ?? '';\n    }\n\n    init() {\n        super.init();\n\n        if (isClientSide) {\n            // If we opened another window to relogin and check auth - close this window and resume\n            window.addEventListener('message', this.handleWindowMessage);\n            window.addEventListener('storage', this.handleStorageUpdate);\n        }\n    }\n\n    private handleWindowMessage = (e: MessageEvent) => {\n        if (e.data === 'authSuccess') {\n            this.handleSuccessAuthRecovery();\n            (e.source as any).close();\n        }\n    };\n\n    private handleStorageUpdate = () => {\n        const isRecoverySuccess = window.localStorage.getItem('uui-auth-recovery-success');\n        if (isRecoverySuccess === 'true') {\n            this.handleSuccessAuthRecovery();\n            window.localStorage.removeItem('uui-auth-recovery-success');\n        }\n    };\n\n    private handleSuccessAuthRecovery = () => {\n        if (this.status === 'recovery' && this.recoveryReason === 'auth-lost') {\n            this.setStatus('running');\n            this.runQueue();\n            this.update({});\n        }\n    };\n\n    public destroyContext() {\n        super.destroyContext();\n        if (isClientSide) {\n            window.removeEventListener('message', this.handleWindowMessage);\n        }\n    }\n\n    public getActiveCalls(): ApiCallInfo[] {\n        return this.queue;\n    }\n\n    public reset() {\n        if (this.status === 'error' || this.status === 'recovery') {\n            this.queue = [];\n            this.status = 'running';\n        }\n    }\n\n    private setStatus(status: ApiStatus, recoveryReason: ApiRecoveryReason = null) {\n        this.status = status;\n        this.recoveryReason = recoveryReason;\n        this.update({});\n    }\n\n    private handleApiError(call: ApiCall, reason?: ApiRecoveryReason) {\n        const error = new ApiCallError(call);\n\n        if (call.options?.errorHandling === 'manual' && !(reason === 'auth-lost' || reason === 'connection-lost')) {\n            this.removeFromQueue(call);\n            call.reject(error);\n            return;\n        }\n\n        if (reason) {\n            call.status = 'scheduled';\n            if (this.status === 'recovery') {\n                return;\n            }\n            this.setStatus('recovery', reason);\n            if (reason === 'auth-lost') {\n                window.open(this.apiReloginPath);\n            } else {\n                this.recoverConnection();\n            }\n        } else {\n            call.status = 'error';\n            this.setStatus('error');\n            call.reject(error);\n        }\n    }\n\n    private startCall(call: ApiCall) {\n        const fetchOptions = call.options?.fetchOptions;\n\n        const headers = new Headers(fetchOptions?.headers);\n\n        if (!headers.has('Content-Type')) {\n            headers.append('Content-Type', 'application/json');\n        }\n\n        const csrfCookie = isClientSide && getCookie('CSRF-TOKEN');\n\n        if (csrfCookie) {\n            headers.append('X-CSRF-Token', csrfCookie);\n        }\n\n        call.attemptsCount += 1;\n        call.status = 'running';\n        call.startedAt = new Date();\n\n        const fetcher = this.props.fetch || fetch;\n\n        fetcher(\n            this.props.apiServerUrl + call.url,\n            {\n                method: call.method,\n                body: call.requestData && JSON.stringify(call.requestData),\n                credentials: 'include',\n                ...fetchOptions,\n                headers,\n            },\n        )\n            .then((response) => {\n                this.handleResponse(call, response);\n            })\n            .catch((e: Error) => {\n                if (e?.name === 'AbortError') {\n                    this.removeFromQueue(call);\n                    return;\n                }\n                if (call.attemptsCount < 2) {\n                    this.handleApiError(call, 'connection-lost');\n                } else {\n                    this.handleApiError(call);\n                }\n            });\n    }\n\n    private handleResponse(call: ApiCall, response: Response) {\n        call.finishedAt = new Date();\n        call.httpStatus = response.status;\n        if (response.ok) {\n            this.analyticsCtx?.sendEvent(\n                {\n                    name: 'timing_complete',\n                    parameters: {\n                        value: call.finishedAt.getTime() - call.startedAt.getTime(),\n                        name: call.name,\n                        event_category: window.location.pathname,\n                    },\n                },\n                'apiTiming',\n            );\n\n            if (response.status === 204) {\n                return this.resolveCall(call, null);\n            }\n\n            call.options.parseResponse(response)\n                .then((result) => {\n                    call.responseData = result;\n                    this.resolveCall(call, result);\n                })\n                .catch((e) => {\n                    /* Problem with response JSON parsing */\n                    call.status = 'error';\n                    this.setStatus('error');\n                    call.reject(e);\n                });\n        } else if (\n            /* Network and server-related problems. We'll ping the server and then retry the call in this case. */\n            (response.status === 408\n                || /* Request Timeout */ response.status === 420\n                || /* Enhance Your Calm */ response.status === 429\n                || /* Too Many Requests */ response.status === 502\n                || /* Bad Gateway */ response.status === 503\n                || /* Service Unavailable */ response.status === 504)\n            && /* Gateway Timeout */ call.attemptsCount < 2 /*\n                    There can be cases, when server returns some of these states, while /ping works.\n                    To not enter infinite loop in this case, we limit number of retries.\n                */\n        ) {\n            let reason: ApiRecoveryReason = 'connection-lost';\n            if (response.status === 420 || response.status === 429) {\n                reason = 'server-overload';\n            }\n            if (response.status === 503) {\n                reason = 'maintenance';\n            }\n\n            this.handleApiError(call, reason);\n        } else if (response.status === 401) {\n            /* Authentication cookies invalidated */ this.handleApiError(call, 'auth-lost');\n        } else {\n            // Try to parse response\n            call.options.parseResponse(response)\n                .catch(() => null) // Ignore parsing errors\n                .then((result) => {\n                    call.responseData = result;\n                    this.handleApiError(call);\n                });\n        }\n    }\n\n    private removeFromQueue(call: ApiCall) {\n        this.queue = this.queue.filter((c) => c !== call);\n        if (this.status === 'error' && !this.queue.some((c) => c.status === 'error')) {\n            this.setStatus('idle');\n            this.runQueue();\n        }\n    }\n\n    private resolveCall(call: ApiCall, result: any) {\n        this.removeFromQueue(call);\n        call.resolve(result);\n    }\n\n    private runQueue() {\n        this.isRunScheduled = false;\n        if (this.status === 'idle' || this.status === 'running') {\n            this.queue.filter((c) => c.status === 'scheduled').forEach((c) => this.startCall(c));\n        }\n    }\n\n    private recoverConnection() {\n        const retry = () => setTimeout(() => this.recoverConnection(), 2000);\n        const fetcher = this.props.fetch || fetch;\n        fetcher(this.props.apiPingPath, {\n            method: 'GET',\n            credentials: 'include',\n        })\n            .then((response) => {\n                if (response.ok) {\n                    this.setStatus('running');\n                    this.runQueue();\n                    this.update({});\n                } else {\n                    retry();\n                }\n            })\n            .catch(retry);\n    }\n\n    private scheduleRun() {\n        if (!this.isRunScheduled) {\n            setTimeout(() => this.runQueue(), 0);\n            this.isRunScheduled = false;\n        }\n    }\n\n    private defaultParseResponse = (res: Response) => {\n        return res.json();\n    };\n\n    public processRequest: IProcessRequest = (url, method, data, options) => {\n        let name = url;\n        if (data && data.operationName) {\n            name += ' ' + data.operationName;\n        }\n\n        options = {\n            errorHandling: 'page',\n            parseResponse: this.defaultParseResponse,\n            ...options,\n        };\n\n        return new Promise((resolve, reject) => {\n            const call: ApiCall = {\n                name,\n                url,\n                method,\n                requestData: data,\n                options,\n                resolve,\n                reject,\n                status: 'scheduled',\n                attemptsCount: 0,\n                dismissError: () => {\n                    this.removeFromQueue(call);\n                    this.update({});\n                },\n            };\n            this.queue.push(call);\n            this.scheduleRun();\n        });\n    };\n\n    public uploadFile(url: string, file: File, options?: FileUploadOptions) {\n        const trackProgress = (event: any) => {\n            const progress = +((event.loaded / event.total) * 100).toFixed(2);\n            options.onProgress && options.onProgress(progress);\n        };\n\n        return new Promise<FileUploadResponse>((resolve, reject) => {\n            const formData = new FormData();\n            formData.append('file', file);\n\n            const xhr = new XMLHttpRequest();\n            xhr.open('POST', url, true);\n\n            const csrfCookie = getCookie('CSRF-TOKEN');\n            if (csrfCookie) {\n                xhr.setRequestHeader('X-CSRF-Token', csrfCookie);\n            }\n\n            xhr.withCredentials = true;\n\n            const removeAllListeners = () => {\n                xhr.upload.removeEventListener('progress', trackProgress);\n                xhr.removeEventListener('abort', removeAllListeners);\n            };\n\n            if (options.onProgress) {\n                xhr.upload.addEventListener('progress', trackProgress, false);\n            }\n\n            if (options.getXHR) {\n                xhr.addEventListener('abort', removeAllListeners, false);\n                options.getXHR(xhr);\n            }\n\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState !== 4) return;\n                let response;\n                try {\n                    response = JSON.parse(xhr.response);\n                } catch {\n                    reject({ error: { isError: true, message: 'File upload error' } });\n                }\n                if (!new RegExp('^2[0-9][0-9]').test(xhr.status.toString())) {\n                    reject({ error: { isError: true, message: response?.error?.message } });\n                }\n\n                removeAllListeners();\n                resolve(response);\n            };\n            xhr.send(formData);\n        });\n    }\n}\n","import { BaseContext } from './BaseContext';\nimport { AnalyticsContext } from './AnalyticsContext';\nimport { IErrorContext } from '../types';\nimport { ModalContext } from './ModalContext';\n\nexport class ErrorContext extends BaseContext implements IErrorContext {\n    constructor(private analyticsCtx: AnalyticsContext, private modalCtx: ModalContext) {\n        super();\n        this.analyticsCtx = analyticsCtx;\n    }\n\n    public currentError: Error = null;\n    public errorCallback: Function = null;\n    public reportError(error: Error) {\n        this.currentError = error;\n\n        this.errorCallback && this.errorCallback(error);\n        this.update({});\n    }\n\n    public discardError() {\n        this.currentError = null;\n    }\n\n    public recover() {\n        this.discardError();\n        this.update({});\n    }\n\n    public onError(callback: Function) {\n        this.errorCallback = callback;\n    }\n}\n\nexport interface ErrorPageInfo {\n    /** Error status code */\n    status?: number;\n    /** Title of error page */\n    title?: React.ReactNode;\n    /** Subtitle of error page */\n    subtitle?: React.ReactNode;\n    /** Url of error image to display on error page */\n    imageUrl?: string;\n    /** Url of error image to display on error page in case of mobile layout (app width < 720px) */\n    mobileImageUrl?: string;\n}\n\nexport class UuiError extends Error {\n    constructor(public info: ErrorPageInfo) {\n        super('UUI Error');\n        this.name = 'UuiError';\n        // Set the prototype explicitly.\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, UuiError.prototype);\n    }\n}\n","import { BaseContext } from './BaseContext';\nimport { Link } from '../types/objects';\nimport { IRouterContext } from '../types/contexts';\nimport { isClientSide } from '../helpers/ssr';\n\nexport class Lock {\n    constructor(public tryRelease?: () => Promise<void>) {}\n}\n\nexport class LockContext extends BaseContext {\n    private currentLock: Lock | null;\n    private unblock: any;\n    constructor(private router: IRouterContext) {\n        super();\n    }\n\n    public destroyContext() {\n        this.clearLock();\n        super.destroyContext();\n    }\n\n    public acquire(tryRelease?: () => Promise<any>): Promise<Lock | null> {\n        if (this.currentLock) {\n            return this.tryRelease().then(() => this.acquire(tryRelease));\n        } else {\n            const lock = new Lock(tryRelease);\n            if (isClientSide) {\n                this.unblock = this.router.block((location) => {\n                    this.routerWillLeave(location);\n                });\n                this.currentLock = lock;\n            } else {\n                console.warn(\"An attempt to acquire lock in server side won't have any effect.\");\n            }\n            return Promise.resolve(lock);\n        }\n    }\n\n    public getCurrentLock(): Lock | null {\n        return this.currentLock;\n    }\n\n    public tryRelease(): Promise<any> {\n        if (this.currentLock) {\n            if (this.currentLock.tryRelease) {\n                return this.currentLock.tryRelease().then(() => {\n                    this.clearLock();\n                });\n            } else {\n                this.clearLock();\n                return Promise.resolve();\n            }\n        } else {\n            return Promise.reject('Current lock is null');\n        }\n    }\n\n    public async withLock<T = any>(action: () => Promise<T>): Promise<T> {\n        await this.acquire(() => Promise.reject());\n        return action().finally(() => this.clearLock());\n    }\n\n    public routerWillLeave(nextLocation: Link) {\n        if (this.currentLock) {\n            this.tryRelease()\n                .then(() => {\n                    this.router.redirect(nextLocation);\n                })\n                .catch(() => {});\n        }\n    }\n\n    private clearLock() {\n        this.currentLock = null;\n        this.unblock?.();\n    }\n\n    public release(lock: Lock) {\n        if (lock && this.currentLock === lock) {\n            this.clearLock();\n        } else {\n            throw new Error(\"Attempting to release a lock, which wasn't acquired\");\n        }\n    }\n}\n","import { BaseContext } from './BaseContext';\nimport { LayoutContext } from './LayoutContext';\nimport * as React from 'react';\nimport { IModalContext } from '../types/contexts';\nimport { IModal } from '../types/props';\n\nexport interface ModalOperation {\n    /** Modal component that should be rendered */\n    component?: React.ComponentType<any>;\n    /** Modal component props */\n    props: IModal<any>;\n}\n\nlet idCounter = 0;\n\nexport class ModalOperationCancelled {}\n\nexport class ModalContext extends BaseContext implements IModalContext {\n    private operations: ModalOperation[] = [];\n    constructor(private layoutCtx: LayoutContext) {\n        super();\n    }\n\n    public destroyContext() {\n        super.destroyContext();\n        this.closeAll();\n    }\n\n    public show<TResult, TParameters = {}>(render: (props: IModal<TResult, TParameters>) => React.ReactElement<any>, parameters?: TParameters): Promise<TResult> {\n        const ModalAdapter = class extends React.Component<IModal<TResult, TParameters>> {\n            render() {\n                return render(this.props);\n            }\n        };\n\n        return this.showModal(ModalAdapter, parameters);\n    }\n\n    public closeAll() {\n        this.operations = [];\n        this.update({});\n    }\n\n    private showModal<TParameters, TResult>(component: React.ComponentType<IModal<TResult, TParameters>>, parameters?: TParameters): Promise<TResult> {\n        const layer = this.layoutCtx.getLayer();\n        return new Promise((resolve, reject) => {\n            const modalProps: IModal<TResult, TParameters> = {\n                success: (r) => {\n                    this.operations.pop();\n                    this.layoutCtx.releaseLayer(layer);\n                    resolve(r);\n                    this.update({});\n                },\n                abort: (r) => {\n                    this.operations.pop();\n                    this.layoutCtx.releaseLayer(layer);\n                    reject(r ? r : new ModalOperationCancelled());\n                    this.update({});\n                },\n                zIndex: layer.zIndex,\n                depth: layer.depth,\n                isActive: true,\n                key: idCounter++ + '',\n                parameters,\n            };\n\n            const operation: ModalOperation = { component, props: modalProps };\n\n            this.operations.push(operation);\n\n            this.update({});\n        });\n    }\n\n    public isModalOperationActive() {\n        return this.operations.length > 0;\n    }\n\n    public getOperations(): ModalOperation[] {\n        return this.operations.map((op, n) => ({\n            ...op, props: { ...op.props, isActive: n === this.operations.length - 1 },\n        }));\n    }\n}\n","import * as React from 'react';\nimport { BaseContext } from './BaseContext';\nimport { NotificationParams, INotificationContext } from '../types/contexts';\nimport { LayoutContext } from './LayoutContext';\nimport { INotification } from '../types/props';\n\nlet idCounter = 0;\n\nexport interface NotificationOperation {\n    /** Notification component that should be rendered */\n    component: React.ComponentType<any>;\n    /** Notification component props */\n    props: INotification;\n    /** Notification config */\n    config: NotificationParams;\n}\n\nexport class NotificationContext extends BaseContext implements INotificationContext {\n    private notifications: NotificationOperation[] = [];\n    constructor(private layoutCtx: LayoutContext) {\n        super();\n    }\n\n    public destroyContext() {\n        this.clearAll();\n        super.destroyContext();\n    }\n\n    public show(render: (props: INotification) => React.ReactNode, notificationParams: NotificationParams): Promise<void> {\n        const NotificationAdapter = class extends React.Component<INotification> {\n            render() {\n                return render(this.props);\n            }\n        };\n\n        const params: NotificationParams = {\n            duration: 7,\n            position: 'bot-left',\n            ...notificationParams,\n        };\n\n        return new Promise((resolve, reject) => {\n            const layer = this.layoutCtx.getLayer();\n            let durationTimer: ReturnType<typeof setTimeout>;\n\n            const notificationProps: INotification = {\n                onClose: () => {\n                    this.remove(layer.id);\n                    this.layoutCtx.releaseLayer(layer);\n                    reject();\n                    this.update({});\n                },\n                onSuccess: () => {\n                    this.remove(layer.id);\n                    this.layoutCtx.releaseLayer(layer);\n                    resolve();\n                    this.update({});\n                },\n                clearTimer: () => clearTimeout(durationTimer),\n                refreshTimer: () => {\n                    if (params.duration !== 'forever') {\n                        clearTimeout(durationTimer);\n                        durationTimer = setTimeout(() => {\n                            notificationProps.onClose();\n                        }, params.duration * 1000);\n                    }\n                },\n                id: layer.id,\n                key: idCounter++ + '',\n            };\n\n            if (params.duration !== 'forever') {\n                durationTimer = setTimeout(() => {\n                    notificationProps.onClose();\n                }, params.duration * 1000);\n            }\n\n            const operation: NotificationOperation = { component: NotificationAdapter, props: notificationProps, config: params };\n\n            this.notifications.push(operation);\n\n            this.update({});\n        });\n    }\n\n    public getNotifications(): NotificationOperation[] {\n        return this.notifications;\n    }\n\n    public handleRedirect() {\n        this.notifications = [];\n    }\n\n    public remove(id: number) {\n        this.notifications = this.notifications.filter((i) => {\n            if (i.props.id === id) {\n                this.layoutCtx.releaseLayer(i.props.id);\n                return false;\n            }\n            return true;\n        });\n        this.update({});\n    }\n\n    public clearAll() {\n        this.notifications.map((i) => this.layoutCtx.releaseLayer(i.props.id));\n        this.notifications = [];\n        this.update({});\n    }\n}\n","export class UserSettingsContext {\n    get<TValue>(key: any, initial?: TValue): TValue {\n        if (!key) {\n            return initial || null;\n        }\n\n        const keyStr = JSON.stringify(key);\n\n        const json = window.localStorage.getItem(keyStr);\n        if (!json) {\n            return initial;\n        }\n        return JSON.parse(json);\n    }\n\n    set<TValue>(key: any, value: TValue) {\n        const keyStr = JSON.stringify(key);\n\n        if (key) {\n            window.localStorage.setItem(keyStr, JSON.stringify(value));\n        }\n    }\n}\n","import { AnalyticsContext } from '../services/AnalyticsContext';\nimport { ApiContext, ApiContextProps } from '../services/ApiContext';\nimport { ErrorContext } from '../services/ErrorContext';\nimport { DndContext } from '../services/dnd/DndContext';\nimport { LayoutContext } from '../services/LayoutContext';\nimport { LockContext } from '../services/LockContext';\nimport { ModalContext } from '../services/ModalContext';\nimport { NotificationContext } from '../services/NotificationContext';\nimport { ApiCallOptions, CommonContexts, IProcessRequest, IRouterContext } from '../types';\nimport { UserSettingsContext } from '../services/UserSettingsContext';\nimport { useEffect, useState } from 'react';\n\nexport interface UuiServicesProps<TApi> extends ApiContextProps {\n    /** Function to get the api definitions.\n     * Usually, api definitions this is an object which contain object with all api requests of the app.\n     * Then you can call this requests via 'uuiContext.api.myApi(myData)'\n     * */\n    apiDefinition?: (processRequest: IProcessRequest) => TApi;\n}\nexport interface UseUuiServicesProps<TApi, TAppContext> extends UuiServicesProps<TApi> {\n    /** AppContext value */\n    appContext?: TAppContext;\n    /** Instance of the router */\n    router: IRouterContext;\n}\n\nfunction createServices<TApi, TAppContext>(props: UseUuiServicesProps<TApi, TAppContext>) {\n    const {\n        router, appContext, apiDefinition, apiReloginPath, apiServerUrl, apiPingPath, fetch,\n    } = props;\n\n    const uuiLayout = new LayoutContext();\n    const uuiModals = new ModalContext(uuiLayout);\n    const uuiNotifications = new NotificationContext(uuiLayout);\n    const uuiAnalytics = new AnalyticsContext({ router });\n    const uuiLocks = new LockContext(router);\n    const uuiErrors = new ErrorContext(uuiAnalytics, uuiModals);\n    const uuiApi = new ApiContext({ apiPingPath, apiReloginPath, apiServerUrl, fetch }, uuiAnalytics);\n\n    const rawApi = apiDefinition ? apiDefinition(uuiApi.processRequest.bind(uuiApi)) : ({} as TApi);\n    const withOptions = (options: ApiCallOptions) => apiDefinition((url, method, data) => uuiApi.processRequest(url, method, data, options));\n    const api = { ...rawApi, withOptions };\n\n    const uuiUserSettings = new UserSettingsContext();\n    const uuiDnD = new DndContext();\n    const services: CommonContexts<TApi, TAppContext> = {\n        uuiAnalytics,\n        uuiErrors,\n        uuiApi,\n        api,\n        uuiLayout,\n        uuiNotifications,\n        uuiModals,\n        uuiUserSettings,\n        uuiDnD,\n        uuiRouter: router,\n        uuiLocks,\n        uuiApp: appContext || ({} as TAppContext),\n    };\n    return {\n        services,\n        destroyServices: () => {\n            uuiAnalytics.destroyContext();\n            uuiErrors.destroyContext();\n            uuiApi.destroyContext();\n            uuiLayout.destroyContext();\n            uuiNotifications.destroyContext();\n            uuiModals.destroyContext();\n            uuiDnD.destroyContext();\n            uuiLocks.destroyContext();\n        },\n        init: () => {\n            uuiAnalytics.init();\n            uuiErrors.init();\n            uuiApi.init();\n            uuiLayout.init();\n            uuiNotifications.init();\n            uuiModals.init();\n            uuiDnD.init();\n            uuiLocks.init();\n        },\n    };\n}\nexport const useUuiServices = <TApi, TAppContext>(props: UseUuiServicesProps<TApi, TAppContext>) => {\n    const [result] = useState(() => createServices<TApi, TAppContext>(props));\n\n    // Workaround to discard all errors on navigation. Need to find a better way. YakovZh\n    result.services.uuiErrors.discardError();\n    result.services.uuiApi.reset();\n\n    useEffect(() => {\n        result.init();\n\n        (window as any).UUI_VERSION = __PACKAGE_VERSION__; // it replaced with current uui version during build time\n\n        return () => {\n            result.destroyServices();\n        };\n    }, []);\n\n    return { services: result.services };\n};\n","import React, {\n    useContext, useEffect, useState,\n} from 'react';\nimport { IHasChildren } from '../types/props';\nimport { CommonContexts } from '../types/contexts';\nimport { HistoryAdaptedRouter, IHistory4, StubAdaptedRouter } from './routing';\nimport { DragGhost } from './dnd/DragGhost';\nimport { GAListener } from './analytics';\nimport { UuiServicesProps, useUuiServices } from '../hooks/useUuiServices';\nimport { UuiContext } from './UuiContext';\n\nexport interface ContextProviderProps<TApi, TAppContext> extends UuiServicesProps<TApi>, IHasChildren {\n    /** Callback to load the AppContext data. AppContext is used to load global data, before application mount */\n    loadAppContext?: (api: TApi) => Promise<TAppContext>;\n    /** Called when all contexts were initiated */\n    onInitCompleted(svc: CommonContexts<TApi, TAppContext>): void;\n    /** Instance of react-router history.\n     * Note, that it should be the same object which you passed to the Router.\n     * */\n    history?: IHistory4;\n    /** Code of Google Analytics.\n     * If provided, user interactions events will be sent to your GA.\n     * */\n    gaCode?: string;\n}\n\nexport function ContextProvider<TApi, TAppContext>(props: ContextProviderProps<TApi, TAppContext>) {\n    const [isLoaded, setIsLoaded] = useState(false);\n    const {\n        loadAppContext, onInitCompleted, children: propsChildren, history, gaCode, ...restProps\n    } = props;\n\n    const router = !!history ? new HistoryAdaptedRouter(history) : new StubAdaptedRouter();\n\n    const { services } = useUuiServices<TApi, TAppContext>({ ...restProps, router });\n    services.history = history;\n\n    useEffect(() => {\n        const loadAppContextPromise = loadAppContext || (() => Promise.resolve({} as TAppContext));\n        gaCode && services.uuiAnalytics.addListener(new GAListener(gaCode));\n        loadAppContextPromise(services.api).then((appCtx) => {\n            services.uuiApp = appCtx;\n            onInitCompleted(services);\n            setIsLoaded(true);\n        });\n    }, []);\n\n    const children = isLoaded ? propsChildren : '';\n\n    return (\n        <UuiContext.Provider value={ services }>\n            {children}\n            <DragGhost />\n        </UuiContext.Provider>\n    );\n}\n\nexport function useUuiContext<TApi = any, TAppContext = any>(): CommonContexts<TApi, TAppContext> {\n    const context = useContext(UuiContext);\n    if (!Object.keys(context).length) {\n        throw new Error('useUuiContext must be called within UuiContextProvider');\n    }\n    return context;\n}\n","import React from 'react';\nimport { IEditable, IAnalyticableOnChange } from '../types';\nimport debounce from 'lodash.debounce';\nimport { useUuiContext } from '../services';\nimport {\n    ReactElement, useCallback, useEffect, useMemo, useRef, useState,\n} from 'react';\n\n/**\n * IEditableDebouncer component options.\n */\nexport interface IEditableDebouncerOptions {\n    /** Pass true to disable debouncing */\n    disableDebounce?: boolean;\n    /** Debounce delay in ms. Default value is 500ms */\n    debounceDelay?: number;\n}\n\n/**\n * IEditableDebouncer component props.\n */\nexport interface IEditableDebouncerProps<T> extends IEditable<T>, IEditableDebouncerOptions, IAnalyticableOnChange<T> {\n    /**\n     * Render wrapped component.\n     */\n    render: (props: IEditable<T>) => React.ReactNode;\n}\n\nconst defaultDelay = 500;\n\nconst IEditableDebouncerImpl = <T>(props: IEditableDebouncerProps<T>) => {\n    const [state, setState] = useState({ value: props.value });\n    const lastSentValue = useRef(props.value);\n    const context = useUuiContext();\n\n    useEffect(() => {\n        if ((props.value !== lastSentValue.current)) {\n            setState({ value: props.value });\n            lastSentValue.current = props.value;\n        }\n    }, [props.value]);\n\n    const debouncedOnValueChange = useMemo(() => {\n        return debounce(\n            (value) => {\n                lastSentValue.current = value;\n                props.onValueChange(value);\n\n                if (props.getValueChangeAnalyticsEvent) {\n                    const event = props.getValueChangeAnalyticsEvent(value, props.value);\n                    context.uuiAnalytics.sendEvent(event);\n                }\n            },\n            props.debounceDelay != null ? props.debounceDelay : defaultDelay,\n            { leading: false, trailing: true },\n        );\n    }, [\n        props.onValueChange, props.getValueChangeAnalyticsEvent, props.debounceDelay, props.value,\n    ]);\n\n    const handleValueChange = useCallback(\n        (newValue: T) => {\n            setState({ value: newValue });\n            if (props.disableDebounce) {\n                props.onValueChange(newValue);\n            } else {\n                debouncedOnValueChange(newValue);\n            }\n        },\n        [\n            props.disableDebounce, props.onValueChange, debouncedOnValueChange,\n        ],\n    );\n\n    const propsToRender: IEditable<T> = useMemo(\n        () => ({\n            value: state.value,\n            onValueChange: handleValueChange,\n        }),\n        [state.value, handleValueChange],\n    );\n\n    return props.render?.(propsToRender) as ReactElement;\n};\n\n/**\n * Wrap other IEditable components into the IEditableDebouncer to debounce onValueChange calls.\n * Useful for search inputs, or any other components that cause expensive computations on change.\n * Wrapped component still behaves as controlled component, and will react to external value changes immediately.\n */\nexport const IEditableDebouncer = React.memo(IEditableDebouncerImpl) as typeof IEditableDebouncerImpl;\n","const base = 26;\nconst memoized: string[] = [];\n\n/**\n * Computes order string from integer item index in a sequence.\n * Useful for creating initial orders of items, which can be later manipulated with getOrderBetween to insert or move items.\n * @param input integer order of item\n * @returns order string\n */\nexport function indexToOrder(input: number) {\n    const existing = memoized[input];\n    if (existing) {\n        return existing;\n    }\n\n    const aChar = 97;\n    const digits = [];\n\n    let lastInputValue = input;\n    while (lastInputValue > 0) {\n        digits.unshift((lastInputValue % base) + aChar);\n        lastInputValue = Math.floor(lastInputValue / base);\n    }\n    const order = String.fromCharCode(\n        // Put number of digits first, to establish order between numbers\n        // of different length (the longer is bigger)\n        // We add '+ 1' is to start number of digits from 'b'\n        // to leave room to insert orders before numberToOrder(0), w/o using digits.\n        digits.length + aChar + 1,\n        ...digits,\n    );\n    memoized[input] = order;\n    return order;\n}\n\nexport const minOrderStr = 'a';\nexport const maxOrderStr = 'zzzz';\n\n/**\n * Calculates a string, which is between two strings, if strings are sorted in alphabetic order.\n *\n * Examples:\n *\n *  - 'a', 'z' => 's'\n *  - 'a', 'b' => 'as'\n *  - 'as, 'b' => 'au'\n *  - 'aa, 'ab' => 'aas' // there's no precision limit\n *  - null, 'c' => 'b' // insert first\n *  - 'c', null => 'u' // insert last\n *\n * This approach allows to add order to arbitrary list of items.\n *\n * Any item can be moved to any place in the list by modifying only one attribute. So:\n * - you can save only moved item(s) to server, not the whole list\n * - you can store items in any suitable structure, e.g. - Map<id, Item>, instead of plain arrays\n * - server can trivially update items, as usual fields\n * - server can sort items as well - we use only ASCII 0-9 and a-z, to there's no collation issues\n * - it's better than using integer numbers: no need to renumber items in case you need to insert an item between 1 and 2\n * - it's better than using floats: they can have limited precision, which can lead to complicated issues\n *\n * The function implements a basic average of 2 numbers: (a + b)/2, interpreting strings as fractional part of base-36 number.\n *\n * Read more [here](https://uui.epam.com/documents?id=dragAndDrop&mode=doc&skin=UUI4_promo&category=advanced)\n * @param inputA order string before (can be start for the start of the list)\n * @param inputB order string after (can be null for the end of the list)\n * @returns order string between inputA and inputB\n */\nexport function getOrderBetween(inputA: string | null, inputB: string | null): string {\n    const radix = 36;\n    let a = inputA;\n    const b = inputB || 'z';\n\n    if (!a) {\n        // We were generating chars 0-z prior. Now we try yo use only a-z.\n        // This is done to avoid issues with string sort/compare algorithms (e.g. Intl.Collator().compare we use in DataSources),\n        // which compare number so '1' < '10', and we rely on plain char-by-char comparators.\n\n        // However, there's no options to generate value less than 'a' w/o digits.\n        // This can happen for already generated orders.\n        a = (b <= 'a') ? '0' : 'a';\n    }\n\n    const throwError = () => {\n        throw new Error(`getOrderBetween: can't find values between ${inputA} and ${inputB}`);\n    };\n\n    if (a >= b) {\n        throwError();\n    }\n\n    let result = '';\n    let n = 0;\n\n    // If we see two close chars, like 'a' and 'b' or '1' and '2' - we can't fit another\n    // char between them at this position.\n    // However, this means that A is already less than B, and we\n    // can use this when comparing next positions.\n    let resultIsLessThanB = false;\n\n    while (true) {\n        const aChar = a[n];\n\n        // If result < B according to prior chars, any letter greater than aChar will be ok\n        const bChar = resultIsLessThanB ? 'z' : b[n];\n\n        let aDigit = parseInt(aChar || '0', radix);\n        const bDigit = parseInt(bChar || 'z', radix);\n\n        // We were generating chars 0-z, however now we try to use a-z if possible.\n        // Unfortunately, it's not possible, if order already contains digits.\n        if (bDigit > 10) {\n            aDigit = Math.max(10, aDigit);\n        }\n\n        const midDigit = Math.floor((aDigit + bDigit) / 2);\n\n        result += midDigit.toString(radix);\n\n        if (aDigit !== midDigit) {\n            break;\n        }\n\n        if (aDigit < bDigit) {\n            resultIsLessThanB = true;\n        }\n\n        n++;\n    }\n\n    return result;\n}\n","export function isUrl(url: string): boolean {\n    const expression = /[-a-zA-Z0-9@:%_\\+.~#?&//=]{2,256}\\.[a-z]{2,4}\\b(\\/[-a-zA-Z0-9@:%_\\+.~#?&//=]*)?/gi;\n    const regex = new RegExp(expression);\n    return !!url.match(regex);\n}\n\nexport function prependHttp(url: string, options: { https: boolean }) {\n    if (typeof url !== 'string') {\n        throw new TypeError(`Expected \\`url\\` to be of type \\`string\\`, got \\`${typeof url}\\``);\n    }\n\n    url = url.trim();\n\n    if (/^\\.*\\/|^(?!localhost)\\w+:/.test(url)) {\n        return url;\n    }\n\n    return url.replace(/^(?!(?:\\w+:)?\\/\\/)/, options.https ? 'https://' : 'http://');\n}\n","import { SortingOption } from '../../types/dataSources';\n\nconst eqPredicate = () => 0;\n\n// Previous versions use this comparer. While it works great for human-readable strings, it's broken for dates. Also, we need a plain sort in case of 'order' fields.\n// const compareScalars = (new Intl.Collator(undefined, {numeric: true, sensitivity: 'base'})).compare;\n\nexport function compareScalars(a: any, b: any, order: number) {\n    if (a == null) {\n        if (b == null) {\n            return 0;\n        }\n        return -order;\n    }\n    if (b == null) return order;\n    if (a < b) return -order;\n    if (a === b) return 0;\n\n    return order;\n}\n\nexport function getOrderComparer<TEntity>(sorting: SortingOption[]): (a: TEntity, b: TEntity) => number {\n    if (!sorting || sorting.length === 0) {\n        return eqPredicate;\n    }\n\n    const sortingOrders = sorting.map((s) => (s.direction === 'desc' ? -1 : 1));\n\n    const comparer = (a: any, b: any) => {\n        for (let n = 0; n < sorting.length; n++) {\n            const fieldName = sorting[n].field;\n            const compareResult = compareScalars(a[fieldName], b[fieldName], sortingOrders[n]);\n            if (compareResult !== 0) {\n                return compareResult;\n            }\n        }\n        return 0;\n    };\n\n    return comparer;\n}\n","import { compareScalars } from '../data/querying/getOrderComparer';\n\n/**\n * Function, which orders array of items by criteria in some direction.\n * @param arr - list of items to be ordered.\n * @param by - criteria of ordering.\n * @param order - direction of ordering. Default: 'asc'.\n * @returns - array of data, ordered by criteria.\n */\nexport function orderBy<T>(arr: T[], by: (item: T) => string | number | null | undefined, order: 'asc' | 'desc' = 'asc') {\n    const sortedArr = [...arr];\n    const sign = order === 'desc' ? -1 : 1;\n    return sortedArr.sort((a, b) => {\n        const aBy = by(a);\n        const bBy = by(b);\n        return compareScalars(aBy, bBy, sign);\n    });\n}\n","import { ColumnsConfig, DataColumnProps } from '../types';\nimport { getOrderBetween } from './getOrderBetween';\nimport { orderBy } from './orderBy';\n\nexport const applyColumnsConfig = <TItem, TId>(columns: DataColumnProps<TItem, TId>[], config: ColumnsConfig) => {\n    const newColumns = columns.reduce<DataColumnProps<TItem, TId>[]>((acc, c) => {\n        const { fix, width, ...restColumnProps } = c;\n        const cfg = config[c.key];\n\n        cfg.isVisible\n            && acc.push({\n                ...restColumnProps,\n                width: cfg.width,\n                ...(cfg.fix ? { fix: cfg.fix } : {}),\n            });\n        return acc;\n    }, []);\n\n    return orderBy(newColumns, (i) => config[i.key].order);\n};\n\nexport const getColumnsConfig = <TItem, TId>(columns: DataColumnProps<TItem, TId>[], config: ColumnsConfig) => {\n    const resultConfig: ColumnsConfig = { };\n\n    const sortedOrders = orderBy(Object.values(config ?? {}).filter(Boolean), (f) => f.order);\n    const lastItemOrder: string | null = sortedOrders?.length ? sortedOrders[sortedOrders.length - 1]?.order : null;\n\n    let prevOrder = lastItemOrder || 'a';\n\n    columns.forEach((column) => {\n        const hasPrevColumnConfig = !!config?.[column.key];\n        if (hasPrevColumnConfig) {\n            resultConfig[column.key] = config?.[column.key];\n        } else {\n            const order = getOrderBetween(prevOrder, null);\n\n            resultConfig[column.key] = {\n                width: column.width,\n                fix: column.fix ?? (column.isAlwaysVisible ? 'left' : undefined),\n                isVisible: !column.isHiddenByDefault,\n                order: order,\n            };\n            prevOrder = order;\n        }\n    });\n\n    return resultConfig;\n};\n","export function formatBytes(bytes: number, decimals = 2, withSizes = true) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\n        'Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB',\n    ];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    const numbersResult = parseFloat((bytes / Math.pow(k, i)).toFixed(dm));\n    return withSizes ? `${numbersResult} ${sizes[i]}` : `${numbersResult}`;\n}\n","type CalculatedDTO = {\n    value: number | null;\n    step?: number;\n    action?: 'incr' | 'decr';\n};\n\ntype ValidationDTO = {\n    value: number;\n    min?: number;\n    max?: number;\n};\n\nexport const getMinMaxValidatedValue = ({ value, min = 0, max = Number.MAX_SAFE_INTEGER }: ValidationDTO): number => {\n    if (value > max) {\n        return max;\n    } else if (value < min) {\n        return min;\n    } else {\n        return value;\n    }\n};\n\nexport const getCalculatedValue = ({ value: initialValue, step = 1, action = 'incr' }: CalculatedDTO): number => {\n    const value = initialValue || 0;\n    const valueDecimalLength = getDecimalLength(value);\n    const stepDecimalLength = getDecimalLength(step);\n    const decimalLength = valueDecimalLength >= stepDecimalLength ? valueDecimalLength : stepDecimalLength;\n\n    let adjustedValue = value;\n    switch (action) {\n        case 'decr':\n            adjustedValue = value - step;\n            break;\n        case 'incr':\n            adjustedValue = value + step;\n            break;\n        default:\n            return 0;\n    }\n    return Number(adjustedValue.toFixed(decimalLength));\n};\n\nexport const getDecimalLength = (value: number | null): number => {\n    const splitedValue = String(value).split('.');\n    if (splitedValue.length === 1) return 0;\n    return splitedValue[1].length;\n};\n\nexport const getSeparatedValue = (value: number | null, formatOptions: Intl.NumberFormatOptions = {}, locale?: string): string | null => {\n    if (!value && value !== 0) return null;\n    return value.toLocaleString(locale, formatOptions);\n};\n","import { Modifier } from 'react-popper';\nimport { isClientSide } from './ssr';\n\nexport const isMobile = (screenWidth: number = 720) => {\n    return isClientSide && window.matchMedia?.(`screen and (max-width: ${screenWidth}px)`).matches;\n};\n\nexport const mobilePopperModifier: Modifier<any> = {\n    name: 'computeStyles',\n    options: {\n        roundOffsets: ({ x, y }: { x: number; y: number }) => ({\n            x: isMobile() ? 0 : x,\n            y: isMobile() ? 0 : y,\n        }),\n    },\n};\n","enum MsgLevel {\n    error = 'error',\n    warn = 'warn',\n    log = 'log'\n}\n\nfunction getCurrentStack(cutItems: number = 0) {\n    let stack = new Error().stack;\n    if (cutItems > 0) {\n        const rest = stack.slice(1).split('\\n');\n        stack = rest.slice(cutItems).join('\\n');\n    }\n    return stack;\n}\n\nfunction getKey(msg: string, args: any[]) {\n    return msg + args.join();\n}\n\nclass UuiLogger {\n    private msgHistory: { [key: string]: true } = {};\n\n    private msgAddToHistory = (msg: string, args: any[]) => {\n        this.msgHistory[getKey(msg, args)] = true;\n    };\n\n    private msgIsAlreadyLogged = (msg: string, args: any[]) => {\n        const isNew = !this.msgHistory[getKey(msg, args)];\n        return !isNew;\n    };\n\n    private addToLog = (severity: MsgLevel, msg: string, args: any[]): void => {\n        if (this.msgIsAlreadyLogged(msg, args)) {\n            return;\n        }\n        this.msgAddToHistory(msg, args);\n        let method = console[severity];\n        // @ts-ignore\n        const origMethodReplaced = method.__REACT_DEVTOOLS_STRICT_MODE_ORIGINAL_METHOD__;\n\n        if (origMethodReplaced) {\n            method = origMethodReplaced;\n        }\n        method(msg, ...args);\n    };\n\n    /**\n     * Logs warning to console in development mode. Has no effect in production mode.\n     *\n     * @param msg\n     * @param args\n     */\n    public warn = (msg: string, ...args: any[]) => {\n        if (__DEV__) {\n            const stack = getCurrentStack(3);\n\n            this.addToLog(MsgLevel.error, `[UUI Warning]: ${msg}\\n\\n%s`, [...args, stack]);\n        }\n    };\n\n    /**\n     * Logs warning to console in development mode. Has no effect in production mode.\n     * @param props\n     */\n    public warnAboutDeprecatedPropValue = <T1, T2 extends keyof T1>(\n        props: {\n            component?: string,\n            propName: T2,\n            propValue: T1[T2],\n            propValueUseInstead?: T1[T2],\n            condition?: () => boolean,\n        },\n    ) => {\n        const {\n            propName,\n            propValue,\n            propValueUseInstead,\n            condition,\n            component,\n        } = props;\n        const shouldWarn = condition ? condition() : true;\n        if (shouldWarn) {\n            const comp = component ? `(${component}) ` : '';\n            const instead = propValueUseInstead ? `Please use ${propValueUseInstead} value instead.` : '';\n            this.warn(`${comp}The ${propValue} value of ${String(propName)} is deprecated and will be removed in future versions. ${instead}`);\n        }\n    };\n}\n\nexport const devLogger = new UuiLogger();\n","export const clearEmptyValueFromRecord = <TRecord extends Record<string, any> = Record<string, any>>(record: TRecord): TRecord => {\n    if (record === undefined || record === null || typeof record !== 'object') {\n        return record;\n    }\n\n    return Object.keys(record).reduce((acc: TRecord | undefined, key) => {\n        let newAcc = acc;\n        if (record[key] !== undefined) {\n            if (!newAcc) {\n                newAcc = {} as TRecord;\n            }\n            (newAcc as Record<string, any>)[key] = record[key];\n        }\n        return newAcc;\n    }, undefined);\n};\n","import * as React from 'react';\nimport { CX } from '../types';\nimport { withMods } from './withMods';\n\nexport function createSkinComponent<SourceProps, SkinProps = {}>(\n    Component: React.ComponentType<SourceProps>,\n    getProps?: (props: Readonly<SkinProps>) => Partial<SkinProps | SourceProps>,\n    getCx?: (props: Readonly<SkinProps>) => CX,\n) : (props: SkinProps & React.RefAttributes<any>) => React.ReactElement | null {\n    return withMods(Component as any, getCx as any, getProps as any) as any;\n}\n","function rangeFromTo(start: number, end: number, step?: number) {\n    const defaultStepForRange = (end >= start) ? 1 : -1;\n\n    return Array.from({ length: (end - start) / (step || defaultStepForRange) }, (_, index) => {\n        if (step === 0) {\n            return 1;\n        }\n\n        return start + (index * (step ?? defaultStepForRange));\n    });\n}\n\n/**\n * Factory of numeric sequences with the exact step.\n * @param start - a start number of the sequence inclusively.\n * @param end - an end number of the sequence exclusively.\n * @param step - step of the progression. Defaults:\n * - if start <= end, step = 1\n * - if start > end, step = -1.\n * @returns a sequence of numbers in progression, described by bounds with a specific step.\n */\nexport function range(start: number, end?: number, step?: number) {\n    if (end === undefined) {\n        return rangeFromTo(0, start, step);\n    }\n\n    return rangeFromTo(start, end, step);\n}\n","import { AnalyticsEvent, Link } from './objects';\nimport * as PropTypes from 'prop-types';\nimport { IModal, INotification } from './props';\nimport { DndContextState, TMouseCoords } from '../services/dnd/DndContext';\nimport { Lock } from '../services/LockContext';\nimport { IHistory4 } from '../services/routing/HistoryAdaptedRouter';\nimport { NotificationOperation } from '../services/NotificationContext';\nimport { ModalOperation } from '../services/ModalContext';\nimport { LayoutLayer } from '../services/LayoutContext';\n\nimport { FileUploadOptions, FileUploadResponse } from '../services/ApiContext';\n\nexport interface IBaseContext<TState = {}> {\n    /** Add your handler, which will be called on context updates */\n    subscribe(handler: (state: TState) => void): void;\n    /** Unsubscribe from context updates */\n    unsubscribe(handler: (state: TState) => void): void;\n    /** Manually destroy context and unsubscribe from all listeners  */\n    destroyContext: () => void;\n}\n\nexport interface NotificationParams {\n    /** Notification visibility duration in ms\n     * If 'forever' value provided, notification required manual action for closing.\n     */\n    duration?: number | 'forever';\n    /** Position of notification depends on screen corners */\n    position?: 'bot-left' | 'bot-right' | 'top-left' | 'top-right' | 'top-center' | 'bot-center';\n}\n\nexport interface INotificationContext extends IBaseContext {\n    /** Shows provided notification component with defined params  */\n    show(render: (props: INotification) => React.ReactNode, notificationParams?: NotificationParams): Promise<void>;\n    /** Returns all active notifications */\n    getNotifications(): NotificationOperation[];\n    /** Removes notification by their id */\n    remove(id: number): void;\n    /** Removes all active notification */\n    clearAll(): void;\n}\n\nexport interface ILayoutContext {\n    /** Returns the new layer. This layer will be higher than previous. */\n    getLayer(): LayoutLayer;\n    /** Removes provided layer from layers list */\n    releaseLayer(layer: LayoutLayer): void;\n    /**\n     * Returns portal root node.\n     * In simple cases it will be node with 'main' or 'root' id or document.body.\n     * Or it will return node with portalRootId.\n     */\n    getPortalRoot(): HTMLElement;\n    /**\n     * Returns unique id, which can be used as id for portal root.\n     * Usually used for cases with shadow DOM, to be able to find this portal root element if it's located under shadow DOM\n     */\n    getPortalRootId(): string;\n}\n\nexport interface ILockContext {\n    /**\n     * Tries to take a lock, and sets tryRelease callback, which will be invoked when something tries to take control over.\n     * If a lock already exists, it tries to release the current lock and then set a new one\n     */\n    acquire(tryRelease: () => Promise<any>): Promise<object>;\n    /** Releases lock without calling tryRelease callback */\n    release(lock: object): void;\n    /** Tries to acquire a lock for the time while the action is being executed. */\n    withLock(action: () => Promise<any>): Promise<object>;\n    /** Returns currently active lock */\n    getCurrentLock: () => Lock | null;\n}\n\nexport interface IRouterContext {\n    /** Returns current location link */\n    getCurrentLink(): Link;\n    /** Makes a SPA redirect to the provided link */\n    redirect(link?: Link | string): void;\n    /** Makes a SPA redirect to the provided link. Replaces the current entry in the history stack with a new one */\n    transfer(link: Link): void;\n    /** Returns true, if provided link match current location */\n    isActive(link: Link): boolean;\n    /** Creates href string based on provided link */\n    createHref(link: Link): string;\n    /** Subscribes to the router updates */\n    listen(listener: (link: Link) => void): () => void;\n    /**\n     * Blocks router changes. Can be used to show confirmation dialogs before the redirect.\n     * If block callback provide, all router changes will be blocked, you need to unblock and to retry them by yourself.\n     * */\n    block(callback: (link: Link) => void): () => void;\n}\n\nexport interface IModalContext extends IBaseContext {\n    /** Shows provided modal component with defined params  */\n    show<TResult, TParameters = {}>(render: (props: IModal<TResult>) => React.ReactNode, parameters?: TParameters): Promise<TResult>;\n    /** Removes all active modals */\n    closeAll(): void;\n    /** Returns true, if some modal displayed */\n    isModalOperationActive(): boolean;\n    /** Returns all active modals */\n    getOperations(): ModalOperation[];\n}\n\nexport interface IDndContext extends IBaseContext<DndContextState> {\n    startDrag(node: Node, data: any, renderGhost: () => React.ReactNode): void;\n    endDrag(): void;\n    /** Indicates that drag in progress */\n    isDragging: boolean;\n    dragData?: any;\n    getMouseCoords: () => TMouseCoords\n}\n\n/** Save data to the localStorage */\nexport interface IUserSettingsContext {\n    /** Gets value by key from localStorage */\n    get<TValue>(key: any, initial?: TValue): TValue;\n    /** Sets value by key from localStorage */\n    set<TValue>(key: any, value: TValue): void;\n}\n\nexport interface IErrorContext extends IBaseContext {\n    /** Current error */\n    currentError?: Error;\n    /** Reports error to context */\n    reportError(error: Error): void;\n    /** Sets an error handler callback */\n    onError(callback: Function): void;\n    /** Discard current error */\n    discardError(): void;\n    /** Discard errors and refresh app */\n    recover(): void;\n}\n\nexport type ApiStatus = 'idle' | 'running' | 'error' | 'recovery';\nexport type ApiRecoveryReason = 'auth-lost' | 'connection-lost' | 'server-overload' | 'maintenance' | null;\n\ntype ApiCallStatus = 'scheduled' | 'running' | 'error';\n\nexport interface ApiCallInfo {\n    /** Request URl */\n    url: string;\n    /** Name of the request received by processRequest data.operationName */\n    name: string;\n    /** Request method */\n    method: string;\n    /** Request payload */\n    requestData: {};\n    /** Request options */\n    options?: ApiCallOptions;\n    /** ApiContext request status */\n    status: ApiCallStatus;\n    /** Request http status */\n    httpStatus?: number;\n    /** Response data */\n    responseData?: {\n        /** Request error message */\n        errorMessage?: string;\n    };\n    /** Request error status */\n    errorStatus?: number;\n    /** Timestamp of request start */\n    startedAt?: Date;\n    /** Timestamp of request finish */\n    finishedAt?: Date;\n    /** Number of ping attempts */\n    attemptsCount: number;\n    /** Discard request error and remove it from requests queue */\n    dismissError(): void;\n}\n\nexport interface ApiCallOptions<ResponseData = any> {\n\n    /** Native fetch method options  */\n    fetchOptions?: RequestInit;\n\n    /** Defines how to handle request errors:\n     * 'page' - displays an error splash screen.\n     * 'notification' - shows the error using a notification card without blocking the application.\n     * 'manual' - means the API context won't handle the error; you should manage it yourself.\n     */\n    errorHandling?: 'manual' | 'page' | 'notification';\n\n    /**\n     * By default, all responses are parsed as JSON.\n     * This option allows to extract response data in non-json formats.\n     * The callback is passed with response object, and should return a promise to result to return from the processRequest call.\n     * Examples:\n     * (res) => res.text() // parse all responses as text\n     * (res) => res.status === 200 ? res.json() : res.text() // parse OK response as json, and errors as text\n     * (res) => res.blob() // get response as Blob object\n     */\n    parseResponse?: (response: Response) => Promise<ResponseData>;\n}\n\n/*\n    Inspired by: https://stackoverflow.com/a/74376991\n    Provides suggestions for some request methods (to avoid typos) while allowing to assign any string.\n*/\nexport type ProcessRequestMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | string & {};\n\nexport type IProcessRequest = <DataResponse = any>(\n    url: string,\n    method: ProcessRequestMethod,\n    data?: any,\n    options?: ApiCallOptions<DataResponse>,\n) => Promise<DataResponse>;\n\nexport interface IApiContext extends IBaseContext {\n    /** Current status of api service.\n     * idle - service do nothing and ready to process new requests\n     * running - service is currently processing requests\n     * error - service received an error and stop processing requests, due to this error will be discarded\n     * recovery - service trying to restore connection and recover latest requests\n     * */\n    readonly status: ApiStatus;\n    /** Reason of why api trying to recover connection */\n    readonly recoveryReason: ApiRecoveryReason | null;\n    /** Returns currently processing or failed requests */\n    getActiveCalls(status?: ApiCallStatus): ApiCallInfo[];\n    /** Resets all errors */\n    reset(): void;\n    /** Starts fetch call with providing params */\n    processRequest: IProcessRequest;\n    /** Starts file uploading using FormData */\n    uploadFile(url: string, file: File, options?: FileUploadOptions): Promise<FileUploadResponse>;\n    /** Url to the relogin page. Used to open new browser window by this path, in case of auth lost error.\n     * Opened by this path page, should process authentication and then post 'authSuccess' cross-window message to the opener, to recover failed requests.\n     * @default '/auth/login'\n     * */\n    apiReloginPath: string;\n}\n\nexport interface IAnalyticsContext {\n    /** Sends event to the all listeners */\n    sendEvent(event?: AnalyticsEvent): void;\n    /** Adds analytic event listener */\n    addListener(listener: IAnalyticsListener): void;\n}\n\nexport interface IAnalyticsListener {\n    /** Defines how to send event to the analytics system */\n    sendEvent(event: AnalyticsEvent, parameters: Omit<AnalyticsEvent, 'name'>, eventType?: 'event' | 'pageView' | 'apiTiming'): void;\n}\n\nexport interface ApiExtensions<TApi> {\n    /** Allows to specify API options for particular request */\n    withOptions(options: ApiCallOptions): TApi;\n}\n\nexport interface UuiContexts {\n    /** Api service allows you to process requests with an error handling.\n     * See more here - https://uui.epam.com/documents?id=apiContext&category=contexts\n     * */\n    uuiApi: IApiContext;\n    /** Instance of react-router wrapped by UUI adapter */\n    uuiRouter: IRouterContext;\n    /** Modals service allows you to show modal windows over the main content.\n     * See more here - https://uui.epam.com/documents?id=modalContext&category=contexts\n     * */\n    uuiModals: IModalContext;\n    /** Drag and Drop service for dnd operations.\n     * See more here - https://uui.epam.com/documents?id=dragAndDrop\n     * */\n    uuiDnD: IDndContext;\n    /** UserSettings service allows you to store user data in localStorage. */\n    uuiUserSettings: IUserSettingsContext;\n    /** Web analytics service allows you to send user interaction events to the analytics systems.\n     * See more here - https://uui.epam.com/documents?id=analyticsContext&category=contexts\n     * */\n    uuiAnalytics: IAnalyticsContext;\n    /** Error service allows you to report errors.\n     * See more here - https://uui.epam.com/documents?id=apiContext&category=contexts\n     * */\n    uuiErrors: IErrorContext;\n    /** Notifications service allows you to show notifications over the main content.\n     * See more here - https://uui.epam.com/documents?id=notificationContextDoc&category=contexts\n     * */\n    uuiNotifications: INotificationContext;\n    /** Layout service. Used to manage layout for overlays like modals, dropdowns, etc. */\n    uuiLayout: ILayoutContext;\n    /** Lock service.\n     * See more here - https://uui.epam.com/documents?id=lockContextDoc&category=contexts\n     * */\n    uuiLocks: ILockContext;\n}\n\nexport interface CommonContexts<TApi, TAppContext> extends UuiContexts {\n    /** Api definitions */\n    api: TApi & ApiExtensions<TApi>;\n    /** App context, any app global settings. */\n    uuiApp: TAppContext;\n    /** React router history instance */\n    history?: IHistory4;\n}\n\nexport const uuiContextTypes = {\n    uuiAnalytics: PropTypes.object,\n    uuiErrors: PropTypes.object,\n    uuiApi: PropTypes.object,\n    uuiModals: PropTypes.object,\n    uuiNotifications: PropTypes.object,\n    api: PropTypes.object,\n    uuiUserSettings: PropTypes.object,\n    uuiDnD: PropTypes.object,\n    uuiApp: PropTypes.object,\n    uuiRouter: PropTypes.object,\n    uuiLayout: PropTypes.object,\n    uuiLocks: PropTypes.object,\n    history: PropTypes.object,\n    uuiSkin: PropTypes.object,\n};\n","import { ICheckable } from './props';\nimport { DataRowOptions, DataRowProps } from './dataRows';\nimport { IImmutableMap, IMap } from './objects';\nimport { PatchOrderingType } from '../data';\n\nexport interface SearchConfig<TItem> {\n    /**\n     * A pure function that gets search value for each item.\n     * @default (item) => item.name.\n     */\n    getSearchFields?(item: TItem): string[];\n\n    /**\n     * Enables sorting of search results by relevance.\n     * - The highest priority has records, which have a full match with a search keyword.\n     * - The lower one has records, which have a search keyword at the 0 position, but not the full match.\n     * - Then, records, which contain a search keyword as a separate word, but not at the beginning.\n     * - And the lowest one - any other match of the search keyword.\n     *\n     * Example:\n     * - `search`: 'some'\n     * - `record string`: 'some word', `rank` = 4\n     * - `record string`: 'someone', `rank` = 3\n     * - `record string`: 'I know some guy', `rank` = 2\n     * - `record string`: 'awesome', `rank` = 1\n     *\n     * @default true\n     */\n    sortSearchByRelevance?: boolean;\n}\n\nexport interface SortConfig<TItem> {\n    /**\n     * A pure function that gets sorting value for current sorting value\n     */\n    sortBy?(item: TItem, sorting: SortingOption): any;\n}\n\nexport interface FilterConfig<TItem, TFilter> {\n    /**\n     * A pure function that returns filter callback to be applied for each item.\n     * The callback should return true, if item passed the filter.\n     */\n    getFilter?(filter: TFilter): (item: TItem) => boolean;\n}\n\nexport type SortDirection = 'asc' | 'desc';\n\nexport interface SortingOption<T = any> {\n    /** Field of sorted entity under which sorting is performed */\n    field: keyof T;\n    /** Direction of a sorting */\n    direction?: SortDirection;\n}\n\nexport interface VirtualListRange {\n    /**\n     * Index of the topmost item, in rendered batch.\n     * Note - this item might not be visible, as Virtual List maintain some reserve of rows on top / at the bottom of the list\n     */\n    topIndex?: number;\n    /**\n     * Number of currently rendered items.\n     * Virtual list updates this value automatically, if it too small.\n     * Note Virtual List renders more items, that actually visible,\n     * as it need maintain some reserve of rows on top / at the bottom of the list.\n     */\n    visibleCount?: number;\n}\n\nexport type ScrollAlign = 'top' | 'nearest';\n\n/**\n * Holds configuration of the force scrolling behavior.\n */\nexport interface ScrollToConfig {\n    /** Index of the row to be scrolled to. */\n    index?: number;\n\n    /** Scrolling movement behavior. */\n    behavior?: ScrollBehavior;\n\n    /** Alignment behavior. This property specifies, to which position a row with an index should be scrolled to.\n     * @default 'top'\n     *\n     * If `nearest` is specified, a list will be scrolled to a row in the nearest position only if row is not visible.\n     * If a row is closer to the bottom, the list will be scrolled to the row in the bottom position of a scroll container.\n     * If closer to the top, will be scrolled to the row in the top position.\n     *\n     * If `top` is specified, scrolling a list to a row to the top part of the container will happen in any case.\n    */\n    align?: ScrollAlign;\n}\n\n/** Holds state of a Virtual List - top visible item index, and estimated count of visible items */\nexport interface VirtualListState extends VirtualListRange {\n    /**\n     * Virtual list ensures that row with this Index is within the visible area, if not Virtual List .\n     * Virtual list updates this value on scroll to null when appear in the visible area.\n     * If this value is updated manually, Virtual List would scroll to the specified items.\n     * It would attempt to put scroll so this item will be at the top of the list.\n     */\n    scrollTo?: ScrollToConfig;\n}\n\nexport interface IDataSource<TItem, TId, TFilter> {\n    getId(item: TItem): TId;\n    getById(id: TId): TItem | void;\n    setItem(item: TItem): void;\n    useView(\n        value: DataSourceState<any, TId>,\n        onValueChange: SetDataSourceState<TFilter, TId>,\n        options?: any,\n        deps?: any[],\n    ): IDataSourceView<TItem, TId, TFilter>;\n}\n\n/**\n * Patch tree configuration.\n */\nexport interface PatchOptions<TItem, TId> extends SortConfig<TItem> {\n    /**\n     * Items, which should be added/updated/deleted from the tree.\n     */\n    patch?: IMap<TId, TItem> | IImmutableMap<TId, TItem>;\n\n    /**\n     * To enable deleting of the items, it is required to specify getter for deleted state.\n     */\n    isDeleted?(item: TItem): boolean;\n\n    /**\n     * Provides information about the relative position of the new item.\n     * @param item - new item, position should be got for.\n     * @returns relative position in the list of items.\n     * @default PatchOrdering.TOP\n     */\n    getNewItemPosition?: (item: TItem) => PatchOrderingType;\n\n    /**\n     *\n     * Provides information about the temporary order of the new item.\n     * @param item - new item, temporary order should be got for.\n     * @returns temporary order\n     *\n     * @experimental The API of this feature can be changed in the future releases.\n     */\n    getItemTemporaryOrder?: (item: TItem) => string;\n\n    /**\n     * If enabled, items position is fixed between sorting.\n     * @default true\n     */\n    fixItemBetweenSortings?: boolean;\n}\n\nexport interface FlattenSearchResultsConfig {\n    /**\n     * Falls back to plain list from tree, if there's search.\n     * Default is true.\n     *\n     * If enabled, and search is active:\n     * - API will be called with parentId and parent undefined\n     * - getChildCount is ignored, all nodes are assumed to have no children\n     *\n     * See more here: https://github.com/epam/UUI/issues/8\n     */\n    flattenSearchResults?: boolean;\n}\n\nexport interface BaseDataSourceConfig<TItem, TId, TFilter = any> extends PatchOptions<TItem, TId> {\n    /**\n     * Should return unique ID of the TItem\n     * If omitted, we assume that every TItem has and unique id in its 'id' field.\n     * @param item - record, which id should be returned.\n     * @returns item id.\n     */\n    getId?(item: TItem): TId;\n\n    /**\n     * Set to true, if you use IDs which can't act as javascript Map key (objects or arrays).\n     * In this case, IDs will be internally JSON.stringify-ed to be used as Maps keys.\n     */\n    complexIds?: boolean;\n\n    /** Should return ID of the Item's parent. Usually it's i => i.parentId.\n     * If specified, Data Source will build items hierarchy.\n     *\n     * Also, it is used by LazyDataSource to pre-fetch missing parents of loaded items. This is required in following cases:\n     * - when a child item is pre-selected, but not yet loaded at start. We need to load it's parent chain\n     *   to highlight parents with selected children\n     * - in flattenSearch mode, we usually want to display a path to each item (e.g. Canada/Ontario/Paris),\n     *   We need to load parents with a separate call (if backend doesn't pre-fetch them)\n     *\n     * @param item - record, which paretnId should be returned.\n     * @returns item parentId.\n     */\n    getParentId?(item: TItem): TId | undefined;\n\n    /**\n     * Specifies if rows are selectable, checkable, draggable, clickable, and more.\n     * See DataRowOptions for more details.\n     * If options depends on the item itself, use getRowOptions.\n     * Specifying both rowOptions and getRowOptions might help to render better loading skeletons: we use only rowOptions in this case, as we haven't loaded an item yet.\n     * Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance\n     * @param item An item to get options for\n     */\n    rowOptions?: DataRowOptions<TItem, TId>;\n\n    /**\n     * For each row, specify if row is selectable, editable, checkable, draggable, clickable, have its own set of columns, and more.\n     * To make rows editable, pass IEditable interface to each row. This works the same way as for other editable components.\n     * See DataRowOptions for more details.\n     * If both getRowOptions and rowOptions specified, we'll use getRowOptions for loaded rows, and rowOptions only for loading rows.\n     * Make sure all callbacks are properly memoized, as changing them will trigger re-renders or row, which would impact performance\n     * @param item - record, configuration should be returned for.\n     * @param index - index of a row. It is optional and should not be expected, that it is provided on every call.\n     */\n    getRowOptions?(item: TItem, index?: number): DataRowOptions<TItem, TId>;\n\n    /**\n     * Can be specified to unfold all or some items at start.\n     * If not specified, all rows would be folded.\n     * @param item - record, folding value should be returned for.\n     * @param dataSourceState - dataSource state with current `foldAll` value. It provides the possibility to respect foldAll change, if `isFoldedByDefault` is implemented.\n     */\n    isFoldedByDefault?(item: TItem, state: DataSourceState<TFilter, TId>): boolean;\n\n    /**\n     * Controls how the selection (checking items) of a parent node affects the selection of its all children, and vice versa.\n     * - false: All nodes are selected independently (default).\n     * - true or 'explicit': Selecting a parent node explicitly selects all its children. Unchecking the last parent's child unchecks its parent.\n     * - 'implicit': Selecting a parent node means that all children are considered checked.\n     *   The user sees all these nodes as checked on the UI, but only the selected parent is visible in the PickerInput tags, and only the checked\n     *   parent is present in the Picker's value or DataSourceState.checked array. When the user unchecks the first child of such a parent,\n     *   its parents become unchecked and all children but the unchecked one become checked, making children's selection explicit. If the last\n     *   unchecked child gets checked, all children from the checked are removed, returning to the implicit state when only the parent is checked.\n     */\n    cascadeSelection?: CascadeSelection;\n\n    /**\n     * Enables/disables selectAll functionality. If disabled explicitly, `selectAll`, returned from a view is null.\n     * @default true\n     */\n    selectAll?: true | false;\n\n    /**\n     * Enables returning only selected rows and loading missing selected/checked rows, if it is required/possible.\n     * If enabled, `useView` returns only selected rows from `IDataSourceView.getVisibleRows`.\n     */\n    showSelectedOnly?: boolean;\n}\n\n/** Holds state of a components displaying lists - like tables. Holds virtual list position, filter, search, selection, etc. */\nexport interface DataSourceState<TFilter = Record<string, any>, TId = any> extends VirtualListState {\n    /**\n     * Search value, used to filter data based on it.\n     * Included in the API request object when using a LazyDataSource.\n     * For Array and Async data sources, searching is performed internally by the datasource.\n     * */\n    search?: string;\n    /** Array of checked items IDs */\n    checked?: TId[];\n    /**\n     * A map of item IDs to their folding state.\n     * If an item ID is present with a `true` value, it's folded; otherwise, it's not folded.\n     * */\n    folded?: Record<string, boolean>;\n    /**\n     * Filter value used to filter data based on it.\n     * Included in the API request object when using a LazyDataSource.\n     * For Array and Async data sources, filtering is performed internally by the datasource.\n     * */\n    filter?: TFilter;\n    /**\n     * Sorting value, used to sort data based on it.\n     * Included in the API request object when using a LazyDataSource.\n     * For Array and Async data sources, sorting is performed internally by the datasource.\n     * */\n    sorting?: SortingOption[];\n    /** ID of selected item. It can be only one selected item at the moment. */\n    selectedId?: TId;\n    /** Index of currently focused item */\n    focusedIndex?: number;\n    /** Current page number */\n    page?: number;\n    /** The amount of items per page */\n    pageSize?: number;\n\n    /**\n     * Provides default folding of nodes if the opposite value is not present in the folded map.\n     * It is used to collapse/expand all nodes.\n     */\n    foldAll?: boolean;\n}\n\n/**\n * DataSource state update handler.\n */\nexport type SetDataSourceState<TFilter = Record<string, any>, TId = any> = (\n    updateState: (prevState: DataSourceState<TFilter, TId>) => DataSourceState<TFilter, TId>\n) => void;\n\nexport const CascadeSelectionTypes = {\n    IMPLICIT: 'implicit',\n    EXPLICIT: 'explicit',\n} as const;\n\nexport type CascadeSelection = boolean | typeof CascadeSelectionTypes.EXPLICIT | typeof CascadeSelectionTypes.IMPLICIT;\n\n/**\n * Type of the position an item to be placed to.\n */\nexport type PositionType = 'initial' | 'top' | 'bottom';\n\n/**\n * Position an item should be placed to.\n */\nexport type Position<TId> = PositionType | { after: TId };\n\nexport type SortedPatchByParentId<TItem, TId> = IMap<\nTId,\n{\n    top: TId[],\n    bottom: TId[],\n    updated: TId[],\n    moved: TId[],\n    withTempOrder: TId[],\n    updatedItemsMap: IMap<TId, TItem>,\n    newItems: TItem[],\n}\n>;\n\nexport interface BaseListViewProps<TItem, TId, TFilter> extends BaseDataSourceConfig<TItem, TId, TFilter> {}\n\nexport type IDataSourceViewConfig = {\n    complexIds?: boolean;\n    cascadeSelection?: CascadeSelection;\n    selectAll?: true | false;\n    backgroundReload?: boolean;\n    flattenSearchResults?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type IDataSourceView<TItem, TId, TFilter> = {\n    getConfig(): IDataSourceViewConfig;\n    getById(id: TId, index: number): DataRowProps<TItem, TId>;\n    getListProps(): DataSourceListProps;\n    getVisibleRows(): DataRowProps<TItem, TId>[];\n    getSelectedRowsCount(): number;\n    reload(): void;\n    clearAllChecked(): void;\n\n    selectAll?: ICheckable;\n};\n\nexport type DataSourceListCounts = {\n    /**\n     * Count of rows, after applying filter, and folding on tree nodes.\n     * Obsolete! Please switch to exactRowsCount / knownRowsCount\n     */\n    rowsCount?: number;\n\n    /** Count of rows, if all rows loaded. Can be null while initial loading, or if API doesn't return count  */\n    exactRowsCount?: number;\n\n    /**\n     * There's at least knownRowsCount rows. There can be more if list is lazy loaded.\n     * Equals to exactRowsCount if all rows are loaded, or if API returns rows count\n     * Otherwise, exactRowsCount will be null, and knownRowsCount will specify number of loaded rows.\n     */\n    knownRowsCount?: number;\n\n    /** Total count of items, before applying the filter. If there's a tree, it counts all nodes, including folded children  */\n    totalCount?: number;\n};\n\nexport interface DataSourceListProps extends DataSourceListCounts {\n    /**\n     * ICheckable object for Select All behavior.\n     * If omitted, Select All action will be absent.\n     * */\n    selectAll?: ICheckable;\n\n    /** Signals that data is reloading on search/sort/filter/reload. */\n    isReloading?: boolean;\n}\n\n// Lazy Data Source API\n\n/** The range (from/count) of required rows for LazyDataSourceApiRequest */\nexport interface LazyDataSourceApiRequestRange {\n    /** Element index to fetch from. */\n    from: number;\n    /** Count of elements to be retrieved. */\n    count?: number;\n}\n\n/** Defines input arguments for Lazy Data Source APIs */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport interface LazyDataSourceApiRequest<TItem, TId = any, TFilter = {}> {\n    /**\n     * The filter object, by which data should be filtered.\n     * It is a merged result of filters from DataSourceState and LazyDataSourceProps.\n     */\n    filter?: TFilter;\n    /** Sorting options, by which data should be sorted. */\n    sorting?: SortingOption[];\n    /** The search string, by which data should be searched. */\n    search?: string;\n    /** Specifies a range of the rows to be retrieved. */\n    range?: LazyDataSourceApiRequestRange;\n    /** Page number for which data should be retrieved. */\n    page?: number;\n    /** Number of items at the page. */\n    pageSize?: number;\n    /**\n     * An array of item IDs to be retrieved from the API.\n     * Other request options like filter, search and others should be ignored when IDs are provided.\n     * Used for requesting specific items separately from the list.\n     */\n    ids?: TId[];\n}\n\n/** Defines Lazy Data Source APIs response shape */\nexport interface LazyDataSourceApiResponse<TItem> {\n    /** List of items which was requested via API */\n    items: TItem[];\n\n    /**\n     * API can set 'from' field if it wants to return more items than what was requested in request.range.\n     * This can be used to return all items at once (with from:0, count: totalCount), or align response to pages.\n     */\n    from?: number;\n\n    /**\n     * Total count of items which match current filter and pagination.\n     * If not specified, total count will be detected only when user scrolls to the end of the list.\n     */\n    count?: number;\n\n    /**\n     * Total count of items which match current filter.\n     */\n    totalCount?: number;\n}\n\n/** Defines the context of API request. E.g. parent if we require to retrieve sub-list of the tree */\nexport interface LazyDataSourceApiRequestContext<TItem, TId> {\n    /**\n     * The ID of the parent item whose children are being requested.\n     * Used for lazy-loading data in tree lists.\n     */\n    parentId?: TId | null;\n    /** The parent entity whose children are being requested */\n    parent?: TItem | null;\n}\n\n/** Defines API to retrieve data for DataSources */\nexport type LazyDataSourceApi<TItem, TId, TFilter> = (\n    /** Defines input arguments for Lazy Data Source APIs */\n    request: LazyDataSourceApiRequest<TItem, TId, TFilter>,\n    /** Defines the context of API request. */\n    context?: LazyDataSourceApiRequestContext<TItem, TId>\n) => Promise<LazyDataSourceApiResponse<TItem>>;\n","/* eslint-disable no-restricted-imports */\nimport dayjs from 'dayjs';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\nimport isSameOrAfter from 'dayjs/plugin/isSameOrAfter';\n\nexport type { Dayjs } from 'dayjs';\n\nexport const uuiDayjs = TREE_SHAKEABLE_INIT();\n\nfunction TREE_SHAKEABLE_INIT() {\n    let extended = false;\n    return {\n        get dayjs() {\n            if (!extended) {\n                dayjs.extend(isSameOrBefore);\n                dayjs.extend(isSameOrAfter);\n                extended = true;\n            }\n            return dayjs;\n        },\n    };\n}\n","import { DataQueryFilter, DataQueryFilterCondition } from '../../types/dataQuery';\nimport { uuiDayjs } from '../../helpers/dayJsHelper';\n\nexport function simplifyPredicates<T>(filter: DataQueryFilter<T>) {\n    if (!filter) {\n        return {};\n    }\n    const result: DataQueryFilter<T> = filter;\n    const keys = Object.keys(filter) as (keyof T)[];\n    for (let n = 0; n < keys.length; n++) {\n        const key = keys[n];\n        const condition = filter[key] as DataQueryFilterCondition<any>;\n        if (condition != null && typeof condition === 'object') {\n            if ('inRange' in condition) {\n                const value = condition.inRange;\n                result[key] = {\n                    gte: value.from,\n                    lte: value.to,\n                };\n            }\n            if ('notInRange' in condition) {\n                const value = condition.notInRange;\n                result[key] = {\n                    not: {\n                        gte: value.from,\n                        lte: value.to,\n                    },\n                };\n            }\n\n            if (Array.isArray(condition)) {\n                result[key] = {\n                    in: condition,\n                };\n            }\n        }\n    }\n    return result;\n}\n\nfunction isDate(val: string): boolean {\n    return uuiDayjs.dayjs(val).isValid();\n}\n\nconst truePredicate = () => true;\n\nexport function getFilterPredicate<T>(filter: DataQueryFilter<T>): (e: T) => boolean {\n    filter = simplifyPredicates(filter);\n\n    if (filter == null) {\n        return truePredicate;\n    }\n\n    const predicates: ((item: T) => boolean)[] = [];\n    const keys = Object.keys(filter) as (keyof T)[];\n\n    for (let n = 0; n < keys.length; n++) {\n        const key = keys[n];\n        const condition = filter[key] as DataQueryFilterCondition<any>;\n\n        if (condition != null && typeof condition === 'object') {\n            if ('isNull' in condition) {\n                if (condition.isNull) {\n                    predicates.push((item: T) => item[key] == null);\n                } else {\n                    predicates.push((item: T) => item[key] != null);\n                }\n            }\n\n            if ('in' in condition && Array.isArray(condition.in)) {\n                const values = condition.in as any[];\n                predicates.push((item: T) => values.includes(item[key]));\n            }\n\n            if ('nin' in condition && Array.isArray(condition.nin)) {\n                const values = condition.nin as any[];\n                predicates.push((item: T) => !values.includes(item[key]));\n            }\n\n            if (condition.gte != null) {\n                const conditionValue = condition.gte;\n                predicates.push((item: T) => {\n                    const value = item[key];\n                    if (typeof value === 'string' && isDate(conditionValue)) {\n                        return uuiDayjs.dayjs(value).isSameOrAfter(conditionValue);\n                    }\n                    return !(value !== null && value !== undefined) || value >= conditionValue;\n                });\n            }\n\n            if (condition.lte != null) {\n                const conditionValue = condition.lte;\n                predicates.push((item: T) => {\n                    const value = item[key];\n                    if (typeof value === 'string' && isDate(conditionValue)) {\n                        return uuiDayjs.dayjs(value).isSameOrBefore(conditionValue);\n                    }\n                    return !(value !== null && value !== undefined) || value <= conditionValue;\n                });\n            }\n\n            if (condition.gt != null) {\n                const conditionValue = condition.gt;\n                predicates.push((item: T) => {\n                    const value = item[key];\n                    if (typeof value === 'string' && isDate(conditionValue)) {\n                        return uuiDayjs.dayjs(value).isAfter(conditionValue);\n                    }\n                    return !(value !== null && value !== undefined) || value > conditionValue;\n                });\n            }\n\n            if (condition.lt != null) {\n                const conditionValue = condition.lt;\n                predicates.push((item: T) => {\n                    const value = item[key];\n                    if (typeof value === 'string' && isDate(conditionValue)) {\n                        return uuiDayjs.dayjs(value).isBefore(conditionValue);\n                    }\n                    return !(value !== null && value !== undefined) || value < conditionValue;\n                });\n            }\n\n            if (condition.eq !== undefined && condition.eq !== null) {\n                const conditionValue = condition.eq;\n                predicates.push((item: T) => item[key] === conditionValue);\n            }\n\n            if (condition.neq !== undefined && condition.neq !== null) {\n                const conditionValue = condition.neq;\n                predicates.push((item: T) => item[key] !== conditionValue);\n            }\n\n            if ('not' in condition) {\n                const predicate = getFilterPredicate({ [key]: condition.not });\n                predicates.push((i) => !predicate(i));\n            }\n        } else {\n            predicates.push((item: T) => {\n                if (typeof condition === 'string' && isDate(condition)) {\n                    return uuiDayjs.dayjs(item[key] as any).isSame(condition);\n                } else {\n                    return item[key] === condition;\n                }\n            });\n        }\n    }\n\n    if (predicates.length === 1) {\n        return predicates[0];\n    } else if (predicates.length === 0) {\n        return truePredicate;\n    } else {\n        return (item: T) => {\n            for (let n = 0; n < predicates.length; n++) {\n                if (!predicates[n](item)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n}\n","const getRank = (match: RegExpMatchArray) => {\n    const [word] = match;\n    const { index, input } = match;\n\n    if (index === 0) {\n        return word.length === input.length || input[index + word.length] === ' ' ? 4 : 3;\n    }\n\n    return input[index - 1] === ' ' ? 2 : 1;\n};\n\nexport function getSearchFilter(searchString: string): (texts: string[]) => number | boolean {\n    if (!searchString) {\n        return () => true;\n    }\n    const searchStr = searchString.replace(/[\\s\\n\\r\\t\\0]+/g, ' ').trim(); // trim and normalize whitespaces\n\n    // split by comma-separated groups, then by spaces, and make regex of each word\n    const words = searchStr\n        .split(' ')\n        .map((word) => word.trim())\n        .filter((s) => s.length > 0)\n        .map((word) => word.trim().replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')) // esape regex characters inside the string\n        .map((word) => new RegExp(word, 'i'));\n\n    return (texts) => {\n        if (!words.length) {\n            return true;\n        }\n\n        const ranks = words.map((wordRegex) => {\n            // matching regex word with fields values\n            const wordRanks = texts.map((text) => {\n                const match = text.match(wordRegex);\n                if (match === null) {\n                    return null;\n                }\n                return getRank(match);\n            });\n\n            // if keyword was not found in every field value\n            if (wordRanks.every((rank) => rank === null)) {\n                return false;\n            }\n            return Math.max(...wordRanks);\n        });\n\n        // some keyword of a group was not found in fields values\n        if (ranks.some((rank) => !rank)) {\n            return false;\n        }\n\n        return (ranks as number[]).reduce((totalRank, rank) => totalRank + rank, 0);\n    };\n}\n","import { DataQuery } from '../../types/dataQuery';\nimport { getOrderComparer } from './getOrderComparer';\nimport { getFilterPredicate } from './getFilterPredicate';\nimport { getSearchFilter } from './getSearchFilter';\nimport { orderBy } from '../../helpers';\n\nexport function runDataQuery<TItem extends { id: any }>(allItems: TItem[], request: DataQuery<TItem> & { ids?: any[] }, searchBy?: (item: TItem) => string[]) {\n    let items = allItems || [];\n    request = request || {};\n\n    if (request.ids) {\n        return {\n            items: items.filter((i) => request.ids.includes(i.id)),\n        };\n    }\n\n    if (request.search) {\n        searchBy = searchBy || ((i: any) => [i.name]);\n        const searchFilter = getSearchFilter(request.search);\n        items = items.filter((item) => searchFilter(searchBy(item)));\n    }\n\n    if (request.filter) {\n        const predicate = getFilterPredicate(request.filter);\n        items = items.filter(predicate);\n    }\n\n    if (request.sorting) {\n        const comparer = getOrderComparer(request.sorting);\n        items.sort(comparer);\n    } else {\n        items = orderBy(items, ({ name }: any) => name);\n    }\n\n    const filteredAndSorted = items;\n    if (request.range) {\n        const from = request.range.from || 0;\n        const count = request.range.count == null ? items.length : request.range.count;\n        items = items.slice(from, from + count);\n    }\n\n    return {\n        items,\n        count: filteredAndSorted.length,\n    };\n}\n","import { useEffect, useRef } from 'react';\nimport isEqual from 'react-fast-compare';\n\n/**\n * Hook configuration, which defines if previous value will be deeply compared with new value to be saved or not.\n */\nexport interface UsePreviousConfig {\n    /**\n     * If compare is set to true, previous value will be deeply compared with the new value,\n     * and previous value will be updated only if value is changed (not the link to the object).\n     * Otherwise, previous value will be returned.\n     * If compare is false, previous value will be changed on every rerender.\n     */\n    compare?: boolean;\n}\n\n/**\n * Hook, which returns previous version of the value, passed to the arguments.\n * @param value\n * @param config - Hook configuration, which defines if previous value will be deeply compared with new value to be saved or not.\n * @param config.compare - If compare is set to true, previous value will be deeply compared with the new value,\n * and previous value will be updated only if value is changed (not the link to the object). Otherwise, previous value will be returned.\n * If compare is false, previous value will be changed on every rerender.\n * @returns previous version of the value, passed to the props.\n */\nexport function usePrevious<T>(value: T, { compare }: UsePreviousConfig = {}): T | null {\n    const previousValueRef = useRef<T>(null);\n\n    useEffect(() => {\n        if (compare) {\n            if (!isEqual(previousValueRef.current, value)) {\n                previousValueRef.current = value;\n            }\n        } else {\n            previousValueRef.current = value;\n        }\n    }, [value]);\n\n    return previousValueRef.current;\n}\n","import { IImmutableMap, IMap } from '../../../../../types';\nimport { ITreeParams } from '../treeStructure/types';\n\nexport function cloneMap<T extends IMap<any, any> | IImmutableMap<any, any>>(map: T): T extends IMap<infer TKey, infer TValue>\n    ? IMap<TKey, TValue>\n    : T extends IImmutableMap<infer TKey, infer TValue>\n        ? IImmutableMap<TKey, TValue> : never {\n    return new (map.constructor as any)(map);\n}\n\nexport function newMap<TKey, TValue>(params: Pick<ITreeParams<any, any>, 'complexIds'>) {\n    if (params.complexIds) {\n        return new CompositeKeysMap<TKey, TValue>();\n    } else {\n        return new Map<TKey, TValue>();\n    }\n}\n\nexport class CompositeKeysMap<TKey, TValue> implements IMap<TKey, TValue> {\n    map: Map<string, TValue>;\n    constructor(original?: CompositeKeysMap<TKey, TValue>) {\n        if (original) {\n            this.map = new Map(original.map);\n        } else {\n            this.map = new Map();\n        }\n    }\n\n    private keyToString(key: TKey) {\n        return key === undefined ? undefined : JSON.stringify(key);\n    }\n\n    public get(key: TKey): TValue | undefined {\n        return this.map.get(this.keyToString(key));\n    }\n\n    public set(key: TKey, value: TValue) {\n        this.map.set(this.keyToString(key), value);\n        return this;\n    }\n\n    public delete(key: TKey) {\n        return this.map.delete(this.keyToString(key));\n    }\n\n    * [Symbol.iterator](): IterableIterator<[TKey, TValue]> {\n        for (const [key, value] of this.map) {\n            yield [key !== undefined ? JSON.parse(key) : undefined, value];\n        }\n    }\n\n    public has(key: TKey) {\n        return this.map.has(this.keyToString(key));\n    }\n\n    get size() {\n        return this.map.size;\n    }\n}\n","export const ROOT_ID: undefined = undefined;\n\n// ITreeNodeStatus\nexport const PARTIALLY_LOADED = 'PARTIALLY_LOADED';\nexport const FULLY_LOADED = 'FULLY_LOADED';\nexport const EMPTY = 'EMPTY';\n\n// RecordStatus && not found item in tree\nexport const NOT_FOUND_RECORD = Symbol('NOT_FOUND_RECORD');\n\n// RecordStatus\nexport const PENDING_RECORD = Symbol('PENDING_RECORD');\nexport const LOADING_RECORD = Symbol('LOADING_RECORD');\nexport const LOADED_RECORD = Symbol('LOADED_RECORD');\nexport const FAILED_RECORD = Symbol('FAILED_RECORD');\n\nexport const PatchOrdering = {\n    TOP: Symbol('ORDERING_TOP'),\n    BOTTOM: Symbol('ORDERING_BOTTOM'),\n};\n","import { ItemsMap } from './ItemsMap';\nimport { NOT_FOUND_RECORD } from './constants';\nimport { IItemsAccessor } from './treeStructure/types';\n\nexport class ItemsAccessor<TItem, TId> implements IItemsAccessor<TItem, TId> {\n    constructor(\n        private itemsMap: ItemsMap<TId, TItem>,\n    ) {}\n\n    get = (id: TId) =>\n        this.itemsMap.has(id) ? this.itemsMap.get(id) : NOT_FOUND_RECORD;\n\n    forEach(action: (item: TItem, id: TId) => void): void {\n        this.itemsMap.forEach(action);\n    }\n\n    public static toItemsAccessor<TId, TItem>(itemsMap: ItemsMap<TId, TItem>) {\n        return new ItemsAccessor(itemsMap);\n    }\n}\n","import { DataSourceState, IImmutableMap, IMap } from '../../../../../../types';\n\nexport const getSelectedAndChecked = <TItem, TId>(\n    dataSourceState: DataSourceState<any, TId>,\n    patch: IMap<TId, TItem> | IImmutableMap<TId, TItem>,\n) => {\n    let checked: TId[] = [];\n    if (dataSourceState.checked?.length) {\n        checked = [...dataSourceState.checked];\n    }\n    if (dataSourceState.selectedId !== null && dataSourceState.selectedId !== undefined) {\n        checked = [...checked, dataSourceState.selectedId];\n    }\n\n    if (!patch || !patch.size) {\n        return checked;\n    }\n\n    return checked.filter((id) => !patch.has(id));\n};\n","import isEqual from 'react-fast-compare';\nimport { LazyDataSourceApiRequestContext, LazyDataSourceApiRequestRange } from '../../../../../../types';\nimport { TreeStructure } from '../TreeStructure';\nimport { cloneMap, newMap } from '../../helpers/map';\nimport { ItemsAccessor } from '../../ItemsAccessor';\nimport { LoadOptions, LoadAllOptions, LoadItemsOptions, LoadMissingItemsAndParentsOptions, LoadOptionsMissing } from './types';\nimport { ITreeNodeInfo } from '../types';\nimport { NOT_FOUND_RECORD } from '../../constants';\nimport { getSelectedAndChecked } from './checked';\nimport { LoadAllConfig } from '../../treeState/types';\n\nexport class FetchingHelper {\n    public static async loadAll<TItem, TId, TFilter>({\n        treeStructure,\n        itemsMap,\n        options,\n        dataSourceState,\n    }: LoadAllOptions<TItem, TId, TFilter>) {\n        const response = await options.api(\n            {\n                sorting: dataSourceState.sorting,\n                search: dataSourceState.search,\n                filter: options.filter,\n                page: dataSourceState.page,\n                pageSize: dataSourceState.pageSize,\n            },\n        );\n\n        const newItemsMap = itemsMap.clear().setItems(response.items);\n\n        return {\n            itemsMap: newItemsMap,\n            treeStructure: TreeStructure.createFromItems({\n                params: treeStructure.getParams(),\n                items: response.items,\n                itemsAccessor: ItemsAccessor.toItemsAccessor(newItemsMap),\n            }),\n            loadedItems: response.items,\n        };\n    }\n\n    public static async load<TItem, TId, TFilter = any>({\n        tree,\n        options,\n        dataSourceState,\n        patch,\n    }: LoadOptions<TItem, TId, TFilter>) {\n        const { loadedItems: loadedMissingItems, loadedItemsMap, byParentId, nodeInfoById } = await this.loadMissing<TItem, TId, TFilter>({\n            tree,\n            options,\n            dataSourceState,\n        });\n\n        const missing = getSelectedAndChecked(dataSourceState, patch);\n\n        const { loadedItems: loadedMissingItemsAndParents } = await this.loadMissingItemsAndParents<TItem, TId, TFilter>({\n            tree,\n            newItemsMap: loadedItemsMap,\n            options,\n            itemsToLoad: missing,\n        });\n\n        return {\n            loadedItems: loadedMissingItems.concat(loadedMissingItemsAndParents),\n            byParentId,\n            nodeInfoById,\n        };\n    }\n\n    private static async loadMissing<TItem, TId, TFilter = any>({\n        tree,\n        options,\n        dataSourceState,\n    }: LoadOptionsMissing<TItem, TId, TFilter>) {\n        const requiredRowsCount = dataSourceState.topIndex + dataSourceState.visibleCount;\n\n        const byParentId = newMap<TId, TId[]>(tree.getParams());\n        const nodeInfoById = newMap<TId, ITreeNodeInfo>(tree.getParams());\n\n        const newItemsMap = newMap<TId, TItem>(tree.getParams());\n        const flatten = dataSourceState.search && options.flattenSearchResults;\n        const loadAllChildren: (id: TId) => LoadAllConfig = options.loadAllChildren ?? (() => ({ nestedChildren: true, children: false }));\n\n        let newItems: TItem[] = [];\n        const loadRecursive = async (\n            parentId: TId,\n            parent: TItem,\n            { children: parentLoadAllChildren, nestedChildren: parentLoadAllNestedChildren }: LoadAllConfig,\n            remainingRowsCount: number,\n        ) => {\n            let recursiveLoadedCount = 0;\n\n            const { ids, nodeInfo, loadedItems } = await this.loadItems<TItem, TId, TFilter>({\n                tree,\n                byParentId,\n                options,\n                parentId,\n                parent,\n                dataSourceState,\n                remainingRowsCount,\n                loadAll: parentLoadAllChildren,\n            });\n\n            const { ids: originalIds, ...originalNodeInfo } = tree.getItems(parentId);\n            const currentIds = byParentId.has(parentId) ? byParentId.get(parentId) : originalIds;\n\n            if (ids !== currentIds\n                    || nodeInfo.count !== originalNodeInfo.count\n                    || nodeInfo.totalCount !== originalNodeInfo.totalCount\n                    || nodeInfo.assumedCount !== originalNodeInfo.assumedCount) {\n                nodeInfoById.set(parentId, nodeInfo);\n            }\n\n            byParentId.set(parentId, ids);\n\n            recursiveLoadedCount += ids.length;\n            if (loadedItems.length > 0) {\n                loadedItems.forEach((item) => {\n                    const id = tree.getParams().getId(item);\n                    const prevNodeInfo = nodeInfoById.get(id) ?? {};\n                    const assumedCount = flatten ? undefined : prevNodeInfo.assumedCount ?? tree.getParams().getChildCount?.(item);\n                    nodeInfoById.set(id, { ...prevNodeInfo, ...(tree.getParams().getChildCount ? { assumedCount } : {}) });\n                    newItemsMap.set(id, item);\n                });\n                newItems = newItems.concat(loadedItems);\n            }\n\n            if (!flatten && tree.getParams().getChildCount) {\n                const childrenPromises: Promise<any>[] = [];\n\n                for (let n = 0; n < ids.length; n++) {\n                    const id = ids[n];\n                    const itemInTree = tree.getById(id);\n                    let item: TItem = itemInTree === NOT_FOUND_RECORD ? undefined : itemInTree;\n                    if (newItemsMap.has(id)) {\n                        item = newItemsMap.get(id);\n                    }\n\n                    let isFolded = false;\n                    let hasChildren = false;\n\n                    if (tree.getParams().getChildCount) {\n                        // not a root node\n                        const childrenCount = tree.getParams().getChildCount(item);\n                        if (childrenCount) {\n                            // foldable\n                            isFolded = options.isFolded(item);\n                            hasChildren = true;\n                        }\n                    }\n\n                    const { nestedChildren, children } = loadAllChildren(id);\n\n                    const shouldLoadAllChildren = hasChildren && children;\n                    const loadAll = parentLoadAllNestedChildren ? parentLoadAllChildren || shouldLoadAllChildren : shouldLoadAllChildren;\n\n                    remainingRowsCount--;\n\n                    if (hasChildren && ((!isFolded && remainingRowsCount > 0) || loadAll)) {\n                        const childPromise = loadRecursive(id, item, { children: loadAll, nestedChildren }, remainingRowsCount);\n\n                        childrenPromises.push(childPromise);\n\n                        if (options.fetchStrategy === 'sequential') {\n                            const loadedCount = await childPromise;\n                            remainingRowsCount -= loadedCount;\n                            recursiveLoadedCount += loadedCount;\n                        }\n                    }\n                }\n\n                const childCounts = await Promise.all(childrenPromises);\n                if (options.fetchStrategy === 'parallel') {\n                    const recursiveChildrenCount = childCounts.reduce((a, b) => a + b, 0);\n                    recursiveLoadedCount += recursiveChildrenCount;\n                    remainingRowsCount -= recursiveChildrenCount;\n                }\n            }\n\n            return recursiveLoadedCount;\n        };\n\n        await loadRecursive(undefined, undefined, loadAllChildren(undefined), requiredRowsCount);\n\n        return {\n            tree,\n            loadedItemsMap: newItemsMap,\n            loadedItems: newItems,\n            byParentId,\n            nodeInfoById,\n        };\n    }\n\n    private static async loadMissingItemsAndParents<TItem, TId, TFilter>({\n        tree,\n        newItemsMap,\n        options,\n        itemsToLoad,\n    }: LoadMissingItemsAndParentsOptions<TItem, TId, TFilter>) {\n        const updatedItemsMap = cloneMap(newItemsMap);\n        let iteration = 0;\n        let prevMissingIds = new Set<TId>();\n        let loadedItems: TItem[] = [];\n        const isItemNotLoaded = (id: TId) => tree.getById(id) === NOT_FOUND_RECORD && !updatedItemsMap.has(id);\n\n        while (true) {\n            const missingIds = new Set<TId>();\n            if (itemsToLoad && itemsToLoad.length > 0) {\n                itemsToLoad.forEach((id) => {\n                    if (isItemNotLoaded(id)) {\n                        missingIds.add(id);\n                    }\n                });\n            }\n            if (tree.getParams().getParentId) {\n                for (const [, item] of updatedItemsMap) {\n                    const parentId = tree.getParams().getParentId(item);\n                    if (parentId != null && isItemNotLoaded(parentId)) {\n                        missingIds.add(parentId);\n                    }\n                }\n            }\n\n            if (missingIds.size === 0) {\n                break;\n            } else {\n                const ids = Array.from(missingIds);\n                const response = await options.api({ ids });\n                if (response.items.length !== ids.length) {\n                    console.error(`LazyTree: api does not returned requested items. Check that you handle 'ids' argument correctly.\n                        Read more here: https://github.com/epam/UUI/issues/89`);\n                }\n\n                const newItems = response.items.filter((item) => {\n                    const id = item ? tree.getParams().getId(item) : null;\n                    return id !== null;\n                });\n\n                newItems.forEach((item) => {\n                    const id = tree.getParams().getId(item);\n                    updatedItemsMap.set(id, item);\n                });\n\n                loadedItems = loadedItems.concat(newItems);\n                if (prevMissingIds.size === missingIds.size && isEqual(prevMissingIds, missingIds)) {\n                    break;\n                }\n\n                prevMissingIds = new Set([...missingIds]);\n            }\n            iteration++;\n\n            if (iteration > 1000) {\n                throw new Error('LazyTree: More than 1000 iterations are made to load required items and their parents by ID. Check your api implementation');\n            }\n        }\n        return { itemsMap: updatedItemsMap, loadedItems };\n    }\n\n    private static async loadItems<TItem, TId, TFilter>({\n        tree,\n        options,\n        byParentId,\n        parentId,\n        parent,\n        dataSourceState,\n        remainingRowsCount,\n        loadAll,\n    }: LoadItemsOptions<TItem, TId, TFilter>) {\n        const { ids: originalIds, count: childrenCount, totalCount, assumedCount: prevAssumedCount } = tree.getItems(parentId);\n        const inputIds = byParentId.has(parentId) ? byParentId.get(parentId) ?? originalIds : originalIds;\n\n        let ids = inputIds ?? [];\n        const loadedItems: TItem[] = [];\n\n        const flatten = dataSourceState.search && options.flattenSearchResults;\n\n        // Selection cascading forces to load all nodes under particular node\n        if (loadAll) {\n            remainingRowsCount = Number.MAX_SAFE_INTEGER;\n        }\n\n        const missingCount = Math.max(0, remainingRowsCount - ids.length);\n\n        const availableCount = childrenCount != null ? childrenCount - ids.length : missingCount;\n\n        const range: LazyDataSourceApiRequestRange = { from: ids.length };\n\n        let skipRequest = false;\n        if (!loadAll) {\n            range.count = missingCount;\n            skipRequest = options.isLoadStrict ? true : skipRequest;\n        }\n\n        if (missingCount === 0 || availableCount === 0 || skipRequest) {\n            return {\n                ids,\n                nodeInfo: { count: childrenCount, totalCount, assumedCount: prevAssumedCount },\n                loadedItems,\n            };\n        }\n\n        // Need to load additional items in the current layer\n        const requestContext: LazyDataSourceApiRequestContext<TItem, TId> = {};\n\n        if (!flatten) {\n            if (parent != null) {\n                requestContext.parentId = parentId;\n                requestContext.parent = parent;\n            } else {\n                // in flatten mode, we don't set parent and parentId even for root - as we don't want to limit results to top-level nodes only\n                requestContext.parentId = null;\n                requestContext.parent = null;\n            }\n        }\n\n        const response = await options.api(\n            {\n                sorting: dataSourceState.sorting,\n                search: dataSourceState.search,\n                filter: options.filter,\n                range,\n                page: dataSourceState.page,\n                pageSize: dataSourceState.pageSize,\n            },\n            requestContext,\n        );\n\n        const from = response.from == null ? range.from : response.from;\n\n        if (response.items?.length) {\n            ids = [...ids];\n            for (let n = 0; n < response.items.length; n++) {\n                const item = response.items[n];\n                loadedItems.push(item);\n                const id = tree.getParams().getId(item);\n                ids[n + from] = id;\n            }\n        }\n\n        let newNodesCount;\n\n        const loadedItemsCount = (response.items?.length ?? 0);\n        if (response.count !== null && response.count !== undefined) {\n            newNodesCount = response.count;\n        } else if (loadedItemsCount < missingCount) {\n            newNodesCount = from + loadedItemsCount;\n        }\n\n        let assumedCount = undefined;\n        if (!flatten && parent && tree.getParams().getChildCount) {\n            assumedCount = tree.getParams().getChildCount(parent);\n        }\n\n        let nodeInfo = { count: childrenCount, totalCount, assumedCount: prevAssumedCount };\n        if (newNodesCount !== childrenCount || assumedCount !== prevAssumedCount) {\n            nodeInfo = { ...nodeInfo, count: newNodesCount, assumedCount };\n        }\n\n        nodeInfo = { ...nodeInfo, totalCount: response.totalCount ?? totalCount };\n        return {\n            ids,\n            nodeInfo,\n            loadedItems,\n        };\n    }\n}\n","import { IImmutableMap, IMap } from '../../../../types/objects';\nimport { cloneMap, newMap } from './helpers/map';\n\nexport interface ItemsMapParams<TItem, TId> {\n    getId: (item: TItem) => TId;\n    complexIds?: boolean;\n}\n\nexport class ItemsMap<TId, TItem> implements IImmutableMap<TId, TItem> {\n    private _itemsMap: IMap<TId, TItem>;\n    private params: ItemsMapParams<TItem, TId>;\n\n    constructor(\n        itemsMap: IMap<TId, TItem>,\n        params: ItemsMapParams<TItem, TId>,\n    );\n\n    constructor(itemsMap: ItemsMap<TId, TItem>);\n\n    constructor(...args: [IMap<TId, TItem>, ItemsMapParams<TItem, TId>] | [ItemsMap<TId, TItem>]) {\n        if (args.length === 1) {\n            const [itemsMap] = args;\n            this.params = itemsMap.params;\n            this._itemsMap = cloneMap(itemsMap._itemsMap);\n        } else {\n            const [map, params] = args;\n            this.params = params;\n            this._itemsMap = map ? cloneMap(map) : newMap(params);\n        }\n    }\n\n    get(id: TId) {\n        return this._itemsMap.has(id) ? this._itemsMap.get(id) : undefined;\n    }\n\n    has(id: TId) {\n        return this._itemsMap.has(id);\n    }\n\n    set(...args: [TId, TItem] | [TId]): ItemsMap<TId, TItem> {\n        const [id, item] = args;\n        let itemsMap = cloneMap(this._itemsMap);\n\n        if (args.length > 1) {\n            itemsMap.set(id, item);\n        } else {\n            itemsMap = itemsMap.set(id);\n        }\n\n        return new ItemsMap(itemsMap, this.params);\n    }\n\n    delete(id: TId) {\n        const itemsMap = cloneMap(this._itemsMap);\n        itemsMap.delete(id);\n        return new ItemsMap(itemsMap, this.params);\n    }\n\n    forEach(action: (item: TItem, id: TId) => void) {\n        for (const [id] of this._itemsMap) {\n            action(this.get(id), id);\n        }\n    }\n\n    clear() {\n        return new ItemsMap(newMap<TId, TItem>(this.params), this.params);\n    }\n\n    setItems(items: TItem[]) {\n        let updated = false;\n        const itemsLink = cloneMap(this._itemsMap);\n\n        items.forEach((item) => {\n            const isExistingItem = itemsLink.has(this.params.getId(item));\n\n            if (!isExistingItem || (isExistingItem && item !== itemsLink.get(this.params.getId(item)))) {\n                itemsLink.set(this.params.getId(item), item);\n                updated = true;\n            }\n        });\n\n        if (updated) {\n            return new ItemsMap(itemsLink, this.params);\n        }\n\n        return this;\n    }\n\n    get size() {\n        return this._itemsMap.size;\n    }\n\n    [Symbol.iterator]() {\n        return this._itemsMap[Symbol.iterator]();\n    }\n\n    public static fromObject<TId extends symbol | string | number, TItem>(\n        obj: Record<TId, TItem>,\n        params: ItemsMapParams<TItem, TId>,\n    ) {\n        const itemsMap = newMap<TId, TItem>(params);\n        for (const [, value] of Object.entries<TItem>(obj)) {\n            itemsMap.set(params.getId(value), value);\n        }\n\n        return new ItemsMap<TId, TItem>(itemsMap, params);\n    }\n\n    public static blank<TId, TItem>(\n        params: ItemsMapParams<TItem, TId>,\n    ) {\n        return new ItemsMap<TId, TItem>(newMap<TId, TItem>(params), params);\n    }\n}\n","import { ApplySortOptions } from '../treeState/types';\n\nexport const simpleComparator = <T extends string | number>(a: T, b: T) => {\n    if (a < b) {\n        return -1;\n    }\n\n    return a === b ? 0 : 1;\n};\n\nexport const buildComparators = <TItem, TId, TFilter>(options: ApplySortOptions<TItem, TId, TFilter>) => {\n    const compareScalars = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' }).compare;\n    const comparators: ((a: TItem, b: TItem) => number)[] = [];\n\n    if (options.sorting) {\n        options.sorting.forEach((sortingOption) => {\n            const sortByFn = options.sortBy || ((i: TItem) => i[sortingOption.field as keyof TItem] ?? '');\n            const sign = sortingOption.direction === 'desc' ? -1 : 1;\n            comparators.push((a, b) => sign * compareScalars(sortByFn(a, sortingOption) + '', sortByFn(b, sortingOption) + ''));\n        });\n    }\n\n    return comparators;\n};\n\nexport const composeComparators = <TItem, TId>(comparators: ((a: TItem, b: TItem) => number)[], getId: (item: TItem) => TId) => {\n    return (a: TItem, b: TItem) => {\n        for (let n = 0; n < comparators.length; n++) {\n            const compare = comparators[n];\n            const result = compare(a, b);\n            if (result !== 0) {\n                return result;\n            }\n        }\n\n        const aId = getId(a);\n        const bId = getId(b);\n\n        const aCompareId = typeof aId === 'object' && aId !== null ? JSON.stringify(aId) : aId as string | number;\n        const bCompareId = typeof bId === 'object' && bId !== null ? JSON.stringify(bId) : bId as string | number;\n\n        return simpleComparator(aCompareId, bCompareId);\n    };\n};\n\nexport const buildSorter = <TItem, TId, TFilter>(options: ApplySortOptions<TItem, TId, TFilter>) => {\n    const comparators = buildComparators(options);\n    const composedComparator = composeComparators(comparators, options.getId);\n    return (items: TItem[]) => {\n        if (comparators.length === 0) {\n            return items;\n        }\n\n        items = [...items];\n        items.sort(composedComparator);\n        return items;\n    };\n};\n","import isEqual from 'react-fast-compare';\nimport { CascadeSelection, CascadeSelectionTypes, DataRowPathItem, DataSourceState, IMap, LazyDataSourceApi } from '../../../../types';\nimport { ITree } from './ITree';\nimport { FULLY_LOADED, NOT_FOUND_RECORD, ROOT_ID } from './constants';\nimport { FetchingHelper } from './treeStructure/helpers/FetchingHelper';\nimport { ITreeNodeInfo, ITreeParams } from './treeStructure/types';\nimport { TreeStructure } from './treeStructure';\nimport { ItemsMap } from './ItemsMap';\nimport { ItemsAccessor } from './ItemsAccessor';\nimport { newMap } from './helpers';\n\nexport interface LoadOptions<TItem, TId, TFilter = any> {\n    tree: ITree<TItem, TId>;\n    api: LazyDataSourceApi<TItem, TId, TFilter>;\n    getChildCount?(item: TItem): number;\n    isFolded?: (item: TItem) => boolean;\n    dataSourceState: DataSourceState<TFilter, TId>;\n    filter?: TFilter;\n}\n\nexport interface LoadMissingOnCheckOptions<TItem, TId, TFilter = any> extends Omit<LoadOptions<TItem, TId, TFilter>, 'withNestedChildren'> {\n    cascadeSelection?: CascadeSelection;\n    checkedId?: TId;\n    isRoot: boolean;\n    isChecked: boolean;\n}\n\n/**\n * Structured result of tree records loading.\n */\nexport interface ITreeLoadResult<TItem, TId> {\n    /**\n     * Loaded records.\n     */\n    loadedItems: TItem[];\n    /**\n     * Loaded records, structured by parents IDs.\n     */\n    byParentId: IMap<TId, TId[]>;\n    /**\n     * Loading node info, like count/assumedCount/totalCount, by IDs.\n     */\n    nodeInfoById: IMap<TId, ITreeNodeInfo>;\n}\n\nexport class Tree {\n    public static createFromItems<TItem, TId>({ params, items }: {\n        params: ITreeParams<TItem, TId>,\n        items: TItem[],\n    }) {\n        const itemsMap = ItemsMap.blank<TId, TItem>(params);\n        const itemsAccessor = ItemsAccessor.toItemsAccessor(itemsMap.setItems(items));\n        return TreeStructure.createFromItems({ params, items, itemsAccessor });\n    }\n\n    public static getParents<TItem, TId>(id: TId, tree: ITree<TItem, TId>) {\n        const parentIds: TId[] = [];\n        let parentId = id;\n        while (true) {\n            const item = tree.getById(parentId);\n            if (item === NOT_FOUND_RECORD) {\n                break;\n            }\n            parentId = tree.getParams().getParentId?.(item);\n            if (parentId === undefined) {\n                break;\n            }\n            parentIds.unshift(parentId);\n        }\n        return parentIds;\n    }\n\n    public static getPathById<TItem, TId>(id: TId, tree: ITree<TItem, TId>): DataRowPathItem<TId, TItem>[] {\n        const foundParents = this.getParents(id, tree);\n        const path: DataRowPathItem<TId, TItem>[] = [];\n        foundParents.forEach((parentId) => {\n            const parent = tree.getById(parentId);\n            if (parent === NOT_FOUND_RECORD) {\n                return;\n            }\n            const pathItem: DataRowPathItem<TId, TItem> = this.getPathItem(parent, tree);\n            path.push(pathItem);\n        });\n        return path;\n    }\n\n    public static getPathItem<TItem, TId>(item: TItem, tree: ITree<TItem, TId>): DataRowPathItem<TId, TItem> {\n        const parentId = tree.getParams().getParentId?.(item);\n        const id = tree.getParams().getId(item);\n\n        const { ids, count, status } = tree.getItems(parentId);\n        const lastId = ids[ids.length - 1];\n\n        const isLastChild = lastId !== undefined\n            && lastId === id\n            && status === FULLY_LOADED\n            && count === ids.length;\n\n        return {\n            id: tree.getParams().getId(item),\n            value: item,\n            isLastChild,\n        };\n    }\n\n    public static forEach<TItem, TId>(\n        tree: ITree<TItem, TId>,\n        action: (item: TItem, id: TId, parentId: TId, stop: () => void) => void,\n        options?: {\n            direction?: 'bottom-up' | 'top-down';\n            parentId?: TId;\n            includeParent?: boolean;\n        },\n    ) {\n        let shouldStop = false;\n        const stop = () => {\n            shouldStop = true;\n        };\n\n        options = { direction: 'top-down', parentId: undefined, ...options };\n        if (options.includeParent == null) {\n            options.includeParent = options.parentId != null;\n        }\n\n        const iterateNodes = (ids: TId[]) => {\n            if (shouldStop) return;\n            ids.forEach((id) => {\n                if (shouldStop) return;\n                const item = tree.getById(id);\n                const parentId = item !== NOT_FOUND_RECORD ? tree.getParams().getParentId?.(item) : undefined;\n                walkChildrenRec(item === NOT_FOUND_RECORD ? undefined : item, id, parentId);\n            });\n        };\n\n        const walkChildrenRec = (item: TItem, id: TId, parentId: TId) => {\n            if (options.direction === 'top-down') {\n                action(item, id, parentId, stop);\n            }\n            const { ids: childrenIds } = tree.getItems(id);\n            childrenIds && iterateNodes(childrenIds);\n            if (options.direction === 'bottom-up') {\n                action(item, id, parentId, stop);\n            }\n        };\n\n        if (options.includeParent) {\n            iterateNodes([options.parentId]);\n        } else {\n            iterateNodes(tree.getItems(options.parentId).ids);\n        }\n    }\n\n    public static forEachChildren<TItem, TId>(\n        tree: ITree<TItem, TId>,\n        action: (id: TId) => void,\n        isSelectable: (id: TId, item: TItem | typeof NOT_FOUND_RECORD) => boolean,\n        parentId?: TId,\n        includeParent: boolean = true,\n    ) {\n        this.forEach(\n            tree,\n            (item, id) => {\n                if (item && isSelectable(id, item)) {\n                    action(id);\n                }\n            },\n            { parentId: parentId, includeParent },\n        );\n    }\n\n    public static async load<TItem, TId, TFilter = any>({\n        tree,\n        dataSourceState,\n        api,\n        getChildCount,\n        isFolded,\n        filter,\n    }: LoadOptions<TItem, TId, TFilter>): Promise<ITreeLoadResult<TItem, TId>> {\n        return await FetchingHelper.load<TItem, TId, TFilter>({\n            tree,\n            options: {\n                api,\n                getChildCount,\n                isFolded,\n                filter: { ...dataSourceState?.filter, ...filter },\n            },\n            dataSourceState,\n        });\n    }\n\n    public static async loadMissingOnCheck<TItem, TId, TFilter = any>({\n        tree,\n        dataSourceState,\n        api,\n        getChildCount,\n        isFolded,\n        filter,\n        cascadeSelection,\n        isRoot,\n        isChecked,\n        checkedId,\n    }: LoadMissingOnCheckOptions<TItem, TId, TFilter>): Promise<ITree<TItem, TId> | ITreeLoadResult<TItem, TId>> {\n        const isImplicitMode = cascadeSelection === CascadeSelectionTypes.IMPLICIT;\n\n        if (!cascadeSelection && !isRoot) {\n            return tree;\n        }\n\n        const parents = this.getParents(checkedId, tree);\n        return await FetchingHelper.load<TItem, TId, TFilter>({\n            tree,\n            options: {\n                api,\n                getChildCount,\n                isFolded,\n                filter: { ...dataSourceState?.filter, ...filter },\n                loadAllChildren: (itemId) => {\n                    const loadAllConfig = { nestedChildren: !isImplicitMode, children: false };\n                    if (!cascadeSelection) {\n                        return { ...loadAllConfig, children: isChecked && isRoot };\n                    }\n\n                    if (!isChecked && isRoot) {\n                        return { ...loadAllConfig, children: false };\n                    }\n\n                    if (isImplicitMode) {\n                        return { ...loadAllConfig, children: itemId === ROOT_ID || parents.some((parent) => isEqual(parent, itemId)) };\n                    }\n\n                    const { ids } = tree.getItems(undefined);\n                    const rootIsNotLoaded = ids.length === 0;\n\n                    const shouldLoadChildrenAfterSearch = (!!dataSourceState.search?.length\n                        && (parents.some((parent) => isEqual(parent, itemId))\n                        || (itemId === ROOT_ID && rootIsNotLoaded)));\n\n                    // `isEqual` is used, because complex ids can be recreated after fetching of parents.\n                    // So, they should be compared not by reference, but by value.\n                    const shouldLoadAllChildren = isRoot\n                        || isEqual(itemId, checkedId)\n                        || shouldLoadChildrenAfterSearch;\n\n                    return { children: shouldLoadAllChildren, nestedChildren: !shouldLoadChildrenAfterSearch };\n                },\n                isLoadStrict: true,\n            },\n            dataSourceState: { ...dataSourceState, search: null },\n        });\n    }\n\n    public static computeSubtotals<TItem, TId, TSubtotals>(\n        tree: ITree<TItem, TId>,\n        get: (item: TItem, hasChildren: boolean) => TSubtotals,\n        add: (a: TSubtotals, b: TSubtotals) => TSubtotals,\n    ): IMap<TId, TSubtotals> {\n        const subtotalsMap = newMap<TId | undefined, TSubtotals>(tree.getParams());\n\n        Tree.forEach(\n            tree,\n            (item, id, parentId) => {\n                const { ids } = tree.getItems(id);\n                const hasChildren = ids.length > 0;\n                let itemSubtotals = get(item, hasChildren);\n\n                // add already computed children subtotals\n                if (subtotalsMap.has(id)) {\n                    itemSubtotals = add(itemSubtotals, subtotalsMap.get(id));\n                }\n\n                // store\n                subtotalsMap.set(id, itemSubtotals);\n\n                // add value to parent\n                let parentSubtotals: TSubtotals;\n                if (!subtotalsMap.has(parentId)) {\n                    parentSubtotals = itemSubtotals;\n                } else {\n                    parentSubtotals = add(itemSubtotals, subtotalsMap.get(parentId));\n                }\n                subtotalsMap.set(parentId, parentSubtotals);\n            },\n            { direction: 'bottom-up' },\n        );\n        return subtotalsMap;\n    }\n}\n","import { IMap } from '../../../../../types';\nimport { ITreeNodeInfo, ITreeParams, IItemsAccessor } from './types';\nimport { newMap } from '../helpers/map';\nimport { EMPTY, FULLY_LOADED, NOT_FOUND_RECORD, PARTIALLY_LOADED } from '../constants';\nimport { ItemsMap } from '../ItemsMap';\nimport { ITree, ITreeItemsInfo, ITreeNodeStatus } from '../ITree';\nimport { Tree } from '../Tree';\n\nexport class TreeStructure<TItem, TId> implements ITree<TItem, TId> {\n    constructor(\n        private _params: ITreeParams<TItem, TId>,\n        private readonly _itemsAccessor: IItemsAccessor<TItem, TId>,\n        protected readonly _byParentId: IMap<TId, TId[]> = newMap(_params),\n        protected readonly _nodeInfoById: IMap<TId, ITreeNodeInfo> = newMap(_params),\n    ) {}\n\n    public get itemsAccessor() {\n        return this._itemsAccessor;\n    }\n\n    public getParams() {\n        return this._params;\n    }\n\n    public get byParentId() {\n        return this._byParentId;\n    }\n\n    public get nodeInfoById() {\n        return this._nodeInfoById;\n    }\n\n    public getRootItems() {\n        return this.getItems(undefined).ids\n            .map((id) => this.itemsAccessor.get(id)!)\n            .filter<TItem>((item): item is TItem => item !== NOT_FOUND_RECORD);\n    }\n\n    public getById(id: TId) {\n        return this.itemsAccessor.get(id);\n    }\n\n    public getItems(parentId?: TId): ITreeItemsInfo<TId> {\n        const currentParentId = parentId ?? undefined;\n        const ids = this.byParentId.get(currentParentId) ?? [];\n        const { count, ...restNodeInfo } = this.nodeInfoById.get(currentParentId) || {};\n\n        let status: ITreeNodeStatus = count === undefined ? PARTIALLY_LOADED : EMPTY;\n        if (count !== 0 && ids.length === count) {\n            status = FULLY_LOADED;\n        }\n\n        return { ids, count, status, ...restNodeInfo };\n    }\n\n    public getChildren(parentId: TId) {\n        const { ids } = this.getItems(parentId);\n        const children = ids.map((id) => this.itemsAccessor.get(id));\n        return children.filter<TItem>((item): item is TItem => item !== NOT_FOUND_RECORD);\n    }\n\n    public getTotalCount() {\n        let count = undefined;\n        for (const [, info] of this.nodeInfoById) {\n            if (info.count == null) {\n                // TBD: getTotalCount() is used for totalCount, but we can't have correct count until all branches are loaded\n                return null;\n            } else {\n                if (count === undefined) {\n                    count = 0;\n                }\n                count += info.count;\n            }\n        }\n        return count;\n    }\n\n    public computeSubtotals<TSubtotals>(get: (item: TItem, hasChildren: boolean) => TSubtotals, add: (a: TSubtotals, b: TSubtotals) => TSubtotals) {\n        const subtotalsMap = newMap<TId | undefined, TSubtotals>(this.getParams());\n\n        Tree.forEach(\n            this,\n            (item, id, parentId) => {\n                let itemSubtotals = get(item, this.byParentId.has(id));\n\n                // add already computed children subtotals\n                if (subtotalsMap.has(id)) {\n                    itemSubtotals = add(itemSubtotals, subtotalsMap.get(id));\n                }\n\n                // store\n                subtotalsMap.set(id, itemSubtotals);\n\n                // add value to parent\n                let parentSubtotals: TSubtotals;\n                if (!subtotalsMap.has(parentId)) {\n                    parentSubtotals = itemSubtotals;\n                } else {\n                    parentSubtotals = add(itemSubtotals, subtotalsMap.get(parentId));\n                }\n                subtotalsMap.set(parentId, parentSubtotals);\n            },\n            { direction: 'bottom-up' },\n        );\n        return subtotalsMap;\n    }\n\n    public static create<TItem, TId>(\n        params: ITreeParams<TItem, TId>,\n        itemsAccessor: IItemsAccessor<TItem, TId>,\n        byParentId?: IMap<TId, TId[]>,\n        nodeInfoById?: IMap<TId, ITreeNodeInfo>,\n    ): TreeStructure<TItem, TId> {\n        return new TreeStructure(params, itemsAccessor, byParentId, nodeInfoById);\n    }\n\n    public static withNewItemsAccessor<TItem, TId>(itemsAccessor: IItemsAccessor<TItem, TId>, treeStructure: TreeStructure<TItem, TId>) {\n        return TreeStructure.create<TItem, TId>(treeStructure.getParams(), itemsAccessor, treeStructure.byParentId, treeStructure.nodeInfoById);\n    }\n\n    public static createFromItems<TItem, TId>({\n        params,\n        items,\n        itemsAccessor,\n    }: {\n        params: ITreeParams<TItem, TId>,\n        items: TItem[] | ItemsMap<TId, TItem>,\n        itemsAccessor: IItemsAccessor<TItem, TId>,\n    }) {\n        const byParentId = newMap<TId, TId[]>(params);\n\n        const itemsMap = newMap<TId, TItem>(params);\n\n        items.forEach((item) => {\n            const parentId = params.getParentId?.(item) ?? undefined;\n\n            if (!byParentId.has(parentId)) {\n                byParentId.set(parentId, []);\n            }\n            const children = byParentId.get(parentId);\n            children.push(params.getId(item));\n\n            byParentId.set(parentId, children);\n            itemsMap.set(parentId, item);\n        });\n\n        const newNodeInfoById = newMap<TId, ITreeNodeInfo>(params);\n        for (const [parentId, ids] of byParentId) {\n            const assumedCount = itemsMap.has(parentId) ? params.getChildCount?.(itemsMap.get(parentId)) : undefined;\n            newNodeInfoById.set(parentId, { count: ids.length, ...(params.getChildCount ? { assumedCount } : {}) });\n        }\n\n        // if items is empty, count should be defined, otherwise, loading placeholders will be rendered.\n        if (!newNodeInfoById.size) {\n            newNodeInfoById.set(undefined, { count: 0 });\n        }\n\n        return this.create<TItem, TId>(params, itemsAccessor, byParentId, newNodeInfoById);\n    }\n}\n","import isEqual from 'react-fast-compare';\nimport { CascadeSelectionTypes } from '../../../../../../types';\nimport { Tree } from '../../Tree';\nimport { NOT_FOUND_RECORD, ROOT_ID } from '../../constants';\nimport { newMap } from '../../helpers/map';\nimport { ActForCheckableOptions, CascadeSelectionOptions, CheckParentsWithFullCheckOptions, ClearAllOptions, ClearIfTreeNotLoadedOptions, ClearUnknownItemsOptions, SelectionOptions } from './types';\n\nexport class CheckingHelper {\n    public static cascadeSelection<TItem, TId>({\n        tree,\n        currentCheckedIds,\n        checkedId,\n        isChecked,\n        isCheckable,\n        isUnknown,\n        cascadeSelectionType,\n    }: CascadeSelectionOptions<TItem, TId>) {\n        const isImplicitMode = cascadeSelectionType === CascadeSelectionTypes.IMPLICIT;\n        let checkedIdsMap = newMap<TId, boolean>(tree.getParams());\n        if (!(checkedId === ROOT_ID && isImplicitMode)) {\n            currentCheckedIds.forEach((id) => checkedIdsMap.set(id, true));\n        }\n        const optionsWithDefaults = { isCheckable: isCheckable ?? (() => true), cascadeSelectionType };\n\n        const { count } = tree.getItems(undefined);\n        const treeIsLoaded = count !== 0;\n        // If clear items while tree is not loaded yet (while clearing tags of PickerInput before opening body).\n        if (!treeIsLoaded && !isChecked) {\n            checkedIdsMap = this.clearIfTreeNotLoaded({\n                tree,\n                checkedIdsMap,\n                checkedId,\n                isCheckable: optionsWithDefaults.isCheckable,\n            });\n        }\n\n        if (treeIsLoaded && !optionsWithDefaults.cascadeSelectionType) {\n            checkedIdsMap = this.simpleSelection({\n                tree,\n                checkedIdsMap,\n                checkedId,\n                isChecked,\n                ...optionsWithDefaults,\n            });\n        }\n\n        if (treeIsLoaded && (\n            optionsWithDefaults.cascadeSelectionType === true\n            || optionsWithDefaults.cascadeSelectionType === CascadeSelectionTypes.EXPLICIT)\n        ) {\n            checkedIdsMap = this.explicitCascadeSelection({\n                tree,\n                checkedIdsMap,\n                checkedId,\n                isChecked,\n                ...optionsWithDefaults,\n            });\n        }\n\n        if (treeIsLoaded && optionsWithDefaults.cascadeSelectionType === CascadeSelectionTypes.IMPLICIT) {\n            checkedIdsMap = this.implicitCascadeSelection({\n                tree,\n                checkedIdsMap,\n                checkedId,\n                isChecked,\n                ...optionsWithDefaults,\n            });\n        }\n\n        if (!isChecked && checkedId === ROOT_ID && checkedIdsMap.size > 0) {\n            checkedIdsMap = this.clearUnknownItems({ checkedIdsMap, isUnknown });\n        }\n\n        const result = [];\n        for (const [id, value] of checkedIdsMap) {\n            value && result.push(id);\n        }\n\n        return result;\n    }\n\n    private static simpleSelection<TItem, TId>({\n        tree,\n        checkedIdsMap,\n        checkedId,\n        isChecked,\n        isCheckable,\n    }: SelectionOptions<TItem, TId>) {\n        if (isChecked) {\n            // eslint-disable-next-line eqeqeq\n            if (checkedId != ROOT_ID) {\n                checkedIdsMap.set(checkedId, true);\n            } else {\n                Tree.forEachChildren<TItem, TId>(\n                    tree,\n                    (id) => { checkedIdsMap.set(id, true); },\n                    isCheckable,\n                );\n            }\n            return checkedIdsMap;\n        }\n\n        // eslint-disable-next-line eqeqeq\n        if (checkedId != ROOT_ID) {\n            checkedIdsMap.delete(checkedId);\n            return checkedIdsMap;\n        }\n\n        return this.clearAllChecked({ tree, checkedIdsMap, isCheckable });\n    }\n\n    private static clearAllChecked<TItem, TId>({\n        tree,\n        checkedIdsMap,\n        isCheckable,\n    }: ClearAllOptions<TItem, TId>) {\n        for (const [checkedItemId, isItemChecked] of checkedIdsMap) {\n            if (isItemChecked) {\n                this.actForCheckable({\n                    tree,\n                    action: (id) => checkedIdsMap.delete(id),\n                    isCheckable,\n                    id: checkedItemId,\n                });\n            }\n        }\n        return checkedIdsMap;\n    }\n\n    private static actForCheckable<TItem, TId>({\n        tree,\n        action,\n        isCheckable,\n        id,\n    }: ActForCheckableOptions<TItem, TId>) {\n        const item = tree.getById(id);\n        if (isCheckable(id, item)) {\n            action(id);\n        }\n    }\n\n    private static explicitCascadeSelection<TItem, TId>({\n        tree,\n        checkedIdsMap,\n        checkedId,\n        isChecked,\n        isCheckable,\n    }: SelectionOptions<TItem, TId>) {\n        if (isChecked) {\n            // eslint-disable-next-line eqeqeq\n            if (checkedId != ROOT_ID) {\n                checkedIdsMap.set(checkedId, true);\n            }\n            // check all children recursively\n            Tree.forEachChildren<TItem, TId>(\n                tree,\n                // eslint-disable-next-line eqeqeq\n                (id) => id != ROOT_ID && checkedIdsMap.set(id, true),\n                isCheckable,\n                checkedId,\n            );\n            return this.checkParentsWithFullCheck({ tree, checkedIdsMap, checkedId, isCheckable });\n        }\n\n        // eslint-disable-next-line eqeqeq\n        if (checkedId != ROOT_ID) {\n            checkedIdsMap.delete(checkedId);\n            // uncheck all children recursively\n            Tree.forEachChildren<TItem, TId>(\n                tree,\n                (id) => checkedIdsMap.delete(id),\n                isCheckable,\n                checkedId,\n            );\n\n            Tree.getParents(checkedId, tree).forEach((parentId) => checkedIdsMap.delete(parentId));\n\n            return checkedIdsMap;\n        }\n\n        return this.clearAllChecked({ tree, checkedIdsMap, isCheckable });\n    }\n\n    private static implicitCascadeSelection<TItem, TId>({\n        tree,\n        checkedIdsMap,\n        checkedId,\n        isChecked,\n        isCheckable,\n    }: SelectionOptions<TItem, TId>) {\n        if (isChecked) {\n            // eslint-disable-next-line eqeqeq\n            if (checkedId != ROOT_ID) {\n                checkedIdsMap.set(checkedId, true);\n            }\n\n            // In implicit mode, no children are loaded into the parent.\n            // When some child is checked and the search is cleared, while checking the top parent no children will be loaded,\n            // so there will be no children in the list of checked parent's children. Because of such behavior, explicitly checked\n            // children will not be removed from the list.\n            // To remove them, it is required to pass through all the checked items and check, if their parents don't contain the checked item.\n            if (checkedIdsMap.size) {\n                for (const [id] of checkedIdsMap) {\n                    if (isEqual(id, checkedId)) {\n                        continue;\n                    }\n                    const path = Tree.getPathById(id, tree);\n                    if (path.some((item) => isEqual(item.id, checkedId))) {\n                        checkedIdsMap.delete(id);\n                    }\n                }\n            }\n\n            if (checkedId === ROOT_ID) {\n                const { ids: childrenIds } = tree.getItems(checkedId);\n\n                // if selectedId is undefined and it is selected, that means selectAll\n                childrenIds.forEach((id) => checkedIdsMap.set(id, true));\n            }\n            // check parents if all children are checked\n            return this.checkParentsWithFullCheck({\n                tree,\n                checkedIdsMap,\n                checkedId,\n                isCheckable,\n                removeExplicitChildrenSelection: true,\n            });\n        }\n\n        // eslint-disable-next-line eqeqeq\n        if (checkedId != ROOT_ID) {\n            checkedIdsMap.delete(checkedId);\n\n            const selectNeighboursOnly = (itemId: TId) => {\n                const item = tree.getById(itemId);\n                if (item === NOT_FOUND_RECORD) {\n                    return;\n                }\n\n                const parentId = tree.getParams().getParentId?.(item);\n                const parents = Tree.getParents(itemId, tree);\n                // if some parent is checked, it is required to check all children explicitly,\n                // except unchecked one.\n                const someParentIsChecked = parents.some((parent) => checkedIdsMap.get(parent));\n                tree.getItems(parentId).ids.forEach((id) => {\n                    if (itemId !== id && someParentIsChecked) {\n                        checkedIdsMap.set(id, true);\n                    }\n                });\n                checkedIdsMap.delete(parentId);\n            };\n\n            const parents = Tree.getParents(checkedId, tree);\n            [checkedId, ...parents.reverse()].forEach(selectNeighboursOnly);\n\n            return checkedIdsMap;\n        }\n\n        return this.clearAllChecked({ tree, checkedIdsMap, isCheckable });\n    }\n\n    private static checkParentsWithFullCheck<TItem, TId>({\n        tree,\n        checkedIdsMap,\n        checkedId,\n        isCheckable,\n        removeExplicitChildrenSelection,\n    }: CheckParentsWithFullCheckOptions<TItem, TId>) {\n        Tree.getParents(checkedId, tree)\n            .reverse()\n            .forEach((parentId) => {\n                const { ids: childrenIds } = tree.getItems(parentId);\n                if (childrenIds && childrenIds.every((childId) => checkedIdsMap.has(childId))) {\n                    // eslint-disable-next-line eqeqeq\n                    if (parentId != ROOT_ID) {\n                        checkedIdsMap.set(parentId, true);\n                    }\n                    if (removeExplicitChildrenSelection) {\n                        Tree.forEachChildren(\n                            tree,\n                            (id) => checkedIdsMap.delete(id),\n                            isCheckable,\n                            parentId,\n                            false,\n                        );\n                    }\n                }\n            });\n        return checkedIdsMap;\n    }\n\n    private static clearIfTreeNotLoaded<TItem, TId>({\n        tree,\n        checkedIdsMap,\n        checkedId,\n        isCheckable,\n    }: ClearIfTreeNotLoadedOptions<TItem, TId>) {\n        if (checkedId !== ROOT_ID) {\n            const item = tree.getById(checkedId);\n            if (isCheckable(checkedId, item)) {\n                checkedIdsMap.delete(checkedId);\n            }\n        } else {\n            for (const [selectedItemId, isItemSelected] of checkedIdsMap) {\n                const selectedItem = tree.getById(selectedItemId);\n                if (isItemSelected && isCheckable(selectedItemId, selectedItem)) {\n                    checkedIdsMap.delete(selectedItemId);\n                }\n            }\n        }\n        return checkedIdsMap;\n    }\n\n    private static clearUnknownItems<TId>({\n        checkedIdsMap,\n        isUnknown,\n    }: ClearUnknownItemsOptions<TId>) {\n        for (const [selectedItemId, isItemSelected] of checkedIdsMap) {\n            if (isItemSelected && isUnknown(selectedItemId)) {\n                checkedIdsMap.delete(selectedItemId);\n            }\n        }\n        return checkedIdsMap;\n    }\n}\n","import { TreeStructure } from '../TreeStructure';\nimport { ApplyFilterToTreeSnapshotOptions, FilterOptions } from './types';\n\nexport class FilterHelper {\n    public static filter<TItem, TId, TFilter>({ treeStructure, getFilter, filter }: FilterOptions<TItem, TId, TFilter>): TreeStructure<TItem, TId> {\n        const isMatchingFilter = getFilter?.(filter);\n        return this.applyFilterToTreeSnapshot({ treeStructure, filter: isMatchingFilter });\n    }\n\n    private static applyFilterToTreeSnapshot<TItem, TId>({ treeStructure, filter }: ApplyFilterToTreeSnapshotOptions<TItem, TId>) {\n        if (!filter) return treeStructure;\n\n        const matchedItems: TItem[] = [];\n        const applyFilterRec = (items: TItem[]) => {\n            let isSomeMatching: number | boolean = false;\n            items.forEach((item) => {\n                const isItemMatching = filter(item);\n                const id = treeStructure.getParams().getId(item);\n                const isSomeChildMatching = applyFilterRec(treeStructure.getChildren(id));\n                const isMatching = isItemMatching || isSomeChildMatching;\n                if (isMatching) {\n                    matchedItems.push(item);\n                }\n\n                if (!isSomeMatching) {\n                    isSomeMatching = isMatching;\n                }\n            });\n\n            return isSomeMatching;\n        };\n\n        applyFilterRec(treeStructure.getRootItems());\n\n        return TreeStructure.createFromItems({\n            itemsAccessor: treeStructure.itemsAccessor,\n            params: treeStructure.getParams(),\n            items: matchedItems,\n        });\n    }\n}\n","import { TreeStructure } from '../TreeStructure';\nimport { getSearchFilter } from '../../../../../querying';\nimport { ApplySearchToTreeSnapshotOptions, SearchOptions } from './types';\nimport { orderBy } from '../../../../../../helpers';\n\nexport class SearchHelper {\n    public static search<TItem, TId, TFilter>(options: SearchOptions<TItem, TId, TFilter>): TreeStructure<TItem, TId> {\n        const search = this.buildSearchFilter(options);\n        return this.applySearchToTree({ treeStructure: options.treeStructure, search, sortSearchByRelevance: options.sortSearchByRelevance });\n    }\n\n    private static buildSearchFilter<TItem, TId, TFilter>({ search, getSearchFields }: SearchOptions<TItem, TId, TFilter>) {\n        if (!search) return null;\n\n        if (!getSearchFields) {\n            console.warn('[Tree] Search value is set, but options.getSearchField is not specified. Nothing to search on.');\n            return null;\n        }\n        const searchFilter = getSearchFilter(search);\n        return (i: TItem) => searchFilter(getSearchFields(i));\n    }\n\n    private static applySearchToTree<TItem, TId>({ treeStructure, search, sortSearchByRelevance }: ApplySearchToTreeSnapshotOptions<TItem, TId>) {\n        if (!search) return treeStructure;\n\n        const matchedItems: TItem[] = [];\n        const ranks: Map<TId, number> = new Map();\n        const applySearchRec = (items: TItem[]) => {\n            let isSomeMatching: number | boolean = false;\n            items.forEach((item) => {\n                const isItemMatching = search(item);\n                const id = treeStructure.getParams().getId(item);\n                const isSomeChildMatching = applySearchRec(treeStructure.getChildren(id));\n                const isMatching = isItemMatching || isSomeChildMatching;\n                if (isMatching !== false) {\n                    matchedItems.push(item);\n                    if (typeof isMatching !== 'boolean') {\n                        const rank = ranks.has(id) ? Math.max(ranks.get(id), isMatching) : isMatching;\n                        ranks.set(treeStructure.getParams().getId(item), rank);\n                    }\n                }\n\n                if (!isSomeMatching) {\n                    isSomeMatching = isMatching;\n                } else if (typeof isMatching === 'number') {\n                    isSomeMatching = typeof isSomeMatching === 'number'\n                        ? Math.max(isMatching, isSomeMatching)\n                        : isMatching;\n                }\n            });\n\n            return isSomeMatching;\n        };\n\n        applySearchRec(treeStructure.getRootItems());\n\n        const searchItems = sortSearchByRelevance ? this.sortByRanks(matchedItems, ranks, treeStructure.getParams().getId) : matchedItems;\n\n        return TreeStructure.createFromItems({\n            itemsAccessor: treeStructure.itemsAccessor,\n            params: treeStructure.getParams(),\n            items: searchItems,\n        });\n    }\n\n    private static sortByRanks<TItem, TId>(items: TItem[], ranks: Map<TId, number>, getId: (item: TItem) => TId) {\n        if (ranks.size === 0) {\n            return items;\n        }\n        const itemsToSort = [...items];\n\n        return orderBy(itemsToSort, (item) => {\n            const id = getId(item);\n            if (!ranks.has(id)) {\n                return 0;\n            }\n            return ranks.get(id);\n        }, 'desc');\n    }\n}\n","import { buildSorter } from '../../helpers';\nimport { TreeStructure } from '../TreeStructure';\nimport { SortOptions } from './types';\n\nexport class SortHelper {\n    public static sort<TItem, TId, TFilter>({ treeStructure, ...options }: SortOptions<TItem, TId, TFilter>) {\n        const sort = buildSorter(options);\n        const sortedItems: TItem[][] = [];\n        const sortRec = (items: TItem[]) => {\n            sortedItems.push(sort(items));\n            items.forEach((item) => {\n                const id = treeStructure.getParams().getId(item);\n                const children = treeStructure.getChildren(id);\n                sortRec(children);\n            });\n        };\n\n        sortRec(treeStructure.getRootItems());\n        return TreeStructure.createFromItems({\n            params: treeStructure.getParams(),\n            itemsAccessor: treeStructure.itemsAccessor,\n            items: sortedItems.flat(),\n        });\n    }\n}\n","import { ItemsMap, ItemsMapParams } from './ItemsMap';\n\nexport type OnUpdate<TId, TItem> = (newItemsMap: ItemsMap<TId, TItem>) => void;\n\nexport interface ModificationOptions {\n    reset?: boolean;\n    on?: 'load' | 'patch'\n}\n\nexport interface ItemsStorageParams<TItem, TId> {\n    items?: TItem[];\n    params: ItemsMapParams<TItem, TId>;\n}\n\n/**\n * Storage of items with subscriptions. Enables sharing loaded data between multiple consumers.\n * @internal For internal usage only. API can be changed in future releases.\n */\nexport class ItemsStorage<TItem, TId> {\n    private subs: Map<OnUpdate<TId, TItem>, void> = new Map();\n    private _itemsMap: ItemsMap<TId, TItem>;\n\n    constructor({ items, params }: ItemsStorageParams<TItem, TId>) {\n        this._itemsMap = new ItemsMap(\n            null,\n            params,\n        );\n        if (items?.length) {\n            this.setItems(items);\n        }\n    }\n\n    subscribe(onUpdate: OnUpdate<TId, TItem>) {\n        this.subs.set(onUpdate);\n        onUpdate(this._itemsMap);\n        return () => this.subs.delete(onUpdate);\n    }\n\n    setItems = (items: TItem[], options?: ModificationOptions) => {\n        const itemsMap = options?.reset\n            ? this._itemsMap.clear().setItems(items)\n            : this._itemsMap.setItems(items);\n\n        if (itemsMap !== this._itemsMap) {\n            this._itemsMap = itemsMap;\n            this.subs.forEach((_, onUpdate) => onUpdate(itemsMap));\n        }\n\n        return this._itemsMap;\n    };\n\n    public getItemsMap() {\n        return this._itemsMap;\n    }\n}\n","import { useCallback, useRef } from 'react';\nimport { CascadeSelectionTypes, DataSourceState, LazyDataSourceApi } from '../../../../../../../types';\nimport isEqual from 'react-fast-compare';\nimport { TreeState } from '../../../treeState';\nimport { Tree } from '../../../Tree';\nimport { LazyTreeProps } from './types';\nimport { CommonTreeConfig } from '../types';\nimport { ROOT_ID } from '../../../constants';\nimport { LoadAllConfig, TreeStructureId } from '../../../treeState/types';\n\nexport interface UseLoadDataProps<TItem, TId, TFilter = any> extends\n    Pick<LazyTreeProps<TItem, TId, TFilter>, 'getChildCount'>,\n    Pick<CommonTreeConfig<TItem, TId, TFilter>, 'dataSourceState' | 'cascadeSelection'> {\n\n    api: LazyDataSourceApi<TItem, TId, TFilter>;\n    filter?: TFilter;\n    isFolded: (item: TItem) => boolean;\n    fetchStrategy?: 'sequential' | 'parallel';\n    flattenSearchResults?: boolean;\n    getChildCount?(item: TItem): number;\n}\n\nexport interface LoadResult<TItem, TId> {\n    isUpdated: boolean;\n    isOutdated: boolean;\n    tree: TreeState<TItem, TId>;\n}\n\ninterface LoadMissingOptions<TItem, TId, TFilter> {\n    using?: TreeStructureId;\n    tree: TreeState<TItem, TId>;\n    abortInProgress?: boolean;\n    loadAllChildren?(id: TId): LoadAllConfig;\n    isLoadStrict?: boolean;\n    dataSourceState?: DataSourceState<TFilter, TId>;\n}\n\nexport function useLoadData<TItem, TId, TFilter = any>(\n    props: UseLoadDataProps<TItem, TId, TFilter>,\n) {\n    const { api, filter, isFolded, cascadeSelection } = props;\n\n    const promiseInProgressRef = useRef<Promise<LoadResult<TItem, TId>>>();\n\n    const loadMissingImpl = useCallback(async ({\n        using,\n        tree,\n        loadAllChildren = () => ({ nestedChildren: true, children: false }),\n        isLoadStrict,\n        dataSourceState,\n    }: LoadMissingOptions<TItem, TId, TFilter>): Promise<LoadResult<TItem, TId>> => {\n        const loadingTree = tree;\n        const completeDsState = { ...props.dataSourceState, ...dataSourceState };\n        try {\n            const newTreePromise = tree.load({\n                using,\n                options: {\n                    ...props,\n                    loadAllChildren,\n                    isLoadStrict,\n                    isFolded,\n                    api,\n                    filter: {\n                        ...filter,\n                        ...props.dataSourceState?.filter,\n                        ...dataSourceState?.filter,\n                    },\n                },\n                dataSourceState: completeDsState,\n            });\n\n            const newTree = await newTreePromise;\n            const linkToTree = tree;\n\n            // If tree is changed during this load, than there was reset occurred (new value arrived)\n            // We need to tell caller to reject this result\n            const isOutdated = linkToTree !== loadingTree;\n            const isUpdated = linkToTree !== newTree;\n            return { isUpdated, isOutdated, tree: newTree };\n        } catch (e) {\n            // TBD - correct error handling\n            console.error('LazyListView: Error while loading items.', e);\n            return { isUpdated: false, isOutdated: false, tree: loadingTree };\n        }\n    }, [isFolded, api, filter, props.dataSourceState]);\n\n    const loadMissing = useCallback(({\n        tree,\n        using,\n        abortInProgress,\n        loadAllChildren,\n        isLoadStrict,\n        dataSourceState,\n    }: LoadMissingOptions<TItem, TId, TFilter>): Promise<LoadResult<TItem, TId>> => {\n        // Make tree updates sequential, by executing all consequent calls after previous promise completed\n        if (!promiseInProgressRef.current || abortInProgress) {\n            promiseInProgressRef.current = Promise.resolve({ isUpdated: false, isOutdated: false, tree });\n        }\n\n        promiseInProgressRef.current = promiseInProgressRef.current.then(({ tree: currentTree }) =>\n            loadMissingImpl({ tree: currentTree, using, loadAllChildren, isLoadStrict, dataSourceState }));\n\n        return promiseInProgressRef.current;\n    }, [loadMissingImpl]);\n\n    const loadMissingOnCheck = useCallback(async (currentTree: TreeState<TItem, TId>, id: TId, isChecked: boolean, isRoot: boolean) => {\n        const isImplicitMode = cascadeSelection === CascadeSelectionTypes.IMPLICIT;\n\n        if (!cascadeSelection && !isRoot) {\n            return currentTree;\n        }\n\n        const parents = Tree.getParents(id, currentTree.full);\n        const { tree: treeWithMissingRecords } = await loadMissing({\n            tree: currentTree,\n            // If cascadeSelection is implicit and the element is unchecked, it is necessary to load all children\n            // of all parents of the unchecked element to be checked explicitly. Only one layer of each parent should be loaded.\n            // Otherwise, should be loaded only checked element and all its nested children.\n            loadAllChildren: (itemId) => {\n                const loadAllConfig = { nestedChildren: !isImplicitMode, children: false };\n                if (!cascadeSelection) {\n                    return { ...loadAllConfig, children: isChecked && isRoot };\n                }\n\n                if (!isChecked && isRoot) {\n                    return { ...loadAllConfig, children: false };\n                }\n\n                if (isImplicitMode) {\n                    return { ...loadAllConfig, children: itemId === ROOT_ID || parents.some((parent) => isEqual(parent, itemId)) };\n                }\n\n                const { ids } = currentTree.full.getItems(undefined);\n                const rootIsNotLoaded = ids.length === 0;\n\n                const shouldLoadChildrenAfterSearch = (!!props.dataSourceState.search?.length\n                    && (parents.some((parent) => isEqual(parent, itemId))\n                    || (itemId === ROOT_ID && rootIsNotLoaded)));\n\n                // `isEqual` is used, because complex ids can be recreated after fetching of parents.\n                // So, they should be compared not by reference, but by value.\n                const shouldLoadAllChildren = isRoot\n                    || isEqual(itemId, id)\n                    || shouldLoadChildrenAfterSearch;\n\n                return {\n                    children: shouldLoadAllChildren,\n                    // If checking is run after the search, it is required to load only\n                    // children of the checked item parents, without nestings.\n                    nestedChildren: !shouldLoadChildrenAfterSearch,\n                };\n            },\n            isLoadStrict: true,\n            dataSourceState: { search: null },\n            using: 'full',\n        });\n\n        return treeWithMissingRecords;\n    }, [cascadeSelection, loadMissing, props.dataSourceState.search]);\n\n    return { loadMissing, loadMissingOnCheck };\n}\n","import { useRef } from 'react';\nimport { DataSourceState } from '../../../../../../types';\n\ninterface UseDataSourceStateWithDefaults<TId, TFilter = any> {\n    dataSourceState: DataSourceState<TFilter, TId>;\n}\n\nconst getDataSourceStateWithDefaults = <TId, TFilter = any>(dataSourceState: DataSourceState<TFilter, TId>) =>\n    ((dataSourceState.topIndex === undefined || dataSourceState.visibleCount)\n        ? {\n            ...dataSourceState,\n            topIndex: dataSourceState.topIndex ?? 0,\n            visibleCount: dataSourceState.visibleCount ?? 20,\n        }\n        : dataSourceState);\n\nexport function useDataSourceStateWithDefaults<TId, TFilter = any>({ dataSourceState }: UseDataSourceStateWithDefaults<TId, TFilter>) {\n    const dataSourceStateRef = useRef(getDataSourceStateWithDefaults(dataSourceState));\n\n    dataSourceStateRef.current = getDataSourceStateWithDefaults(dataSourceState);\n\n    return dataSourceStateRef.current;\n}\n","import { IMap, LazyDataSourceApi } from '../../../../types';\nimport { ItemsMap } from './ItemsMap';\nimport { FAILED_RECORD, LOADED_RECORD, LOADING_RECORD, NOT_FOUND_RECORD, PENDING_RECORD } from './constants';\nimport { ITreeParams } from './exposed';\nimport { newMap } from './helpers';\nimport { RecordStatus } from './types';\n\ninterface OnStatusUpdateSubscribe<TId> {\n    (itemsStatusMap: IMap<TId, RecordStatus>): void;\n}\n\nexport class ItemsStatusCollector<TItem, TId, TFilter = any> {\n    private itemsStatusMap: IMap<TId, RecordStatus>;\n    private subscriptions: IMap<OnStatusUpdateSubscribe<TId>, undefined>;\n\n    constructor(\n        itemsStatusMap: IMap<TId, RecordStatus>,\n        private params: ITreeParams<TItem, TId>,\n    ) {\n        this.itemsStatusMap = itemsStatusMap ?? newMap(params);\n        this.subscriptions = newMap(params);\n    }\n\n    public setPending(ids: TId[]) {\n        this.setStatus(ids, PENDING_RECORD);\n    }\n\n    public setLoading(ids: TId[]) {\n        this.setStatus(ids, LOADING_RECORD);\n    }\n\n    public setLoaded(ids: TId[]) {\n        this.setStatus(ids, LOADED_RECORD);\n    }\n\n    public setFailed(ids: TId[]) {\n        this.setStatus(ids, FAILED_RECORD);\n    }\n\n    public setNotFound(ids: TId[]) {\n        this.setStatus(ids, NOT_FOUND_RECORD);\n    }\n\n    public withPending(ids: TId[]) {\n        ids.forEach((id) => {\n            this.itemsStatusMap.set(id, PENDING_RECORD);\n        });\n\n        return this;\n    }\n\n    public getItemStatus = (itemsMap: ItemsMap<TId, TItem>) => (id: TId) => {\n        if (itemsMap.has(id)) {\n            return LOADED_RECORD;\n        }\n\n        const status = this.itemsStatusMap.get(id) ?? NOT_FOUND_RECORD;\n        if (status === LOADED_RECORD) {\n            return LOADING_RECORD;\n        }\n\n        return status;\n    };\n\n    public watch(api: LazyDataSourceApi<TItem, TId, TFilter>): LazyDataSourceApi<TItem, TId, TFilter> {\n        return async (request, context) => {\n            if (request.ids) {\n                try {\n                    this.setLoading(request.ids);\n                    const result = await api(request, context);\n                    const loadedIds: Array<[TId, TId]> = (result.items ?? []).map((item) => {\n                        const id = this.params.getId(item);\n                        return [id, id];\n                    });\n\n                    this.setLoaded(loadedIds.map(([id]) => id));\n\n                    const loadedIdsMap = new Map<TId, TId>(loadedIds);\n                    const notLoadedIds = request.ids.filter((id) => !loadedIdsMap.has(id));\n\n                    this.setNotFound(notLoadedIds);\n\n                    return result;\n                } catch (e) {\n                    this.setFailed(request.ids);\n                    throw e;\n                }\n            }\n\n            return await api(request, context);\n        };\n    }\n\n    private setStatus(ids: TId[], status: RecordStatus) {\n        ids.forEach((id) => {\n            this.itemsStatusMap.set(id, status);\n        });\n\n        this.onUpdate();\n    }\n\n    private onUpdate() {\n        for (const [onSubscribe] of this.subscriptions) {\n            onSubscribe?.(this.itemsStatusMap);\n        }\n    }\n\n    public subscribe(onSubscribe: OnStatusUpdateSubscribe<TId>): (() => void) {\n        this.subscriptions = this.subscriptions.set(onSubscribe);\n        return () => this.subscriptions.delete(onSubscribe);\n    }\n}\n","import { useMemo } from 'react';\nimport { DataSourceState, IMap, PatchOptions } from '../../../../../../types';\nimport { RecordStatus } from '../../types';\nimport { ItemsStatusCollector } from '../../ItemsStatusCollector';\nimport { ITreeParams, getSelectedAndChecked } from '../../treeStructure';\n\nexport interface UseItemsStatusCollectorProps<TItem, TId, TFilter = any> extends ITreeParams<TItem, TId>, Pick<PatchOptions<TItem, TId>, 'patch'> {\n    itemsStatusMap?: IMap<TId, RecordStatus>;\n    itemsStatusCollector?: ItemsStatusCollector<TItem, TId, TFilter>;\n    dataSourceState: DataSourceState<TFilter, TId>;\n}\n\nexport function useItemsStatusCollector<TItem, TId>(\n    {\n        itemsStatusMap,\n        complexIds,\n        getId,\n        itemsStatusCollector,\n        dataSourceState,\n        patch,\n    }: UseItemsStatusCollectorProps<TItem, TId>,\n    deps: any[],\n) {\n    const statusCollector = useMemo(() => {\n        if (itemsStatusCollector) {\n            return itemsStatusCollector;\n        }\n\n        return new ItemsStatusCollector(itemsStatusMap, { complexIds, getId });\n    }, deps);\n\n    return useMemo(() => {\n        return statusCollector.withPending(getSelectedAndChecked(dataSourceState, patch));\n    }, [statusCollector]);\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { ItemsStorage } from '../../../..';\nimport { ItemsMapParams } from '../../ItemsMap';\nimport { SharedItemsState } from '../strategies/types';\n\nexport interface UseItemsStorageProps<TItem, TId> extends SharedItemsState<TItem, TId> {\n    items?: TItem[];\n    params: ItemsMapParams<TItem, TId>;\n}\n\nexport function useItemsStorage<TItem, TId>({ itemsMap: outerItemsMap, setItems, items, params }: UseItemsStorageProps<TItem, TId>) {\n    const itemsStorage = useMemo(() => {\n        if (!outerItemsMap) {\n            return new ItemsStorage({ items, params });\n        }\n        return null;\n    }, [outerItemsMap, items]);\n\n    const [itemsMap, setItemsMap] = useState(outerItemsMap ?? itemsStorage?.getItemsMap());\n\n    useEffect(() => {\n        if (itemsStorage) {\n            const unsubscribe = itemsStorage.subscribe(() => {\n                setItemsMap(itemsStorage.getItemsMap());\n            });\n\n            return () => {\n                unsubscribe();\n            };\n        }\n    }, []);\n\n    useEffect(() => {\n        if (Array.isArray(items)) {\n            if (itemsStorage) {\n                itemsStorage.setItems(items);\n            }\n            setItems?.(items);\n        }\n    }, [items]);\n\n    const currentItemsMap = outerItemsMap ?? itemsMap;\n    return {\n        itemsMap: currentItemsMap,\n        setItems: setItems ?? (itemsStorage?.setItems ?? currentItemsMap.setItems),\n    };\n}\n","import { NOT_FOUND_RECORD } from '../constants';\nimport { newMap } from './map';\nimport { DataSourceState, IImmutableMap, IMap, PatchOptions, SortConfig, SortedPatchByParentId } from '../../../../../types';\nimport { buildComparators, composeComparators } from '../helpers';\nimport { PatchOrdering } from '../constants';\nimport { ITree } from '../ITree';\n\nconst groupByParentId = <TItem, TId>(\n    patch: IMap<TId, TItem> | IImmutableMap<TId, TItem> | undefined,\n    getParentId?: (item: TItem) => TId,\n    complexIds?: boolean,\n): IMap<TId, TItem[]> => {\n    const patchByParentId = newMap<TId, TItem[]>({ complexIds });\n    if (!patch) {\n        return patchByParentId;\n    }\n\n    for (const [, item] of patch) {\n        const parentId = getParentId?.(item) ?? undefined;\n        if (!patchByParentId.has(parentId)) {\n            patchByParentId.set(parentId, []);\n        }\n        const prevItems = patchByParentId.get(parentId);\n        patchByParentId.set(parentId, [...prevItems, item]);\n    }\n    return patchByParentId;\n};\n\nconst getPatchByCategories = <TItem, TId>(\n    items: TItem[],\n    tree: ITree<TItem, TId>,\n    patchAtLastSort: IMap<TId, TItem> | IImmutableMap<TId, TItem>,\n    getNewItemPosition: PatchOptions<TItem, TId>['getNewItemPosition'],\n    getItemTemporaryOrder: PatchOptions<TItem, TId>['getItemTemporaryOrder'] | undefined,\n    isDeleted: undefined | ((item: TItem) => boolean),\n    fixItemBetweenSortings?: boolean,\n) => {\n    const { getId, getParentId, complexIds } = tree.getParams();\n    const top: TId[] = [];\n    const bottom: TId[] = [];\n    const updated: TId[] = [];\n    const movedToOtherParent: TId[] = [];\n    const updatedItemsMap: IMap<TId, TItem> = newMap({ complexIds });\n    const newItems: TItem[] = [];\n    const withTempOrder: TId[] = [];\n\n    for (const item of items) {\n        const id = getId(item);\n        const itemInOriginalTree = tree.getById(id) !== NOT_FOUND_RECORD;\n        const itemInPatchBeforeSort = patchAtLastSort.has(id);\n        updatedItemsMap.set(id, item);\n        newItems.push(item);\n        const tempOrder = getItemTemporaryOrder?.(item);\n        const prevItem = patchAtLastSort.get(id) ?? tree.getById(id) as TItem;\n        const prevParentId = getParentId?.(prevItem) ?? undefined;\n        const newParentId = getParentId?.(item) ?? undefined;\n        if (!fixItemBetweenSortings) {\n            const realPrevItem = tree.getById(id) as TItem;\n            if (realPrevItem !== NOT_FOUND_RECORD) {\n                const realPrevParentId = getParentId?.(realPrevItem) ?? undefined;\n                if (realPrevParentId !== newParentId) {\n                    movedToOtherParent.push(id);\n                }\n            }\n        } else if (prevParentId !== newParentId) {\n            movedToOtherParent.push(id);\n        }\n\n        if (tempOrder) {\n            if (isDeleted?.(item)) {\n                continue;\n            }\n            withTempOrder.push(id);\n            continue;\n        }\n\n        if (!itemInPatchBeforeSort && !itemInOriginalTree) {\n            const position = getNewItemPosition(item);\n\n            if (isDeleted?.(item)) {\n                continue;\n            }\n\n            if (position === PatchOrdering.BOTTOM) {\n                bottom.push(id);\n            } else {\n                top.unshift(id);\n            }\n            continue;\n        }\n\n        if (prevParentId !== newParentId) {\n            const position = getNewItemPosition(item);\n            if (position === PatchOrdering.BOTTOM) {\n                bottom.push(id);\n            } else {\n                top.unshift(id);\n            }\n\n            continue;\n        }\n\n        updated.push(id);\n    }\n\n    return { top, bottom, movedToOtherParent, updated, withTempOrder, updatedItemsMap, newItems };\n};\n\nconst sortUpdatedItems = <TItem, TId>(\n    updated: TId[],\n    composedComparator: (a: TItem, b: TItem) => number,\n    tree: ITree<TItem, TId>,\n    patchAtLastSort: IMap<TId, TItem> | IImmutableMap<TId, TItem>,\n) => {\n    return updated.sort((aId, bId) => {\n        const bItem = patchAtLastSort.get(bId) ?? tree.getById(bId) as TItem;\n        const aItem = patchAtLastSort.get(aId) ?? tree.getById(aId) as TItem;\n\n        return composedComparator(aItem, bItem);\n    });\n};\n\nconst sortByTemporaryOrder = <TItem, TId>(\n    withTempOrder: TId[],\n    getItemTemporaryOrder: PatchOptions<TItem, TId>['getItemTemporaryOrder'] | undefined,\n    updatedItemsMap: IMap<TId, TItem>,\n) => {\n    const comparator = (a: string, b: string) => a < b ? -1 : 1;\n    return withTempOrder.sort((aId, bId) => {\n        const a = updatedItemsMap.get(aId);\n        const b = updatedItemsMap.get(bId);\n        return comparator(getItemTemporaryOrder(a), getItemTemporaryOrder((b)));\n    });\n};\n\nconst sortPatchByParentId = <TItem, TId, TFilter>(\n    tree: ITree<TItem, TId>,\n    groupedByParentId: IMap<TId, TItem[]>,\n    getNewItemPosition: PatchOptions<TItem, TId>['getNewItemPosition'],\n    getItemTemporaryOrder: PatchOptions<TItem, TId>['getItemTemporaryOrder'] | undefined,\n    patchAtLastSort: IMap<TId, TItem> | IImmutableMap<TId, TItem>,\n    sortBy: SortConfig<TItem>['sortBy'],\n    sorting: DataSourceState<TFilter, TId>['sorting'],\n    isDeleted: undefined | ((item: TItem) => boolean),\n    fixItemBetweenSortings?: boolean,\n) => {\n    const { complexIds } = tree.getParams();\n    const comparators = buildComparators({ sorting, sortBy, getId: tree.getParams().getId });\n    const composedComparator = composeComparators(comparators, tree.getParams().getId);\n\n    const sorted: SortedPatchByParentId<TItem, TId> = newMap({ complexIds });\n    for (const [parentId, items] of groupedByParentId) {\n        const { top, bottom, updated, movedToOtherParent, withTempOrder, updatedItemsMap, newItems } = getPatchByCategories(\n            items,\n            tree,\n            patchAtLastSort,\n            getNewItemPosition,\n            getItemTemporaryOrder,\n            isDeleted,\n            fixItemBetweenSortings,\n        );\n\n        const sortedUpdated = sortUpdatedItems(updated, composedComparator, tree, patchAtLastSort);\n        const sortedByTempOrder = sortByTemporaryOrder(withTempOrder, getItemTemporaryOrder, updatedItemsMap);\n\n        sorted.set(parentId, {\n            top,\n            bottom,\n            updated: sortedUpdated,\n            moved: movedToOtherParent,\n            withTempOrder: sortedByTempOrder,\n            updatedItemsMap,\n            newItems,\n        });\n    }\n    return sorted;\n};\n\nexport const getSortedPatchByParentId = <TItem, TId, TFilter>(\n    tree: ITree<TItem, TId>,\n    patch: IMap<TId, TItem> | IImmutableMap<TId, TItem>,\n    patchAtLastSort: IMap<TId, TItem> | IImmutableMap<TId, TItem>,\n    getNewItemPosition: PatchOptions<TItem, TId>['getNewItemPosition'],\n    getItemTemporaryOrder: PatchOptions<TItem, TId>['getItemTemporaryOrder'] | undefined,\n    sortBy: SortConfig<TItem>['sortBy'],\n    sorting: DataSourceState<TFilter, TId>['sorting'],\n    isDeleted?: (item: TItem) => boolean,\n    fixItemBetweenSortings?: boolean,\n) => {\n    const params = tree.getParams();\n    const grouped = groupByParentId(patch, params.getParentId, params.complexIds);\n    return sortPatchByParentId(tree, grouped, getNewItemPosition, getItemTemporaryOrder, patchAtLastSort, sortBy, sorting, isDeleted, fixItemBetweenSortings);\n};\n","import { useCallback, useMemo } from 'react';\nimport { newMap } from '../../helpers';\nimport { DataSourceState, IImmutableMap, IMap, PatchOptions } from '../../../../../../types';\nimport { PatchOrdering } from '../../constants';\nimport { usePrevious } from '../../../../../../hooks/usePrevious';\nimport { getSortedPatchByParentId } from '../../helpers/patch';\nimport { TreeState } from '../../treeState';\n\nexport interface UsePatchTreeProps<TItem, TId, TFilter = any> extends PatchOptions<TItem, TId> {\n    tree: TreeState<TItem, TId>;\n    sorting: DataSourceState<TFilter, TId>['sorting'];\n\n}\n\nexport function usePatchTree<TItem, TId, TFilter = any>(\n    {\n        tree,\n        patch,\n        getNewItemPosition = () => PatchOrdering.TOP,\n        getItemTemporaryOrder,\n        fixItemBetweenSortings = true,\n        isDeleted,\n        sorting,\n        sortBy,\n    }: UsePatchTreeProps<TItem, TId, TFilter>,\n) {\n    const prevPatch = usePrevious(patch);\n    const params = tree.visible.getParams();\n\n    const patchAtLastSort = useMemo(() => {\n        return prevPatch === null ? newMap<TId, TItem>({ complexIds: params.complexIds }) : patch;\n    }, [sorting]);\n\n    const sortedPatch = useMemo(\n        () => getSortedPatchByParentId(\n            tree.visible,\n            patch,\n            fixItemBetweenSortings ? patchAtLastSort : patch,\n            getNewItemPosition,\n            getItemTemporaryOrder,\n            sortBy,\n            sorting,\n            isDeleted,\n            fixItemBetweenSortings,\n        ),\n        [patch, sorting, fixItemBetweenSortings],\n    );\n    const patchedTree = useMemo(() => {\n        return tree.patch({\n            sortedPatch,\n            patchAtLastSort: fixItemBetweenSortings ? patchAtLastSort : patch,\n            getItemTemporaryOrder,\n            isDeleted,\n            sorting,\n            sortBy,\n            ...tree.visible.getParams(),\n        });\n    }, [tree, patch]);\n\n    const applyPatch = useCallback((updated: IMap<TId, TItem> | IImmutableMap<TId, TItem>) => {\n        const patchAfterSort = getSortedPatchByParentId(\n            tree.visible,\n            updated,\n            fixItemBetweenSortings ? patchAtLastSort : updated,\n            getNewItemPosition,\n            getItemTemporaryOrder,\n            sortBy,\n            sorting,\n            isDeleted,\n            fixItemBetweenSortings,\n        );\n\n        return tree.patch({\n            sortedPatch: patchAfterSort,\n            patchAtLastSort: fixItemBetweenSortings ? patchAtLastSort : updated,\n            getItemTemporaryOrder,\n            isDeleted,\n            sorting,\n            sortBy,\n            ...tree.visible.getParams(),\n        }).visible;\n    }, [tree, sorting, fixItemBetweenSortings]);\n\n    return { tree: patchedTree, applyPatch };\n}\n","import isEqual from 'react-fast-compare';\nimport { DataSourceState } from '../../../../../../types';\n\nexport const isSelectedOrCheckedChanged = (dataSourceState: DataSourceState, prevDataSourceState: DataSourceState) => {\n    return (\n        dataSourceState.checked?.length && !isEqual(prevDataSourceState?.checked, dataSourceState.checked)\n    ) || (dataSourceState.selectedId !== null\n        && dataSourceState.selectedId !== undefined\n        && dataSourceState.selectedId !== prevDataSourceState?.selectedId);\n};\n\nexport const getChecked = (dataSourceState: DataSourceState) => {\n    if (dataSourceState.checked !== null) {\n        return dataSourceState.checked;\n    }\n\n    if (dataSourceState.selectedId !== null && dataSourceState.selectedId !== undefined) {\n        return [dataSourceState.selectedId];\n    }\n    return [];\n};\n","import { usePrevious } from '../../../../../../hooks/usePrevious';\n\nexport function useDepsChanged(deps: any[]) {\n    const prevDeps = usePrevious(deps);\n    const isDepsChanged = prevDeps?.length !== deps.length\n        || (prevDeps ?? []).some((devVal, index) => devVal !== deps[index]);\n\n    return isDepsChanged;\n}\n","import { useMemo, useRef } from 'react';\nimport { TreeState } from '../../treeState';\nimport { usePrevious } from '../../../../../../hooks/usePrevious';\nimport { useDepsChanged } from './useDepsChanged';\n\nexport interface UseUpdateTreeProps<TItem, TId> {\n    tree: TreeState<TItem, TId>;\n    shouldUpdate: () => boolean;\n    update: (tree: TreeState<TItem, TId>) => TreeState<TItem, TId>;\n}\n\nexport function useUpdateTree<TItem, TId>(\n    {\n        tree,\n        shouldUpdate,\n        update,\n    }: UseUpdateTreeProps<TItem, TId>,\n    deps: any[],\n) {\n    const treeRef = useRef<TreeState<TItem, TId>>(null);\n    const prevTree = usePrevious(tree);\n    const depsChanged = useDepsChanged(deps);\n\n    const updatedTree = useMemo(() => {\n        if (treeRef.current === null || prevTree !== tree || shouldUpdate() || depsChanged) {\n            treeRef.current = update(tree);\n        }\n        return treeRef.current;\n    }, [tree, depsChanged, ...deps]);\n\n    return updatedTree;\n}\n","import { usePrevious } from '../../../../../../hooks/usePrevious';\nimport { DataSourceState } from '../../../../../../types';\nimport { TreeState } from '../../treeState';\nimport { getChecked, isSelectedOrCheckedChanged } from '../strategies/checked';\nimport { useUpdateTree } from './useUpdateTree';\n\nexport type UseSelectedOnlyTreeProps<TItem, TId, TFilter = any> = {\n    tree: TreeState<TItem, TId>;\n    dataSourceState: DataSourceState<TFilter, TId>;\n    isLoading?: boolean;\n};\n\nexport function useSelectedOnlyTree<TItem, TId, TFilter = any>(\n    { tree, dataSourceState, isLoading }: UseSelectedOnlyTreeProps<TItem, TId, TFilter>,\n    deps: any[],\n) {\n    const prevDataSourceState = usePrevious(dataSourceState);\n\n    const selectedOnlyTree = useUpdateTree({\n        tree,\n        shouldUpdate: () => isSelectedOrCheckedChanged(dataSourceState, prevDataSourceState),\n        update: (currentTree) => currentTree.buildSelectedOnly(getChecked(dataSourceState)),\n    }, [dataSourceState.checked, dataSourceState.selectedId, ...deps]);\n\n    if (isLoading || selectedOnlyTree === null) {\n        return tree;\n    }\n\n    return selectedOnlyTree;\n}\n","import { usePrevious } from '../../../../../../hooks/usePrevious';\nimport { DataSourceState } from '../../../../../../types';\nimport { TreeState } from '../../treeState';\nimport { useUpdateTree } from './useUpdateTree';\n\nexport type UseSearchTreeProps<TItem, TId, TFilter = any> = {\n    getSearchFields?: (item: TItem) => string[];\n    sortSearchByRelevance?: boolean;\n    tree: TreeState<TItem, TId>;\n    dataSourceState: DataSourceState<TFilter, TId>;\n    isLoading?: boolean;\n};\n\nexport function useSearchTree<TItem, TId, TFilter = any>(\n    {\n        tree,\n        dataSourceState: { search },\n        getSearchFields,\n        sortSearchByRelevance,\n        isLoading,\n    }: UseSearchTreeProps<TItem, TId, TFilter>,\n    deps: any[] = [],\n) {\n    const prevSearch = usePrevious(search);\n\n    const searchTree = useUpdateTree({\n        tree,\n        shouldUpdate: () => search !== prevSearch,\n        update: (currentTree) => currentTree.search({ search, getSearchFields, sortSearchByRelevance }),\n    }, [search, ...deps]);\n\n    if (isLoading || searchTree === null) {\n        return tree;\n    }\n\n    return searchTree;\n}\n","import { usePrevious } from '../../../../../../hooks/usePrevious';\nimport { DataSourceState, SortingOption } from '../../../../../../types';\nimport { TreeState } from '../../treeState';\nimport { useUpdateTree } from './useUpdateTree';\n\nexport type UseSortTreeProps<TItem, TId, TFilter = any> = {\n    sortBy?(item: TItem, sorting: SortingOption): any;\n    tree: TreeState<TItem, TId>;\n    dataSourceState: DataSourceState<TFilter, TId>;\n    isLoading?: boolean;\n};\n\nexport function useSortTree<TItem, TId, TFilter = any>(\n    {\n        tree,\n        dataSourceState: { sorting },\n        sortBy,\n        isLoading,\n    }: UseSortTreeProps<TItem, TId, TFilter>,\n    deps: any[],\n): TreeState<TItem, TId> {\n    const prevSorting = usePrevious(sorting);\n\n    const sortTree = useUpdateTree({\n        tree,\n        shouldUpdate: () => sorting !== prevSorting,\n        update: (currentTree) => currentTree.sort({ sorting, sortBy, getId: tree.visible.getParams().getId }),\n    }, [sorting, ...deps]);\n\n    if (isLoading || sortTree === null) {\n        return tree;\n    }\n\n    return sortTree;\n}\n","import { usePrevious } from '../../../../../../hooks/usePrevious';\nimport { DataSourceState } from '../../../../../../types';\nimport { TreeState } from '../../treeState';\nimport { useUpdateTree } from './useUpdateTree';\n\nexport type UseFilterTreeProps<TItem, TId, TFilter = any> = {\n    getFilter?: (filter: TFilter) => (item: TItem) => boolean;\n    tree: TreeState<TItem, TId>;\n    dataSourceState: DataSourceState<TFilter, TId>;\n    isLoading?: boolean;\n};\n\nexport function useFilterTree<TItem, TId, TFilter = any>(\n    { tree, dataSourceState: { filter }, getFilter, isLoading }: UseFilterTreeProps<TItem, TId, TFilter>,\n    deps: any[],\n) {\n    const prevFilter = usePrevious(filter);\n    const filteredTree = useUpdateTree({\n        tree,\n        shouldUpdate: () => filter !== prevFilter,\n        update: (currentTree) => currentTree.filter({ filter, getFilter }),\n    }, [filter, ...deps]);\n\n    if (isLoading || filteredTree === null) {\n        return tree;\n    }\n\n    return filteredTree;\n}\n","import { useMemo } from 'react';\nimport { ItemsMap } from '../../ItemsMap';\nimport { TreeState } from '../../treeState';\n\ninterface UseActualItemsMapProps<TItem, TId> {\n    tree: TreeState<TItem, TId>;\n    itemsMap: ItemsMap<TId, TItem>;\n}\n\nexport function useActualItemsMap<TItem, TId>({\n    tree, itemsMap,\n}: UseActualItemsMapProps<TItem, TId>) {\n    return useMemo(() => {\n        // if clear cache was executed, itemsMap should not be rewritten.\n        if (!itemsMap.size) {\n            return tree;\n        }\n\n        return tree.updateItemsMap(itemsMap);\n    }, [tree, itemsMap]);\n}\n","import isEqual from 'react-fast-compare';\nimport { DataSourceState } from '../../../../../../../types';\n\nexport const searchWasChanged = <TFilter, TId>(\n    prevValue?: DataSourceState<TFilter, TId>, newValue?: DataSourceState<TFilter, TId>,\n) => newValue?.search !== prevValue?.search;\n\nexport const sortingWasChanged = <TFilter, TId>(\n    prevValue?: DataSourceState<TFilter, TId>, newValue?: DataSourceState<TFilter, TId>,\n) => !isEqual(newValue?.sorting, prevValue?.sorting);\n\nexport const filterWasChanged = <TFilter, TId>(\n    prevValue: DataSourceState<TFilter, TId>, newValue?: DataSourceState<TFilter, TId>,\n) => !isEqual(newValue?.filter, prevValue?.filter);\n\nexport const isQueryChanged = <TFilter, TId>(prevValue: DataSourceState<TFilter, TId>, newValue: DataSourceState<TFilter, TId>) =>\n    searchWasChanged(prevValue, newValue)\n    || sortingWasChanged(prevValue, newValue)\n    || filterWasChanged(prevValue, newValue)\n    || newValue?.page !== prevValue?.page\n    || newValue?.pageSize !== prevValue?.pageSize;\n","import isEqual from 'react-fast-compare';\nimport { usePrevious } from '../../../../../../../hooks/usePrevious';\nimport { DataSourceState } from '../../../../../../../types';\nimport { isQueryChanged } from './helpers';\nimport { useCallback, useMemo } from 'react';\nimport { useDepsChanged } from '../../common/useDepsChanged';\n\nexport interface UseLazyFetchingAdvisorProps<TId, TFilter = any> {\n    dataSourceState: DataSourceState<TFilter, TId>;\n    filter?: TFilter;\n    forceReload?: boolean;\n    backgroundReload?: boolean;\n    showSelectedOnly?: boolean;\n}\n\nexport function useLazyFetchingAdvisor<TId, TFilter = any>(\n    {\n        dataSourceState,\n        filter,\n        forceReload,\n        backgroundReload,\n        showSelectedOnly,\n    }: UseLazyFetchingAdvisorProps<TId, TFilter>,\n    deps: any[] = [],\n) {\n    const depsChanged = useDepsChanged(deps);\n    const areMoreRowsNeeded = useCallback((\n        prevValue?: DataSourceState<TFilter, TId>,\n        newValue?: DataSourceState<TFilter, TId>,\n    ) => {\n        const isFetchPositionAndAmountChanged = prevValue?.topIndex !== newValue?.topIndex\n            || prevValue?.visibleCount !== newValue?.visibleCount;\n\n        return isFetchPositionAndAmountChanged;\n    }, []);\n\n    const prevFilter = usePrevious(filter);\n    const prevDataSourceState = usePrevious(dataSourceState);\n    const prevShowSelectedOnly = usePrevious(showSelectedOnly);\n\n    const isFoldingChanged = !prevDataSourceState || dataSourceState.folded !== prevDataSourceState.folded;\n\n    const shouldRefetch = useMemo(\n        () => !prevDataSourceState\n            || !isEqual(prevFilter, filter)\n            || isQueryChanged(prevDataSourceState, dataSourceState)\n            || (prevShowSelectedOnly !== showSelectedOnly && !showSelectedOnly)\n            || forceReload\n            || depsChanged,\n        [dataSourceState, filter, forceReload, depsChanged],\n    );\n\n    const moreRowsNeeded = areMoreRowsNeeded(prevDataSourceState, dataSourceState);\n\n    const shouldReload = shouldRefetch && !backgroundReload;\n    const shouldLoad = isFoldingChanged || moreRowsNeeded || shouldReload;\n    const shouldFetch = shouldRefetch || isFoldingChanged || moreRowsNeeded;\n\n    return useMemo(() => ({\n        shouldLoad,\n        shouldRefetch,\n        shouldFetch,\n        shouldReload,\n    }), [shouldLoad, shouldRefetch, shouldFetch]);\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { LazyTreeProps } from './types';\nimport { usePrevious } from '../../../../../../../hooks/usePrevious';\nimport { useFoldingService } from '../../../../dataRows/services';\nimport { useLoadData } from './useLoadData';\nimport { UseTreeResult } from '../../types';\nimport { useDataSourceStateWithDefaults, useSelectedOnlyTree, useItemsStorage, usePatchTree, useItemsStatusCollector } from '../../common';\nimport { TreeState } from '../../../treeState';\nimport { useLazyFetchingAdvisor } from './useLazyFetchingAdvisor';\nimport { isSelectedOrCheckedChanged } from '../checked';\nimport { useActualItemsMap } from '../../common';\n\nexport function useLazyTree<TItem, TId, TFilter = any>(\n    { flattenSearchResults = true, ...restProps }: LazyTreeProps<TItem, TId, TFilter>,\n    deps: any[],\n): UseTreeResult<TItem, TId, TFilter> {\n    const props = { flattenSearchResults, ...restProps };\n    const {\n        filter, backgroundReload, showSelectedOnly,\n        isFoldedByDefault, getId, getParentId, setDataSourceState,\n        cascadeSelection, getRowOptions, rowOptions, selectAll, fetchStrategy,\n        getChildCount, itemsStatusMap, complexIds, patch, isDeleted, getNewItemPosition, sortBy,\n        fixItemBetweenSortings, getItemTemporaryOrder,\n    } = props;\n\n    const dataSourceState = useDataSourceStateWithDefaults({ dataSourceState: props.dataSourceState });\n    const { itemsMap, setItems } = useItemsStorage({\n        itemsMap: props.itemsMap,\n        setItems: props.setItems,\n        params: { getId, complexIds },\n    });\n\n    const itemsStatusCollector = useItemsStatusCollector({\n        itemsStatusCollector: props.itemsStatusCollector,\n        itemsStatusMap,\n        complexIds,\n        getId,\n        dataSourceState,\n        patch,\n    }, [itemsStatusMap, props.itemsStatusCollector]);\n\n    const api = useMemo(\n        () => itemsStatusCollector.watch(props.api),\n        [itemsStatusCollector, props.api],\n    );\n\n    const blankTree = useMemo(\n        () => TreeState.blank({ getId, getParentId, getChildCount, complexIds }, itemsMap, setItems),\n        deps,\n    );\n\n    const [treeWithData, setTreeWithData] = useState(blankTree);\n\n    const prevDataSourceState = usePrevious(dataSourceState);\n\n    const [isFetching, setIsFetching] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isForceReload, setIsForceReload] = useState(false);\n\n    const { isFolded } = useFoldingService({\n        getId,\n        isFoldedByDefault,\n        dataSourceState,\n        setDataSourceState,\n    });\n\n    useEffect(() => {\n        setTreeWithData(blankTree);\n    }, [blankTree]);\n\n    const { loadMissing, loadMissingOnCheck } = useLoadData({\n        api,\n        filter,\n        dataSourceState,\n        isFolded,\n        fetchStrategy,\n        flattenSearchResults,\n        getChildCount,\n        cascadeSelection,\n    });\n\n    const loadMissingRecordsOnCheck = useCallback(async (id: TId, isChecked: boolean, isRoot: boolean) => {\n        const newTree = await loadMissingOnCheck(tree, id, isChecked, isRoot);\n        if (tree !== treeWithData || tree !== newTree) {\n            setTreeWithData(newTree);\n        }\n\n        return newTree.full;\n    }, [loadMissingOnCheck, setTreeWithData, treeWithData]);\n\n    const { shouldRefetch, shouldLoad, shouldFetch } = useLazyFetchingAdvisor({\n        dataSourceState,\n        filter,\n        forceReload: isForceReload,\n        backgroundReload,\n        showSelectedOnly,\n    }, [...deps]);\n\n    const treeWithDataActual = useActualItemsMap({\n        tree: treeWithData,\n        itemsMap,\n    });\n\n    useEffect(() => {\n        if (showSelectedOnly && isSelectedOrCheckedChanged(dataSourceState, prevDataSourceState)) {\n            loadMissing({\n                tree: treeWithDataActual,\n                using: 'full',\n                abortInProgress: shouldRefetch,\n                dataSourceState: {\n                    visibleCount: 0,\n                    topIndex: 0,\n                },\n            })\n                .then(({ isUpdated, isOutdated, tree: newTree }) => {\n                    if (!isOutdated && (isUpdated || newTree !== treeWithDataActual)) {\n                        setTreeWithData(newTree);\n                    }\n                });\n        }\n    }, [showSelectedOnly, dataSourceState.checked, dataSourceState.selectedId]);\n\n    useEffect(() => {\n        if (showSelectedOnly) {\n            return;\n        }\n\n        let currentTree = treeWithDataActual;\n        if (shouldRefetch) {\n            setIsFetching(true);\n            currentTree = treeWithDataActual.clearStructure();\n        }\n\n        if (shouldLoad) {\n            if (currentTree !== treeWithDataActual) {\n                setTreeWithData(currentTree);\n            }\n            setIsLoading(true);\n        }\n\n        if (shouldFetch) {\n            loadMissing({\n                tree: currentTree,\n                using: 'visible',\n                abortInProgress: shouldRefetch,\n            })\n                .then(({ isUpdated, isOutdated, tree: newTree }) => {\n                    if (!isOutdated && (isUpdated || newTree !== treeWithDataActual)) {\n                        setTreeWithData(newTree);\n                    }\n                }).finally(() => {\n                    setIsFetching(false);\n                    setIsLoading(false);\n                    if (isForceReload === true) {\n                        setIsForceReload(false);\n                    }\n                });\n        }\n    }, [\n        showSelectedOnly,\n        shouldFetch,\n        shouldLoad,\n        shouldRefetch,\n    ]);\n\n    const treeWithSelectedOnly = useSelectedOnlyTree({\n        tree: treeWithDataActual,\n        dataSourceState,\n        isLoading: isLoading || isFetching,\n    }, [treeWithDataActual]);\n\n    const treeWithNewItemsMap = useActualItemsMap({\n        tree: treeWithSelectedOnly,\n        itemsMap,\n    });\n\n    const { tree, applyPatch } = usePatchTree({\n        tree: treeWithNewItemsMap,\n        patch: showSelectedOnly ? null : patch,\n        isDeleted,\n        getNewItemPosition,\n        getItemTemporaryOrder,\n        fixItemBetweenSortings,\n        sorting: dataSourceState.sorting,\n        sortBy,\n    });\n\n    const reload = useCallback(() => {\n        setIsForceReload(true);\n    }, [props, setTreeWithData]);\n\n    const totalCount = useMemo(() => {\n        const { totalCount: rootTotalCount } = tree.visible.getItems(undefined);\n\n        return rootTotalCount ?? tree.visible.getTotalCount?.();\n    }, [tree.visible]);\n\n    return {\n        tree: showSelectedOnly ? tree.selectedOnly : tree.visible,\n        treeWithoutPatch: treeWithSelectedOnly.visible,\n        selectionTree: tree.full,\n        totalCount,\n        dataSourceState,\n        setDataSourceState,\n        isFoldedByDefault,\n        getId,\n        getParentId,\n        cascadeSelection,\n        getRowOptions,\n        rowOptions,\n        reload,\n        isFetching,\n        isLoading,\n        getItemStatus: itemsStatusCollector.getItemStatus(itemsMap),\n        flattenSearchResults,\n        loadMissingRecordsOnCheck,\n        showSelectedOnly,\n        selectAll,\n        applyPatch,\n    };\n}\n","import { newMap } from './map';\n\nexport interface MergeOptions<TId> {\n    isDeleted?: (id: TId) => boolean;\n    complexIds?: boolean;\n}\n\nexport function merge<TId>(\n    mergeSrcArr: TId[],\n    mergeTgArr: TId[],\n    compare: (idFromSource: TId, idFromTarget: TId, sourceIndex: number, targetIndex: number) => number,\n    initialArr: TId[] = [],\n    options: MergeOptions<TId> = {},\n): [TId[], boolean] {\n    const { complexIds, isDeleted } = options;\n\n    let srcItemIndex = 0,\n        tgItemIndex = 0,\n        isUpdated = false;\n\n    const merged: TId[] = [...initialArr];\n    const patchedItems = newMap<TId, boolean>({ complexIds });\n\n    mergeSrcArr.forEach((id) => {\n        patchedItems.set(id, true);\n    });\n\n    while (srcItemIndex < mergeSrcArr.length || tgItemIndex < mergeTgArr.length) {\n        if (srcItemIndex >= mergeSrcArr.length) {\n            if (!patchedItems.get(mergeTgArr[tgItemIndex]) && !isDeleted?.(mergeTgArr[tgItemIndex])) {\n                merged.push(mergeTgArr[tgItemIndex]);\n            }\n            if (isDeleted?.(mergeTgArr[tgItemIndex])) {\n                isUpdated = true;\n            }\n\n            tgItemIndex++;\n            continue;\n        }\n\n        if (tgItemIndex >= mergeTgArr.length) {\n            if (!isDeleted?.(mergeSrcArr[srcItemIndex])) {\n                merged.push(mergeSrcArr[srcItemIndex]);\n                isUpdated = true;\n            }\n            srcItemIndex++;\n            continue;\n        }\n\n        const srcItemId = mergeSrcArr[srcItemIndex];\n        const tgItemId = mergeTgArr[tgItemIndex];\n\n        if (isDeleted?.(srcItemId)) {\n            srcItemIndex++;\n            continue;\n        }\n\n        if (isDeleted?.(tgItemId)) {\n            isUpdated = true;\n            tgItemIndex++;\n            continue;\n        }\n\n        if (patchedItems.has(tgItemId)) {\n            isUpdated = true;\n            tgItemIndex++;\n            continue;\n        }\n\n        const result = compare(srcItemId, tgItemId, srcItemIndex, tgItemIndex);\n        if (result === -1) {\n            merged.push(srcItemId);\n            isUpdated = true;\n            srcItemIndex++;\n        } else {\n            if (!patchedItems.has(tgItemId) && !isDeleted?.(tgItemId)) {\n                merged.push(tgItemId);\n            }\n            if (isDeleted?.(tgItemId)) {\n                isUpdated = true;\n            }\n\n            tgItemIndex++;\n        }\n    }\n\n    return [merged, isUpdated];\n}\n","import { IImmutableMap, IMap } from '../../../../../../types';\nimport { indexToOrder } from '../../../../../../helpers';\nimport { buildComparators, composeComparators, simpleComparator } from '../../helpers';\nimport { NOT_FOUND_RECORD } from '../../exposed';\nimport { ItemsAccessor } from '../../ItemsAccessor';\nimport { TreeStructure } from '../TreeStructure';\nimport { cloneMap, newMap } from '../../helpers/map';\nimport { merge } from '../../helpers/merge';\nimport { PatchIntoTreeStructureOptions } from './types';\nimport { ItemsMap } from '../../ItemsMap';\n\ninterface ApplyPatchWithSortingOptions<TItem, TId> {\n    comparator: (a: TItem, b: TItem) => number;\n    patchAtLastSort: IMap<TId, TItem> | IImmutableMap<TId, TItem>;\n    originalItemsMap: ItemsMap<TId, TItem>;\n    patchedItemsMap: ItemsMap<TId, TItem>;\n    isDeleted: (id: TId) => boolean;\n    complexIds?: boolean;\n}\n\ninterface ApplyPatchTemporaryReorderingOptions<TItem, TId> {\n    getItemTemporaryOrder: (item: TItem) => string;\n    patchedItemsMap: ItemsMap<TId, TItem>;\n    isDeleted: (id: TId) => boolean;\n    complexIds?: boolean;\n}\n\nexport class PatchHelper {\n    private static applyPatchWithSorting<TItem, TId>(\n        patchIds: TId[],\n        originalIds: TId[],\n        {\n            comparator,\n            patchAtLastSort,\n            originalItemsMap,\n            patchedItemsMap,\n            isDeleted,\n            complexIds,\n        }: ApplyPatchWithSortingOptions<TItem, TId>,\n        initialIds: TId[] = [],\n    ) {\n        return merge(\n            patchIds,\n            originalIds,\n            (patchItemId, itemId) => {\n                const inPatchBeforeSort = patchAtLastSort.has(patchItemId);\n                const inOriginalTree = originalItemsMap.has(patchItemId);\n\n                let patchItemToCompare;\n                if (inPatchBeforeSort) {\n                    patchItemToCompare = patchAtLastSort.get(patchItemId);\n                } else if (inOriginalTree) {\n                    patchItemToCompare = originalItemsMap.get(patchItemId);\n                } else {\n                    patchItemToCompare = patchedItemsMap.get(patchItemId);\n                }\n\n                const item = originalItemsMap.get(itemId);\n                return comparator(patchItemToCompare, item);\n            },\n            initialIds,\n            { isDeleted, complexIds },\n        );\n    }\n\n    private static applyPatchTemporaryReordering<TItem, TId>(\n        patchIds: TId[],\n        originalIds: TId[],\n        {\n            getItemTemporaryOrder,\n            patchedItemsMap,\n            isDeleted,\n            complexIds,\n        }: ApplyPatchTemporaryReorderingOptions<TItem, TId>,\n    ) {\n        return merge(\n            patchIds,\n            originalIds,\n\n            (patchItemId, itemId, _, itemIndex) => {\n                const a = patchedItemsMap.get(patchItemId);\n                const b = patchedItemsMap.get(itemId);\n\n                const aTempOrder = getItemTemporaryOrder(a);\n                const bTempOrder = getItemTemporaryOrder(b) ?? indexToOrder(itemIndex);\n                return simpleComparator(aTempOrder, bTempOrder);\n            },\n            [],\n            { isDeleted, complexIds },\n        );\n    }\n\n    public static patch<TItem, TId>({\n        itemsMap: originalItemsMap,\n        treeStructure,\n        sortedPatch,\n        patchAtLastSort,\n        getItemTemporaryOrder,\n        isDeleted,\n        sorting,\n        sortBy,\n    }: PatchIntoTreeStructureOptions<TItem, TId>) {\n        if (!sortedPatch || !sortedPatch.size) return { treeStructure, itemsMap: originalItemsMap, newItems: [] };\n\n        const newByParentId = cloneMap(treeStructure.byParentId); // shallow clone, still need to copy arrays inside!\n        let patchedItemsMap = originalItemsMap;\n        let newItems: TItem[] = [];\n        const comparators = buildComparators({ sorting, sortBy, getId: treeStructure.getParams().getId });\n        const composedComparator = composeComparators(comparators, treeStructure.getParams().getId);\n\n        const complexIds = treeStructure.getParams().complexIds;\n        const parentsWithNewChildren = newMap<TId, boolean>({ complexIds });\n        let isUpdated = false;\n        for (const [patchParentId, sorted] of sortedPatch) {\n            patchedItemsMap = patchedItemsMap.setItems(sorted.newItems);\n            newItems = newItems.concat(sorted.newItems);\n            const itemIds = newByParentId.get(patchParentId) ?? [];\n\n            // eslint-disable-next-line no-loop-func\n            const isDeletedFn = (id: TId) => isDeleted?.(patchedItemsMap.get(id)) ?? false;\n\n            const [sortedItems, isUpdatedOnPatch] = this.applyPatchWithSorting(\n                sorted.updated,\n                itemIds,\n                {\n                    comparator: composedComparator,\n                    patchAtLastSort,\n                    originalItemsMap,\n                    patchedItemsMap,\n                    isDeleted: isDeletedFn,\n                    complexIds,\n                },\n                sorted.top,\n            );\n\n            const sortedItemsWithBottom = sortedItems.concat(sorted.bottom);\n\n            const [reorderedItems, isUpdatedOnReordering] = this.applyPatchTemporaryReordering(\n                sorted.withTempOrder,\n                sortedItemsWithBottom,\n                {\n                    getItemTemporaryOrder,\n                    patchedItemsMap,\n                    isDeleted: isDeletedFn,\n                    complexIds,\n                },\n            );\n\n            // eslint-disable-next-line no-loop-func\n            sorted.moved.forEach((id) => {\n                const item = treeStructure.getById(id);\n                if (item !== NOT_FOUND_RECORD) {\n                    const parentId = treeStructure.getParams().getParentId?.(item) ?? undefined;\n                    const prevItems = newByParentId.get(parentId);\n                    newByParentId.set(parentId, prevItems.filter((itemId) => itemId !== id));\n                }\n                const newItem = patchedItemsMap.get(id);\n                const newParentId = treeStructure.getParams().getParentId?.(newItem) ?? undefined;\n                parentsWithNewChildren.set(newParentId, true);\n            });\n\n            newByParentId.set(patchParentId, reorderedItems);\n            if (isUpdatedOnReordering || isUpdatedOnPatch || sorted.top.length || sorted.bottom.length || sorted.moved.length) {\n                isUpdated = true;\n            }\n        }\n\n        if (!isUpdated) {\n            return { treeStructure, itemsMap: originalItemsMap, newItems };\n        }\n\n        const newNodeInfoById = cloneMap(treeStructure.nodeInfoById);\n        for (const [parentId, ids] of newByParentId) {\n            if (treeStructure.nodeInfoById.has(parentId)) {\n                const prevNodeInfo = treeStructure.nodeInfoById.get(parentId);\n                if (prevNodeInfo.count !== undefined) {\n                    // Count, different from ids.length can be sent by server.\n                    // After patch, it is required to add a delta of new and old children, to figure out,\n                    // how patch affected count by adding/deleting/moving children.\n                    const newCount = prevNodeInfo.count + (ids.length - (treeStructure.byParentId.get(parentId)?.length ?? 0));\n                    newNodeInfoById.set(parentId, { ...prevNodeInfo, count: newCount });\n                } else if (parentsWithNewChildren.has(parentId)) {\n                    const { assumedCount, ...prev } = prevNodeInfo;\n                    newNodeInfoById.set(parentId, { ...prev, ...(assumedCount === undefined ? { count: ids.length } : { assumedCount }) });\n                }\n            } else {\n                newNodeInfoById.set(parentId, { count: ids.length });\n            }\n        }\n\n        return {\n            treeStructure: TreeStructure.create(\n                treeStructure.getParams(),\n                ItemsAccessor.toItemsAccessor(patchedItemsMap),\n                newByParentId,\n                newNodeInfoById,\n            ),\n            itemsMap: patchedItemsMap,\n            newItems,\n        };\n    }\n}\n","import { ITree } from '../../ITree';\nimport { NOT_FOUND_RECORD } from '../../constants';\n\nexport class TreeHelper {\n    public static getParents<TItem, TId>(id: TId, tree: ITree<TItem, TId>) {\n        const parentIds: TId[] = [];\n        let parentId = id;\n        while (true) {\n            const item = tree.getById(parentId);\n            if (item === NOT_FOUND_RECORD) {\n                break;\n            }\n            parentId = tree.getParams().getParentId?.(item);\n            if (parentId === undefined) {\n                break;\n            }\n            parentIds.unshift(parentId);\n        }\n        return parentIds;\n    }\n}\n","import { ItemsStorage } from '../ItemsStorage';\nimport {\n    ExtendedPatchOptions,\n    FilterOptions, LoadAllOptions, LoadOptions,\n    SearchOptions, SortOptions, TreeStructureId, UpdateTreeStructuresOptions,\n} from './types';\nimport { TreeStructure, FetchingHelper, FilterHelper, SortHelper, SearchHelper, PatchHelper } from '../treeStructure';\nimport { ItemsMap } from '../ItemsMap';\nimport { ItemsAccessor } from '../ItemsAccessor';\nimport { NOT_FOUND_RECORD } from '../constants';\nimport { cloneMap, newMap } from '../helpers';\nimport { ITreeNodeInfo, ITreeParams } from '../treeStructure/types';\nimport { TreeHelper } from '../treeStructure/helpers/TreeHelper';\nimport { PatchIntoTreeStructureOptions } from '../treeStructure/helpers/types';\n\nexport class TreeState<TItem, TId> {\n    protected constructor(\n        private _fullTree: TreeStructure<TItem, TId> | null,\n        private _visibleTree: TreeStructure<TItem, TId> | null,\n        private _selectedOnlyTree: TreeStructure<TItem, TId> | null,\n        protected _itemsMap: ItemsMap<TId, TItem>,\n        protected _setItems: ItemsStorage<TItem, TId>['setItems'],\n    ) {}\n\n    public get itemsMap() {\n        return this._itemsMap;\n    }\n\n    public get setItems() {\n        return this._setItems;\n    }\n\n    public get visible() {\n        return this._visibleTree;\n    }\n\n    public get selectedOnly() {\n        return this._selectedOnlyTree;\n    }\n\n    public get full() {\n        return this._fullTree;\n    }\n\n    public getById(id: TId) {\n        return this.itemsMap.has(id) ? this.itemsMap.get(id) : NOT_FOUND_RECORD;\n    }\n\n    public async load<TFilter>({\n        using,\n        options,\n        dataSourceState,\n    }: LoadOptions<TItem, TId, TFilter>): Promise<TreeState<TItem, TId>> {\n        const treeStructure = this.getTreeStructure(using);\n\n        const { loadedItems, byParentId, nodeInfoById } = await FetchingHelper.load<TItem, TId, TFilter>({\n            tree: treeStructure,\n            options,\n            dataSourceState,\n        });\n\n        if (!loadedItems.length && !byParentId.size && !nodeInfoById.size) {\n            if (using === undefined && treeStructure !== this.getTreeStructure('visible')) {\n                return this.withNewTreeStructures({\n                    using,\n                    treeStructure,\n                    itemsMap: this.itemsMap,\n                });\n            }\n\n            return this;\n        }\n\n        const itemsMap = loadedItems.length ? this.setItems(loadedItems, { on: 'load' }) : this.itemsMap;\n        const newByParentId = byParentId.size ? cloneMap(treeStructure.byParentId) : treeStructure.byParentId;\n        for (const [id, ids] of byParentId) {\n            newByParentId.set(id, ids);\n        }\n        const newNodeInfoById = nodeInfoById.size ? cloneMap(treeStructure.nodeInfoById) : treeStructure.nodeInfoById;\n        for (const [id, nodeInfo] of nodeInfoById) {\n            newNodeInfoById.set(id, nodeInfo);\n        }\n        let treeToUpdate: TreeStructureId = using;\n        if (treeToUpdate === 'visible') {\n            treeToUpdate = dataSourceState.search ? 'visible' : undefined;\n        }\n\n        return this.withNewTreeStructures({\n            using: treeToUpdate,\n            treeStructure: TreeStructure.create(\n                treeStructure.getParams(),\n                ItemsAccessor.toItemsAccessor(itemsMap),\n                newByParentId,\n                newNodeInfoById,\n            ),\n            itemsMap,\n        });\n    }\n\n    public async loadAll<TFilter>({\n        using,\n        options,\n        dataSourceState,\n    }: LoadAllOptions<TItem, TId, TFilter>): Promise<TreeState<TItem, TId>> {\n        const treeStructure = this.getTreeStructure(using);\n\n        const { treeStructure: newTreeStructure, itemsMap: newItemsMap, loadedItems } = await FetchingHelper.loadAll({\n            treeStructure,\n            itemsMap: this.itemsMap,\n            options,\n            dataSourceState,\n        });\n\n        if (newTreeStructure === treeStructure && newItemsMap === this.itemsMap && !loadedItems.length) {\n            return this;\n        }\n\n        if (loadedItems.length) {\n            this.setItems(loadedItems, { reset: true });\n        }\n\n        return this.withNewTreeStructures({ using, treeStructure: newTreeStructure, itemsMap: newItemsMap });\n    }\n\n    public filter<TFilter>({\n        filter,\n        getFilter,\n    }: FilterOptions<TItem, TId, TFilter>): TreeState<TItem, TId> {\n        const treeStructure = this.getTreeStructure('full');\n        const newTreeStructure = FilterHelper.filter<TItem, TId, TFilter>({ treeStructure, getFilter, filter });\n\n        if (treeStructure === newTreeStructure) {\n            return this;\n        }\n\n        return this.withNewTreeStructures({ treeStructure: newTreeStructure, itemsMap: this.itemsMap });\n    }\n\n    public sort<TFilter>({\n        getId,\n        sorting,\n        sortBy,\n    }: SortOptions<TItem, TId, TFilter>): TreeState<TItem, TId> {\n        const treeStructure = this.getTreeStructure('full');\n        const newTreeStructure = SortHelper.sort<TItem, TId, TFilter>({ treeStructure, sorting, sortBy, getId });\n\n        if (treeStructure === newTreeStructure) {\n            return this;\n        }\n\n        return this.withNewTreeStructures({ treeStructure: newTreeStructure, itemsMap: this.itemsMap });\n    }\n\n    public search<TFilter>({\n        search,\n        getSearchFields,\n        sortSearchByRelevance,\n    }: SearchOptions<TItem, TId, TFilter>): TreeState<TItem, TId> {\n        const treeStructure = this.getTreeStructure('full');\n        const newTreeStructure = SearchHelper.search({ treeStructure, search, getSearchFields, sortSearchByRelevance });\n\n        if (newTreeStructure === treeStructure) {\n            return this;\n        }\n\n        return this.withNewTreeStructures({ using: 'visible', treeStructure: newTreeStructure, itemsMap: this.itemsMap });\n    }\n\n    private patchTreeStructure(\n        { treeStructure, itemsMap, sortedPatch, patchAtLastSort, getItemTemporaryOrder, isDeleted, sorting, sortBy }: PatchIntoTreeStructureOptions<TItem, TId>,\n    ) {\n        const { treeStructure: newTreeStructure, itemsMap: newItemsMap, newItems } = PatchHelper.patch<TItem, TId>({\n            treeStructure,\n            itemsMap: itemsMap,\n            sortedPatch,\n            patchAtLastSort,\n            getItemTemporaryOrder,\n            isDeleted,\n            sorting,\n            sortBy,\n        });\n\n        if (newTreeStructure === treeStructure && newItemsMap === itemsMap && !newItems.length) {\n            return { treeStructure, itemsMap };\n        }\n\n        return { treeStructure: newTreeStructure, itemsMap: newItemsMap };\n    }\n\n    public patch(\n        { sortedPatch, patchAtLastSort, getItemTemporaryOrder, isDeleted, sorting, sortBy }: ExtendedPatchOptions<TItem, TId>,\n    ): TreeState<TItem, TId> {\n        const { treeStructure: newFull } = this.patchTreeStructure({\n            treeStructure: this.getTreeStructure('full'),\n            itemsMap: this.itemsMap,\n            sortedPatch,\n            patchAtLastSort,\n            getItemTemporaryOrder,\n            isDeleted,\n            sorting,\n            sortBy,\n        });\n\n        const { treeStructure: newVisible, itemsMap: updatedItemsMap } = this.patchTreeStructure({\n            treeStructure: this.getTreeStructure('visible'),\n            itemsMap: this.itemsMap,\n            sortedPatch,\n            patchAtLastSort,\n            getItemTemporaryOrder,\n            isDeleted,\n            sorting,\n            sortBy,\n        });\n\n        if (this.getTreeStructure('full') === newFull && this.getTreeStructure('visible') === newVisible) {\n            return this;\n        }\n\n        const itemsAccessor = ItemsAccessor.toItemsAccessor(updatedItemsMap);\n        const selectedOnly = TreeStructure.withNewItemsAccessor(itemsAccessor, this._selectedOnlyTree);\n        return TreeState.create(newFull, newVisible, selectedOnly, updatedItemsMap, this._setItems);\n    }\n\n    /**\n     * TODO: Add later `selectedOnlyMode: 'tree' | 'flat'.\n     */\n    private buildSelectedOnlyTree(checkedIds: TId[]) {\n        const foundIds = checkedIds\n            .filter((id) => this.getById(id) !== NOT_FOUND_RECORD);\n        let items = new ItemsMap<TId, TItem>(null, this.selectedOnly.getParams());\n        foundIds.forEach((id) => {\n            const parents = TreeHelper.getParents(id, this.full);\n            parents\n                .filter((parentId) => !items.has(parentId) && this.getById(parentId) !== NOT_FOUND_RECORD)\n                .forEach((parentId) => {\n                    items = items.set(parentId, this.getById(parentId) as TItem);\n                });\n\n            items = items.set(id, this.getById(id) as TItem);\n        });\n\n        const newSelectedOnly = TreeStructure.createFromItems({\n            params: this.selectedOnly.getParams(),\n            items,\n            itemsAccessor: ItemsAccessor.toItemsAccessor(this.itemsMap),\n        });\n\n        return TreeState.create(\n            this.full,\n            this.visible,\n            newSelectedOnly,\n            this.itemsMap,\n            this.setItems,\n        );\n    }\n\n    public buildSelectedOnly(checkedIds: TId[]) {\n        const foundIds = (checkedIds ?? [])\n            .filter((id) => this.getById(id) !== NOT_FOUND_RECORD);\n\n        const byParentId = newMap<TId, TId[]>(this.selectedOnly.getParams());\n        const nodeInfoById = newMap<TId, ITreeNodeInfo>(this.selectedOnly.getParams());\n        byParentId.set(undefined, foundIds);\n        nodeInfoById.set(undefined, { count: foundIds.length });\n\n        const newSelectedOnly = TreeStructure.create(\n            this.selectedOnly.getParams(),\n            ItemsAccessor.toItemsAccessor(this.itemsMap),\n            byParentId,\n            nodeInfoById,\n        );\n\n        return TreeState.create(\n            this.full,\n            this.visible,\n            newSelectedOnly,\n            this.itemsMap,\n            this.setItems,\n        );\n    }\n\n    public updateItemsMap(itemsMap: ItemsMap<TId, TItem>) {\n        if (itemsMap === this.itemsMap) {\n            return this;\n        }\n\n        const itemsAccessor = ItemsAccessor.toItemsAccessor(itemsMap);\n        return new TreeState(\n            TreeStructure.withNewItemsAccessor(itemsAccessor, this.full),\n            TreeStructure.withNewItemsAccessor(itemsAccessor, this.visible),\n            TreeStructure.withNewItemsAccessor(itemsAccessor, this.selectedOnly),\n            itemsMap,\n            this.setItems,\n        );\n    }\n\n    private getTreeStructure(treeStructureId: TreeStructureId = 'full') {\n        return (treeStructureId ?? 'full') === 'full' ? this._fullTree : this._visibleTree;\n    }\n\n    public clearStructure(): TreeState<TItem, TId> {\n        return TreeState.create(\n            this.full,\n            TreeStructure.create(this.visible.getParams(), ItemsAccessor.toItemsAccessor(this.itemsMap)),\n            this.selectedOnly,\n            this.itemsMap,\n            this.setItems,\n        );\n    }\n\n    public reset(): TreeState<TItem, TId> {\n        return TreeState.create(\n            this.full,\n            this.full,\n            this.selectedOnly,\n            this.itemsMap,\n            this.setItems,\n        );\n    }\n\n    private withNewTreeStructures({\n        using,\n        treeStructure,\n        itemsMap,\n    }: UpdateTreeStructuresOptions<TItem, TId>): TreeState<TItem, TId> {\n        const itemsAccessor = ItemsAccessor.toItemsAccessor(itemsMap);\n        const selectedOnly = TreeStructure.withNewItemsAccessor(itemsAccessor, this._selectedOnlyTree);\n        if (!using) {\n            return TreeState.create(treeStructure, treeStructure, selectedOnly, itemsMap, this._setItems);\n        }\n        const visibleTree = using === 'visible'\n            ? treeStructure\n            : TreeStructure.withNewItemsAccessor(itemsAccessor, this._visibleTree);\n\n        const fullTree = using === 'full'\n            ? treeStructure\n            : TreeStructure.withNewItemsAccessor(itemsAccessor, this._fullTree);\n\n        return TreeState.create(fullTree, visibleTree, selectedOnly, itemsMap, this._setItems);\n    }\n\n    public static create<TItem, TId>(\n        fullTree: TreeStructure<TItem, TId>,\n        visibleTree: TreeStructure<TItem, TId>,\n        selectedOnlyTree: TreeStructure<TItem, TId>,\n        itemsMap: ItemsMap<TId, TItem>,\n        setItems: ItemsStorage<TItem, TId>['setItems'],\n    ) {\n        return new TreeState(\n            fullTree,\n            visibleTree,\n            selectedOnlyTree,\n            itemsMap,\n            setItems,\n        );\n    }\n\n    public static createFromItems<TItem, TId>(\n        items: TItem[] | undefined,\n        itemsMap: ItemsMap<TId, TItem> | undefined,\n        params: ITreeParams<TItem, TId>,\n        setItems: ItemsStorage<TItem, TId>['setItems'],\n    ) {\n        if (items === undefined && itemsMap === undefined) {\n            throw Error('At least one of the following args should be defined: `items` or `itemsMap`.');\n        }\n\n        let treeItemsMap: ItemsMap<TId, TItem>;\n        if (itemsMap) {\n            treeItemsMap = items ? itemsMap.setItems(items) : itemsMap;\n        } else {\n            treeItemsMap = new ItemsMap(new Map(), params).setItems(items);\n        }\n\n        const itemsAccessor = ItemsAccessor.toItemsAccessor(treeItemsMap);\n        const treeStructure = TreeStructure.createFromItems({ params, items: items ?? treeItemsMap, itemsAccessor });\n        return new TreeState(\n            treeStructure,\n            treeStructure,\n            TreeStructure.create(params, ItemsAccessor.toItemsAccessor(itemsMap)),\n            treeItemsMap,\n            setItems,\n        );\n    }\n\n    public static createFromItemsMap<TItem, TId>(\n        itemsMap: ItemsMap<TId, TItem> | undefined,\n        setItems: ItemsStorage<TItem, TId>['setItems'],\n        params: ITreeParams<TItem, TId>,\n    ) {\n        const itemsAccessor = ItemsAccessor.toItemsAccessor(itemsMap);\n        const treeStructure = TreeStructure.createFromItems({ params, items: itemsMap, itemsAccessor });\n        return new TreeState(\n            treeStructure,\n            treeStructure,\n            TreeStructure.create(params, ItemsAccessor.toItemsAccessor(itemsMap)),\n            itemsMap,\n            setItems,\n        );\n    }\n\n    public static blank<TItem, TId>(params: ITreeParams<TItem, TId>, itemsMap: ItemsMap<TId, TItem>, setItems: ItemsStorage<TItem, TId>['setItems']): TreeState<TItem, TId> {\n        const treeStructure = TreeStructure.create(params, ItemsAccessor.toItemsAccessor(itemsMap));\n\n        return this.create(\n            treeStructure,\n            treeStructure,\n            treeStructure,\n            itemsMap,\n            setItems,\n        );\n    }\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { DataSourceState, IImmutableMap, IMap, LazyDataSourceApi } from '../../../../../../../types';\nimport { TreeState } from '../../../treeState';\nimport { usePrevious } from '../../../../../../../hooks/usePrevious';\nimport { isQueryChanged } from '../lazyTree/helpers';\nimport { useItemsStatusCollector } from '../../common';\nimport { useDepsChanged } from '../../common/useDepsChanged';\nimport { getSelectedAndChecked } from '../../../treeStructure';\nimport { NOT_FOUND_RECORD } from '../../../constants';\nimport { ItemsStatuses } from '../types';\n\nexport interface LoadResult<TItem, TId> {\n    isUpdated: boolean;\n    isOutdated: boolean;\n    tree: TreeState<TItem, TId>;\n    error?: Error;\n}\n\nexport interface UseLoadDataProps<TItem, TId, TFilter = any> extends ItemsStatuses<TItem, TId, TFilter> {\n    tree: TreeState<TItem, TId>;\n    api: LazyDataSourceApi<TItem, TId, TFilter>;\n    dataSourceState?: DataSourceState<TFilter, TId>;\n    forceReload?: boolean;\n    showSelectedOnly?: boolean;\n    complexIds?: boolean;\n    getId: (item: TItem) => TId;\n    isLoaded?: boolean;\n    onForceReloadComplete?: () => void;\n    patch?: IMap<TId, TItem> | IImmutableMap<TId, TItem>;\n}\n\nexport function useLoadData<TItem, TId, TFilter = any>(\n    {\n        tree, api, dataSourceState, showSelectedOnly, isLoaded: isPrevouslyLoaded,\n        complexIds, getId, onForceReloadComplete, forceReload, patch,\n        itemsStatusCollector: externalItemsStatusCollector, itemsStatusMap,\n    }: UseLoadDataProps<TItem, TId, TFilter>,\n    deps: any[],\n) {\n    const prevDataSourceState = usePrevious(dataSourceState);\n    const prevForceReload = usePrevious(forceReload);\n\n    const [loadedTree, setLoadedTree] = useState(tree);\n    const [isLoaded, setIsLoaded] = useState(isPrevouslyLoaded);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isFetching, setIsFetching] = useState(false);\n\n    const itemsStatusCollector = useItemsStatusCollector(\n        {\n            itemsStatusMap,\n            complexIds,\n            getId,\n            itemsStatusCollector: externalItemsStatusCollector,\n            dataSourceState,\n            patch,\n        },\n        [itemsStatusMap, externalItemsStatusCollector],\n    );\n\n    const watchedApi = useMemo(\n        () => itemsStatusCollector.watch(api),\n        [itemsStatusCollector, api],\n    );\n\n    const loadData = useCallback(async (\n        sourceTree: TreeState<TItem, TId>,\n        dsState: DataSourceState<TFilter, TId> = {},\n    ): Promise<LoadResult<TItem, TId>> => {\n        const loadingTree = sourceTree;\n        const { checked, ...partialDsState } = dsState;\n        try {\n            const newTreePromise = sourceTree.loadAll<TFilter>({\n                using: partialDsState.search ? 'visible' : undefined,\n                options: {\n                    api: watchedApi,\n                    filter: {\n                        ...dsState?.filter,\n                    },\n                },\n                dataSourceState: partialDsState,\n            });\n\n            const newTree = await newTreePromise;\n            const linkToTree = sourceTree;\n\n            // If tree is changed during this load, than there was reset occurred (new value arrived)\n            // We need to tell caller to reject this result\n            const isOutdated = linkToTree !== loadingTree;\n            const isUpdated = linkToTree !== newTree;\n            return { isUpdated, isOutdated, tree: newTree };\n        } catch (e) {\n            // TBD - correct error handling\n            console.error('useLoadData: Error while loading items.', e);\n            return { isUpdated: false, isOutdated: false, tree: loadingTree, error: e };\n        }\n    }, [api]);\n\n    const depsChanged = useDepsChanged(deps);\n\n    const shouldForceReload = prevForceReload !== forceReload && forceReload;\n\n    const shouldLoad = (\n        !isFetching\n        && !isLoaded\n        && (!showSelectedOnly || (showSelectedOnly && getSelectedAndChecked(dataSourceState, patch).length))\n    ) || forceReload;\n\n    useEffect(() => {\n        if (shouldForceReload) {\n            setLoadedTree(tree);\n        }\n    }, [shouldForceReload]);\n\n    useEffect(() => {\n        if (shouldLoad) {\n            setIsFetching(true);\n            if (!isQueryChanged(prevDataSourceState, dataSourceState)) {\n                setIsLoading(true);\n            }\n            const checked = getSelectedAndChecked(dataSourceState, patch);\n            loadData(tree, dataSourceState)\n                .then(({ isOutdated, isUpdated, tree: newTree }) => {\n                    if (isUpdated && !isOutdated) {\n                        setLoadedTree(newTree);\n\n                        const notLoaded = checked.filter((id) => newTree.getById(id) === NOT_FOUND_RECORD);\n                        itemsStatusCollector.setNotFound(notLoaded);\n                        if (forceReload) {\n                            onForceReloadComplete();\n                        }\n                    }\n                })\n                .catch((e) => {\n                    itemsStatusCollector.setFailed(checked);\n                    throw e;\n                })\n                .finally(() => {\n                    setIsLoaded(true);\n                    setIsFetching(false);\n                    setIsLoading(false);\n                });\n        }\n    }, [shouldLoad, depsChanged, shouldForceReload]);\n\n    return { tree: loadedTree, isLoading, isFetching, isLoaded, itemsStatusCollector };\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { TreeState } from '../../../treeState';\nimport { AsyncTreeProps } from './types';\nimport { useLoadData } from './useLoadData';\nimport { usePrevious } from '../../../../../../../hooks/usePrevious';\nimport {\n    useItemsStorage, useDataSourceStateWithDefaults, useFilterTree, useSortTree,\n    useSearchTree, useSelectedOnlyTree, usePatchTree,\n} from '../../common';\nimport { UseTreeResult } from '../../types';\n\nexport function useAsyncTree<TItem, TId, TFilter = any>(\n    props: AsyncTreeProps<TItem, TId, TFilter>,\n    deps: [],\n): UseTreeResult<TItem, TId, TFilter> {\n    const {\n        getId,\n        complexIds,\n        getParentId,\n        getFilter,\n        getSearchFields,\n        sortBy,\n        sortSearchByRelevance = true,\n        rowOptions,\n        getRowOptions,\n        setDataSourceState,\n        isFoldedByDefault,\n        cascadeSelection,\n        showSelectedOnly,\n        patch,\n        isDeleted,\n        getNewItemPosition,\n        itemsStatusMap,\n        selectAll,\n        isLoaded,\n        getItemTemporaryOrder,\n        fixItemBetweenSortings,\n    } = props;\n\n    const { itemsMap, setItems } = useItemsStorage({\n        itemsMap: props.itemsMap,\n        setItems: props.setItems,\n        params: { getId, complexIds },\n    });\n\n    const [isForceReload, setIsForceReload] = useState(false);\n\n    const baseTree = useMemo(() => {\n        if (isLoaded) {\n            return TreeState.createFromItemsMap(itemsMap, setItems, { getId, getParentId, complexIds });\n        }\n        return TreeState.blank({ getId, getParentId, complexIds }, itemsMap, setItems);\n    }, [...deps, isLoaded]);\n\n    const [incommingTree, setIncommingTree] = useState(baseTree);\n\n    const prevIsForceReload = usePrevious(isForceReload);\n    const dataSourceState = useDataSourceStateWithDefaults({ dataSourceState: props.dataSourceState });\n\n    const { tree: treeWithData, itemsStatusCollector, isLoaded: isTreeLoaded, isLoading, isFetching } = useLoadData({\n        getId,\n        complexIds,\n        api: () => props.api().then((items) => ({ items })),\n        tree: incommingTree,\n        dataSourceState: {\n            visibleCount: dataSourceState.visibleCount,\n            topIndex: dataSourceState.topIndex,\n            checked: dataSourceState.checked,\n            selectedId: dataSourceState.selectedId,\n        },\n        itemsStatusCollector: props.itemsStatusCollector,\n        forceReload: isForceReload,\n        onForceReloadComplete: () => setIsForceReload(false),\n        showSelectedOnly,\n        isLoaded,\n        itemsStatusMap,\n    }, [...deps, isForceReload, incommingTree]);\n\n    const prevIsFetching = usePrevious(isFetching);\n\n    useEffect(() => {\n        if (prevIsForceReload !== isForceReload && isForceReload\n                && prevIsFetching !== isFetching && !isFetching) {\n            setIsForceReload(false);\n        }\n    }, [treeWithData]);\n\n    const reload = useCallback(() => {\n        setIncommingTree(TreeState.blank({ getId, getParentId, complexIds }, itemsMap, setItems));\n        setIsForceReload(true);\n    }, [setIsForceReload]);\n\n    const isTreeLoading = !isTreeLoaded || isLoading || isFetching;\n    const filteredTree = useFilterTree(\n        { tree: treeWithData, getFilter, dataSourceState, isLoading: isTreeLoading },\n        [treeWithData, isTreeLoading],\n    );\n\n    const sortTree = useSortTree(\n        { tree: filteredTree, sortBy, dataSourceState, isLoading: isTreeLoading },\n        [filteredTree, isTreeLoading],\n    );\n\n    const searchTree = useSearchTree(\n        {\n            tree: sortTree,\n            getSearchFields,\n            sortSearchByRelevance,\n            dataSourceState,\n            isLoading: isTreeLoading,\n        },\n        [sortTree, isTreeLoading],\n    );\n\n    const treeWithSelectedOnly = useSelectedOnlyTree({\n        tree: searchTree,\n        dataSourceState,\n        isLoading: isTreeLoading,\n    }, [searchTree, isTreeLoading]);\n\n    const { tree, applyPatch } = usePatchTree({\n        tree: treeWithSelectedOnly,\n        patch: showSelectedOnly ? null : patch,\n        isDeleted,\n        getNewItemPosition,\n        getItemTemporaryOrder,\n        fixItemBetweenSortings,\n        sorting: dataSourceState.sorting,\n        sortBy,\n    });\n\n    const totalCount = useMemo(() => {\n        const { totalCount: rootTotalCount } = tree.visible.getItems(undefined);\n\n        return rootTotalCount ?? tree.visible.getTotalCount?.() ?? 0;\n    }, [tree.visible]);\n\n    return {\n        tree: showSelectedOnly ? tree.selectedOnly : tree.visible,\n        treeWithoutPatch: treeWithSelectedOnly.visible,\n        selectionTree: tree.full,\n        reload,\n        totalCount,\n        getItemStatus: itemsStatusCollector.getItemStatus(itemsMap),\n        rowOptions,\n        getRowOptions,\n        getParentId,\n        getId,\n        dataSourceState,\n        setDataSourceState,\n        isFoldedByDefault,\n        cascadeSelection,\n        showSelectedOnly,\n        selectAll,\n        applyPatch,\n\n        isLoading,\n        isFetching,\n    };\n}\n","import { useMemo } from 'react';\nimport { SyncTreeProps } from './types';\nimport { TreeState } from '../../../treeState';\nimport { SharedItemsState } from '../types';\n\nexport interface UseCreateTreeProps<TItem, TId, TFilter = any> extends\n    Pick<\n    SyncTreeProps<TItem, TId, TFilter>,\n    'complexIds' | 'getId' | 'getParentId'\n    >,\n    SharedItemsState<TItem, TId> {\n    items?: TItem[] | TreeState<TItem, TId>;\n}\n\nexport function useCreateTree<TItem, TId, TFilter = any>(\n    props: UseCreateTreeProps<TItem, TId, TFilter>,\n    deps: any[],\n): TreeState<TItem, TId> {\n    const { items, itemsMap, setItems, complexIds, getId, getParentId } = props;\n    const tree = useMemo(() => {\n        if (items instanceof TreeState) {\n            return items;\n        }\n\n        return TreeState.createFromItems<TItem, TId>(\n            items,\n            itemsMap,\n            { getId, getParentId, complexIds },\n            setItems,\n        );\n    }, [...deps, itemsMap]);\n\n    return tree;\n}\n","import { useCallback, useMemo, useState } from 'react';\nimport { SyncTreeProps } from './types';\nimport { useCreateTree } from './useCreateTree';\nimport {\n    useFilterTree, useSearchTree, useSortTree, useDataSourceStateWithDefaults,\n    useItemsStorage, usePatchTree, useSelectedOnlyTree,\n} from '../../common';\nimport { UseTreeResult } from '../../types';\n\nexport function useSyncTree<TItem, TId, TFilter = any>(\n    { sortSearchByRelevance = true, items, ...restProps }: SyncTreeProps<TItem, TId, TFilter>,\n    deps: any[],\n): UseTreeResult<TItem, TId, TFilter> {\n    const props = { ...restProps, sortSearchByRelevance };\n    const [triggerValue, trigger] = useState(false);\n\n    const resetTree = useCallback(() => {\n        trigger((currentTriggerValue) => !currentTriggerValue);\n    }, [trigger]);\n\n    const {\n        getId,\n        getParentId,\n        complexIds,\n        getFilter,\n        getSearchFields,\n        sortBy,\n        rowOptions,\n        getRowOptions,\n        setDataSourceState,\n        isFoldedByDefault,\n        cascadeSelection,\n        showSelectedOnly,\n        selectAll,\n        fixItemBetweenSortings,\n        getNewItemPosition,\n        isDeleted,\n    } = props;\n\n    const { itemsMap, setItems } = useItemsStorage({\n        items,\n        setItems: props.setItems,\n        params: { getId, complexIds },\n    });\n\n    const fullTree = useCreateTree(\n        { items, itemsMap, setItems, getId, getParentId, complexIds },\n        [...deps, items, itemsMap, triggerValue],\n    );\n\n    const dataSourceState = useDataSourceStateWithDefaults({ dataSourceState: props.dataSourceState });\n\n    const filteredTree = useFilterTree(\n        { tree: fullTree, getFilter, dataSourceState },\n        [fullTree],\n    );\n\n    const sortTree = useSortTree(\n        { tree: filteredTree, sortBy, dataSourceState },\n        [filteredTree],\n    );\n\n    const searchTree = useSearchTree(\n        { tree: sortTree, getSearchFields, sortSearchByRelevance, dataSourceState },\n        [sortTree],\n    );\n\n    const treeWithSelectedOnly = useSelectedOnlyTree({\n        tree: searchTree,\n        dataSourceState,\n    }, [searchTree]);\n\n    const { tree, applyPatch } = usePatchTree({\n        tree: treeWithSelectedOnly,\n        patch: showSelectedOnly ? null : restProps.patch,\n        isDeleted,\n        getNewItemPosition,\n        fixItemBetweenSortings,\n        sorting: dataSourceState.sorting,\n        sortBy,\n    });\n\n    const reload = useCallback(() => {\n        resetTree();\n    }, [resetTree]);\n\n    const totalCount = useMemo(() => {\n        const { totalCount: rootTotalCount } = tree.visible.getItems(undefined);\n\n        return rootTotalCount ?? tree.visible.getTotalCount?.() ?? 0;\n    }, [tree.visible]);\n\n    return {\n        tree: showSelectedOnly ? tree.selectedOnly : tree.visible,\n        treeWithoutPatch: treeWithSelectedOnly.visible,\n        selectionTree: tree.full,\n        totalCount,\n        rowOptions,\n        getRowOptions,\n        getParentId,\n        getId,\n        dataSourceState,\n        setDataSourceState,\n        isFoldedByDefault,\n        reload,\n        cascadeSelection,\n        showSelectedOnly,\n        selectAll,\n        applyPatch,\n    };\n}\n","import { useAsyncTree } from './asyncTree';\nimport { useLazyTree } from './lazyTree';\nimport { useSyncTree } from './syncTree';\n\nexport const strategies = {\n    sync: useSyncTree,\n    async: useAsyncTree,\n    lazy: useLazyTree,\n};\n\nexport type {\n    UseTreeProps,\n    LoadMissingRecords,\n    GetItemStatus,\n} from './types';\n","import { useMemo } from 'react';\nimport { UseTreeResult } from './types';\nimport { TreeHook, UseTreeProps } from './strategies/types';\nimport { usePrevious } from '../../../../../hooks/usePrevious';\nimport { strategies } from './strategies';\n\nexport function useTree<TItem, TId, TFilter = any>(props: UseTreeProps<TItem, TId, TFilter>, deps: any[]): UseTreeResult<TItem, TId, TFilter> {\n    const prevType = usePrevious(props.type);\n\n    if (prevType && props.type !== prevType) {\n        throw new Error(\"Tree type can't be changed between renders\");\n    }\n\n    const useStrategy: TreeHook<typeof props.type> = useMemo(\n        () => strategies[props.type] as TreeHook<typeof props.type>,\n        [props.type],\n    );\n\n    const tree = useStrategy<TItem, TId>(props, [...deps]);\n\n    return tree;\n}\n","export const idToKey = <TId, >(id: TId) => typeof id === 'object' ? JSON.stringify(id) : `${id}`;\n","export const setObjectFlag = (object: any, key: string, value: boolean) => {\n    return { ...object, [key]: value };\n};\n","import { LOADING_RECORD, PENDING_RECORD } from '../tree/constants';\nimport { RecordStatus } from '../tree/types';\n\nexport const isInProgress = (status: RecordStatus): status is typeof PENDING_RECORD | typeof LOADING_RECORD =>\n    [PENDING_RECORD, LOADING_RECORD].includes(status);\n","import { ITree, NOT_FOUND_RECORD, Tree } from '../../tree';\n\nexport const idToKey = <TId>(id: TId) => typeof id === 'object' ? JSON.stringify(id) : `${id}`;\n\nexport const buildParentsLookup = <TItem, TId>(ids: TId[], tree: ITree<TItem, TId>, getParentId?: (item: TItem) => TId) => {\n    const idsByKey: Record<string, boolean> = {};\n    const someChildInIdsByKey: Record<string, boolean> = {};\n    const checkedItems = ids ?? [];\n    for (let i = checkedItems.length - 1; i >= 0; i--) {\n        const id = checkedItems[i];\n        idsByKey[idToKey(id)] = true;\n        if (!tree || !getParentId) {\n            continue;\n        }\n\n        const item = tree.getById(id);\n        if (item === NOT_FOUND_RECORD) {\n            continue;\n        }\n\n        const parentId = getParentId(item);\n        if (!someChildInIdsByKey[idToKey(parentId)]) {\n            const parents = Tree.getParents(id, tree).reverse();\n            for (const parent of parents) {\n                if (someChildInIdsByKey[idToKey(parent)]) {\n                    break;\n                }\n                someChildInIdsByKey[idToKey(parent)] = true;\n            }\n        }\n    }\n    return { idsByKey, someChildInIdsByKey };\n};\n","import { useCallback, useMemo } from 'react';\nimport { CascadeSelectionTypes, DataRowProps } from '../../../../../types';\nimport { ITree, NOT_FOUND_RECORD } from '../../tree';\nimport { CommonTreeConfig, GetItemStatus } from '../../tree/hooks/strategies/types';\nimport { CascadeSelectionService } from './useCascadeSelectionService';\nimport { FAILED_RECORD } from '../../tree';\nimport { isInProgress } from '../../helpers';\nimport { buildParentsLookup, idToKey } from './buildParentsLookup';\nimport { CheckingHelper } from '../../tree/treeStructure';\n\n/**\n * Checking service configuration.\n */\nexport interface UseCheckingServiceProps<TItem, TId, TFilter = any> extends\n    Pick<\n    CommonTreeConfig<TItem, TId, TFilter>,\n    'getParentId' | 'dataSourceState' | 'setDataSourceState'\n    | 'rowOptions' | 'getRowOptions' | 'cascadeSelection'\n    >,\n    CascadeSelectionService<TItem, TId>,\n    GetItemStatus<TId> {\n    /**\n     * Tree-like data, selection should be performed on.\n     */\n    tree: ITree<TItem, TId>;\n}\n\n/**\n * Service, which provides checking functionality and checking/parially checking info.\n */\nexport interface CheckingService<TItem, TId> {\n    /**\n     * Provides knowledge about checked state of the row.\n     * @param row - row, which checked state info should be returned.\n     * @returns if row is checked.\n     */\n    isRowChecked: (row: DataRowProps<TItem, TId>) => boolean;\n\n    /**\n     * Provides knowledge about children checked state of the row.\n     * @param row - row, which children checked state info should be returned.\n     * @returns if row children are checked.\n     */\n    isRowChildrenChecked: (row: DataRowProps<TItem, TId>) => boolean;\n\n    /**\n     * Checking handler of a row.\n     * @param row - row, which should be checked.\n     */\n    handleOnCheck: (row: DataRowProps<TItem, TId>) => void;\n\n    /**\n     * Select all handler of a row.\n     * @param selectAll - specifies, if select all or clear all should be performed.\n     */\n    handleSelectAll: (selectAll: boolean) => void;\n\n    /**\n     * Clears all checked.\n     */\n    clearAllChecked: () => void;\n\n    /**\n     * Provides info about the ability to check and item.\n     * @param id - id of the item to check if checkable.\n     * @param item - record, if it is present or not found record symbol.\n     * @returns if item with some id is checkable.\n     */\n    isItemCheckable: (id: TId, item: TItem | typeof NOT_FOUND_RECORD) => boolean;\n}\n\n/**\n * Service, which provides checking functionality.\n * @returns checking service.\n */\nexport function useCheckingService<TItem, TId>(\n    {\n        tree,\n        getParentId,\n        dataSourceState,\n        setDataSourceState,\n        cascadeSelection,\n        getRowOptions,\n        rowOptions,\n        getCompleteTreeForCascadeSelection,\n        getItemStatus,\n    }: UseCheckingServiceProps<TItem, TId>,\n): CheckingService<TItem, TId> {\n    const checked = dataSourceState.checked ?? [];\n    const checkingInfoById = useMemo(\n        () => buildParentsLookup(checked, tree, getParentId),\n        [tree, getParentId, checked],\n    );\n\n    const { idsByKey: checkedByKey, someChildInIdsByKey: someChildCheckedByKey } = checkingInfoById;\n\n    const isRowChecked = useCallback((row: DataRowProps<TItem, TId>) => {\n        const exactCheck = !!checkedByKey[row.rowKey];\n        if (exactCheck || cascadeSelection !== CascadeSelectionTypes.IMPLICIT) {\n            return exactCheck;\n        }\n\n        const { path } = row;\n        return path.some(({ id }) => !!checkedByKey[idToKey(id)]);\n    }, [checkedByKey]);\n\n    const isRowChildrenChecked = useCallback((row: DataRowProps<TItem, TId>) => {\n        if (cascadeSelection === CascadeSelectionTypes.IMPLICIT) {\n            return isRowChecked(row) || someChildCheckedByKey[row.rowKey] || false;\n        }\n\n        return someChildCheckedByKey[row.rowKey] ?? false;\n    }, [someChildCheckedByKey, isRowChecked, tree]);\n\n    const getRowProps = useCallback((item: TItem) => {\n        const externalRowOptions = getRowOptions ? getRowOptions(item) : {};\n        return { ...rowOptions, ...externalRowOptions };\n    }, [rowOptions, getRowOptions]);\n\n    const isItemCheckable = useCallback((id: TId, item: TItem | typeof NOT_FOUND_RECORD) => {\n        if (item === NOT_FOUND_RECORD) {\n            if (!getItemStatus) {\n                return true;\n            }\n\n            const status = getItemStatus(id);\n            if (isInProgress(status)) {\n                return false;\n            }\n\n            if (status === FAILED_RECORD || status === NOT_FOUND_RECORD) {\n                return true;\n            }\n\n            return false;\n        }\n\n        const rowProps = getRowProps(item);\n        return rowProps?.checkbox?.isVisible && !rowProps?.checkbox?.isDisabled;\n    }, [getRowProps]);\n\n    const isItemUnknown = useCallback((id: TId) => {\n        const item = tree.getById(id);\n        if (item !== NOT_FOUND_RECORD) {\n            return false;\n        }\n        if (!getItemStatus) {\n            return true;\n        }\n\n        const status = getItemStatus(id);\n        return status === FAILED_RECORD || status === NOT_FOUND_RECORD;\n    }, [tree, getItemStatus]);\n\n    const handleCheck = useCallback(async (isChecked: boolean, checkedId?: TId, isRoot?: boolean) => {\n        const completeTree = await getCompleteTreeForCascadeSelection(checkedId, isChecked, isRoot);\n        setDataSourceState((dsState) => ({\n            ...dsState,\n            checked: CheckingHelper.cascadeSelection({\n                tree: completeTree,\n                currentCheckedIds: dsState.checked ?? [],\n                checkedId,\n                isChecked,\n                isCheckable: isItemCheckable,\n                isUnknown: isItemUnknown,\n                cascadeSelectionType: cascadeSelection,\n            }),\n        }));\n    }, [getCompleteTreeForCascadeSelection, setDataSourceState, isItemCheckable, isItemUnknown, cascadeSelection]);\n\n    const handleSelectAll = useCallback((isChecked: boolean) => {\n        handleCheck(isChecked, undefined, true);\n    }, [handleCheck]);\n\n    const clearAllChecked = useCallback(() => {\n        handleCheck(false, undefined, true);\n    }, [handleCheck]);\n\n    const handleOnCheck = useCallback((rowProps: DataRowProps<TItem, TId>) => {\n        const id = rowProps.id;\n        const isChecked = !rowProps.isChecked;\n\n        handleCheck(isChecked, id);\n    }, [handleCheck]);\n\n    return {\n        isRowChecked,\n        isRowChildrenChecked,\n        handleOnCheck,\n        handleSelectAll,\n        clearAllChecked,\n        isItemCheckable,\n    };\n}\n","import { useCallback } from 'react';\nimport { DataRowProps, DataSourceState, ScrollToConfig } from '../../../../../types';\nimport { idToKey, setObjectFlag } from '../../helpers';\nimport { CommonTreeConfig } from '../../tree/hooks/strategies/types';\n\n/**\n * Folding service configuration.\n */\nexport type UseFoldingServiceProps<TItem, TId, TFilter = any> = Pick<\nCommonTreeConfig<TItem, TId, TFilter>,\n'getId' | 'dataSourceState' | 'setDataSourceState' | 'isFoldedByDefault'\n>;\n\n/**\n * Service, which provides folding functionality and folding info.\n */\nexport interface FoldingService<TItem, TId> {\n    /**\n     * Folding event handler.\n     * @param row - row, which should be folded.\n     */\n    handleOnFold: (row: DataRowProps<TItem, TId>) => void;\n    /**\n     * Provides knowledge about folding state of the row.\n     * @param row - row, which folding state info should be returned.\n     * @returns if row is folded.\n     */\n    isFolded: (item: TItem) => boolean\n}\n\n/**\n * Service, which provides folding functionality.\n * @returns folding service.\n */\nexport function useFoldingService<TItem, TId, TFilter = any>({\n    dataSourceState,\n    setDataSourceState,\n    isFoldedByDefault,\n    getId,\n}: UseFoldingServiceProps<TItem, TId, TFilter>): FoldingService<TItem, TId> {\n    const defaultIsFolded = (state: DataSourceState<TFilter, TId>) => {\n        return state.foldAll;\n    };\n\n    const isFolded = useCallback((item: TItem) => {\n        const searchIsApplied = !!dataSourceState?.search;\n        if (searchIsApplied) {\n            return false;\n        }\n\n        const folded = dataSourceState.folded || {};\n        const key = idToKey(getId(item));\n        if (folded[key] != null) {\n            return folded[key];\n        }\n\n        if (isFoldedByDefault) {\n            return isFoldedByDefault(item, { foldAll: dataSourceState?.foldAll });\n        }\n\n        return defaultIsFolded(dataSourceState) ?? true;\n    }, [isFoldedByDefault, dataSourceState?.search, dataSourceState?.folded, dataSourceState?.foldAll]);\n\n    const handleOnFold = useCallback((rowProps: DataRowProps<TItem, TId>) => {\n        setDataSourceState((dsState) => {\n            const fold = !rowProps.isFolded;\n            const indexToScroll = rowProps.index - (rowProps.path?.length ?? 0);\n            const scrollTo: ScrollToConfig = fold && rowProps.isPinned\n                ? { index: indexToScroll, align: 'nearest' }\n                : dsState.scrollTo;\n\n            return {\n                ...dsState,\n                scrollTo,\n                folded: setObjectFlag(dsState && dsState.folded, rowProps.rowKey, fold),\n            };\n        });\n    }, [setDataSourceState]);\n\n    return { handleOnFold, isFolded };\n}\n","import { useCallback } from 'react';\nimport { SetDataSourceState } from '../../../../../types';\n\n/**\n * Focus service configuration.\n */\nexport interface UseFocusServiceProps<TId, TFilter = any> {\n    /**\n     * DataSource state update handler.\n     */\n    setDataSourceState?: SetDataSourceState<TFilter, TId>;\n}\n\n/**\n * Focus service functionality.\n */\nexport interface FocusService {\n    /**\n     * Focus event handler.\n     * @param focusedIndex - index of the row to be focused.\n     */\n    handleOnFocus: (focusedIndex: number) => void;\n}\n\n/**\n * Service, which provides focus functionality.\n * @returns focus service.\n */\nexport function useFocusService<TId, TFilter = any>({\n    setDataSourceState,\n}: UseFocusServiceProps<TId, TFilter>): FocusService {\n    const handleOnFocus = useCallback((focusIndex: number) => {\n        setDataSourceState((dataSourceState) => ({ ...dataSourceState, focusedIndex: focusIndex }));\n    }, [setDataSourceState]);\n\n    return { handleOnFocus };\n}\n","import { useCallback, useMemo } from 'react';\nimport { DataRowProps } from '../../../../../types';\nimport { buildParentsLookup, idToKey } from './buildParentsLookup';\nimport { ITree } from '../../tree';\nimport { CommonTreeConfig } from '../../tree/hooks/strategies/types';\n\n/**\n * Checking service configuration.\n */\nexport interface UseSelectingServiceProps<TItem, TId, TFilter = any> extends\n    Pick<\n    CommonTreeConfig<TItem, TId, TFilter>,\n    'getParentId' | 'dataSourceState' | 'setDataSourceState'\n    > {\n    /**\n     * Tree-like data, selection should be performed on.\n     */\n    tree: ITree<TItem, TId>;\n}\n\n/**\n * Service, which provides selecting functionality and seleting info.\n */\nexport interface SelectingService<TItem, TId> {\n    /**\n     * Selecting handler of a row.\n     * @param row - row, which should be selected.\n     */\n    handleOnSelect: (row: DataRowProps<TItem, TId>) => void;\n\n    /**\n     * Provides knowledge about selection state of the row.\n     * @param row - row, which selection state info should be returned.\n     * @returns if row is selected.\n     */\n    isRowSelected: (row: DataRowProps<TItem, TId>) => boolean;\n\n    /**\n     * Provides knowledge about children selection state of the row.\n     * @param row - row, which children selection state info should be returned.\n     * @returns if row is selected.\n     */\n    isRowChildSelected: (row: DataRowProps<TItem, TId>) => boolean;\n}\n\n/**\n * Service, which provides selection functionality.\n * @returns selecting service.\n */\nexport function useSelectingService<TItem, TId, TFilter = any>({\n    tree,\n    getParentId,\n    dataSourceState,\n    setDataSourceState,\n}: UseSelectingServiceProps<TItem, TId, TFilter>): SelectingService<TItem, TId> {\n    const { selectedId } = dataSourceState;\n    const selectingInfoById = useMemo(\n        () => buildParentsLookup(selectedId === null ? [] : [selectedId], tree, getParentId),\n        [tree, getParentId, selectedId],\n    );\n\n    const { idsByKey: selectedByKey, someChildInIdsByKey: someChildSelectedByKey } = selectingInfoById;\n\n    const isRowSelected = useCallback((row: DataRowProps<TItem, TId>) => {\n        return !!selectedByKey[idToKey(row.id)];\n    }, [selectedByKey]);\n\n    const isRowChildSelected = useCallback((row: DataRowProps<TItem, TId>) => {\n        return someChildSelectedByKey[idToKey(row.id)] ?? false;\n    }, [someChildSelectedByKey]);\n\n    const handleOnSelect = useCallback((rowProps: DataRowProps<TItem, TId>) => {\n        setDataSourceState((dsState) => ({\n            ...dsState,\n            selectedId: rowProps.id,\n        }));\n    }, [setDataSourceState]);\n\n    return { handleOnSelect, isRowSelected, isRowChildSelected };\n}\n","import { useCallback } from 'react';\nimport { ITree } from '../../tree';\nimport { LoadMissingRecords } from '../../tree/hooks/strategies/types';\n\n/**\n * Cascade selection service configuration.\n */\nexport interface UseCascadeSelectionServiceProps<TItem, TId> extends\n    LoadMissingRecords<TItem, TId> {\n    /**\n     * Tree-like data, cascade selection should be performed on.\n     */\n    tree: ITree<TItem, TId>;\n}\n\n/**\n * A service which provides cascade selection functionality with loading missing records.\n */\nexport interface CascadeSelectionService<TItem, TId> {\n    /**\n     * Provides a cascade selection functionality.\n     * @param isChecked - checking state of the item.\n     * @param checkedId - ID of the item to be checked. If `undefined` - root is checked.\n     * @param isRoot - marks if cascade selection should be performed on all the items.\n     * @param checked - current state of checked items.\n     * @returns new checked items.\n     */\n    getCompleteTreeForCascadeSelection: (id: TId, isChecked: boolean, isRoot: boolean) => Promise<ITree<TItem, TId>>;\n}\n\n/**\n * Service, which provides cascade selection functionality with support of loading missing records as needed.\n * @returns cascade selection service.\n */\nexport function useCascadeSelectionService<TItem, TId>({\n    tree,\n    loadMissingRecordsOnCheck = async () => tree,\n}: UseCascadeSelectionServiceProps<TItem, TId>): CascadeSelectionService<TItem, TId> {\n    const getCompleteTreeForCascadeSelection = useCallback(async (checkedId: TId, isChecked: boolean, isRoot?: boolean) => {\n        return await loadMissingRecordsOnCheck(checkedId, isChecked, isRoot);\n    }, [tree, loadMissingRecordsOnCheck]);\n\n    return { getCompleteTreeForCascadeSelection };\n}\n","import { useCallback, useMemo } from 'react';\nimport { DataRowPathItem, DataRowProps } from '../../../../types';\nimport { CheckingService, FocusService, FoldingService, SelectingService } from './services';\nimport { idToKey } from '../helpers';\nimport { CommonTreeConfig } from '../tree/hooks/strategies/types/common';\nimport { ITree, Tree } from '../tree';\n\nexport interface UseDataRowPropsProps<TItem, TId, TFilter = any> extends Omit<CheckingService<TItem, TId>, 'clearAllChecked' | 'handleSelectAll'>,\n    FocusService,\n    SelectingService<TItem, TId>,\n    FoldingService<TItem, TId>,\n    Pick<\n    CommonTreeConfig<TItem, TId, TFilter>,\n    'dataSourceState' | 'rowOptions' | 'getRowOptions' | 'getId'\n    > {\n    /**\n     * Tree-like data, rows to be built from.\n     */\n    tree: ITree<TItem, TId>;\n\n    getEstimatedChildrenCount: (id: TId) => number;\n}\n\nexport function useDataRowProps<TItem, TId, TFilter = any>(\n    {\n        tree,\n        getId,\n        dataSourceState,\n        getRowOptions,\n        rowOptions,\n        isFolded,\n        handleOnCheck,\n        handleOnSelect,\n        handleOnFocus,\n        handleOnFold,\n        isRowSelected,\n        isRowChildSelected,\n        isRowChecked,\n        isRowChildrenChecked,\n        getEstimatedChildrenCount,\n    }: UseDataRowPropsProps<TItem, TId, TFilter>,\n) {\n    const updateRowOptions = useCallback((row: DataRowProps<TItem, TId>) => {\n        const externalRowOptions = (getRowOptions && !row.isLoading)\n            ? getRowOptions(row.value, row.index)\n            : {};\n\n        const fullRowOptions = { ...rowOptions, ...externalRowOptions };\n\n        const estimatedChildrenCount = getEstimatedChildrenCount(row.id);\n        row.isFoldable = false;\n        if (estimatedChildrenCount > 0) {\n            row.isFoldable = true;\n        }\n\n        const isCheckable = !!(fullRowOptions?.checkbox && fullRowOptions?.checkbox?.isVisible && !fullRowOptions?.checkbox?.isDisabled);\n        const isSelectable = fullRowOptions && fullRowOptions.isSelectable;\n        if (fullRowOptions != null) {\n            const rowValue = row.value;\n            Object.assign(row, fullRowOptions);\n            row.value = fullRowOptions.value ?? rowValue;\n        }\n        row.isFocused = dataSourceState.focusedIndex === row.index;\n        row.isChecked = isRowChecked(row);\n        row.isSelected = isRowSelected(row);\n        row.isCheckable = isCheckable;\n        row.onCheck = isCheckable ? handleOnCheck : undefined;\n\n        row.onSelect = fullRowOptions?.isSelectable ? handleOnSelect : undefined;\n        row.onFocus = (isSelectable || isCheckable || row.isFoldable) ? handleOnFocus : undefined;\n        row.onFold = row.isFoldable ? handleOnFold : undefined;\n        row.isFolded = row.isFoldable && isFolded(row.value);\n\n        row.isChildrenChecked = row.isChildrenChecked || isRowChildrenChecked(row);\n        row.isChildrenSelected = row.isChildrenSelected || isRowChildSelected(row);\n\n        return row;\n    }, [\n        tree,\n        getRowOptions,\n        rowOptions,\n        getEstimatedChildrenCount,\n        dataSourceState.focusedIndex,\n        dataSourceState.selectedId,\n        isRowChecked,\n        isRowChildrenChecked,\n        handleOnCheck,\n        handleOnSelect,\n        handleOnFocus,\n        isFolded,\n        handleOnFold,\n    ]);\n\n    const getRowProps = useCallback((item: TItem, index: number): DataRowProps<TItem, TId> => {\n        const id = getId(item);\n        const key = idToKey(id);\n        const path = Tree.getPathById(id, tree);\n        const parentId = path.length > 0 ? path[path.length - 1].id : undefined;\n        const rowProps = {\n            id,\n            parentId,\n            key,\n            rowKey: key,\n            index,\n            value: item,\n            depth: path.length,\n            path,\n        } as DataRowProps<TItem, TId>;\n\n        return updateRowOptions(rowProps);\n    }, [getId, tree, updateRowOptions]);\n\n    const getEmptyRowProps = useCallback((id: any, index: number = 0, path: DataRowPathItem<TId, TItem>[] = null): DataRowProps<TItem, TId> => {\n        const checked = dataSourceState?.checked ?? [];\n        const isChecked = checked.includes(id);\n        return {\n            id,\n            rowKey: idToKey(id),\n            value: undefined,\n            index,\n            depth: path ? path.length : 0,\n            path: path ?? [],\n            checkbox: rowOptions?.checkbox?.isVisible && { isVisible: true, isDisabled: true },\n            isChecked,\n        };\n    }, [dataSourceState?.checked, rowOptions]);\n\n    const getLoadingRowProps = useCallback((id: any, index: number = 0, path: DataRowPathItem<TId, TItem>[] = null): DataRowProps<TItem, TId> => {\n        const rowProps = getEmptyRowProps(id, index, path);\n        return {\n            ...rowProps,\n            checkbox: { ...rowProps.checkbox, isDisabled: true },\n            isLoading: true,\n        };\n    }, [getEmptyRowProps]);\n\n    const getUnknownRowProps = useCallback((id: any, index: number = 0, path: DataRowPathItem<TId, TItem>[] = null): DataRowProps<TItem, TId> => {\n        const emptyRowProps = getEmptyRowProps(id, index, path);\n        const checkbox = (rowOptions?.checkbox?.isVisible || emptyRowProps.isChecked)\n            ? { isVisible: true, isDisabled: false }\n            : undefined;\n\n        const isCheckable = checkbox && checkbox.isVisible && !checkbox.isDisabled;\n        return {\n            ...emptyRowProps,\n            checkbox,\n            isUnknown: true,\n            onCheck: isCheckable ? handleOnCheck : undefined,\n        };\n    }, [getEmptyRowProps, rowOptions, handleOnCheck]);\n\n    return useMemo(\n        () => ({ getRowProps, getEmptyRowProps, getLoadingRowProps, getUnknownRowProps, updateRowOptions }),\n        [getRowProps, getEmptyRowProps, getLoadingRowProps, getUnknownRowProps, updateRowOptions],\n    );\n}\n","import { CascadeSelection, CascadeSelectionTypes, DataRowProps } from '../../../../types';\n\nexport interface NodeStats {\n    isSomeCheckable: boolean;\n    isSomeChecked: boolean;\n    isAllChecked: boolean;\n    isSomeSelected: boolean;\n    hasMoreRows: boolean;\n    isSomeCheckboxEnabled: boolean;\n}\n\nexport const getDefaultNodeStats = () => ({\n    isSomeCheckable: false,\n    isSomeChecked: false,\n    isAllChecked: true,\n    isSomeSelected: false,\n    hasMoreRows: false,\n    isSomeCheckboxEnabled: false,\n});\n\nexport const mergeStats = (parentStats: NodeStats, childStats: NodeStats) => ({\n    ...parentStats,\n    isSomeSelected: parentStats.isSomeSelected || childStats.isSomeSelected,\n    isSomeCheckable: parentStats.isSomeCheckable || childStats.isSomeCheckable,\n    isSomeChecked: parentStats.isSomeChecked || childStats.isSomeChecked,\n    isAllChecked: parentStats.isAllChecked && childStats.isAllChecked,\n    isSomeCheckboxEnabled: parentStats.isSomeCheckboxEnabled || childStats.isSomeCheckboxEnabled,\n    hasMoreRows: parentStats.hasMoreRows || childStats.hasMoreRows,\n});\n\nexport const getRowStats = <TItem, TId>(row: DataRowProps<TItem, TId>, actualStats: NodeStats, cascadeSelection: CascadeSelection): NodeStats => {\n    let {\n        isSomeCheckable, isSomeChecked, isAllChecked, isSomeSelected, isSomeCheckboxEnabled,\n    } = actualStats;\n\n    if (row.checkbox && row.checkbox.isVisible) {\n        isSomeCheckable = true;\n        if (row.isChecked || row.isChildrenChecked) {\n            isSomeChecked = true;\n        }\n        if (!row.checkbox.isDisabled || isSomeCheckboxEnabled) {\n            isSomeCheckboxEnabled = true;\n        }\n\n        const isImplicitCascadeSelection = cascadeSelection === CascadeSelectionTypes.IMPLICIT;\n        if (\n            (!row.isChecked && !row.checkbox.isDisabled && !isImplicitCascadeSelection)\n            || (row.parentId === undefined && !row.isChecked && isImplicitCascadeSelection)\n        ) {\n            isAllChecked = false;\n        }\n    }\n\n    if (row.isSelected || row.isChildrenSelected) {\n        isSomeSelected = true;\n    }\n\n    return {\n        ...actualStats, isSomeCheckable, isSomeChecked, isAllChecked, isSomeSelected, isSomeCheckboxEnabled,\n    };\n};\n","import { useMemo } from 'react';\nimport { ITree, NOT_FOUND_RECORD, Tree } from '../tree';\nimport { DataRowPathItem, DataRowProps } from '../../../../types';\nimport { idToKey } from '../helpers';\nimport { NodeStats, getDefaultNodeStats, getRowStats, mergeStats } from './stats';\nimport { CommonTreeConfig } from '../tree/hooks/strategies/types/common';\n\nexport interface UseBuildRowsProps<TItem, TId, TFilter = any> extends\n    Pick<\n    CommonTreeConfig<TItem, TId, TFilter>,\n    'dataSourceState' | 'rowOptions' | 'getRowOptions' | 'cascadeSelection'\n    > {\n\n    tree: ITree<TItem, TId>;\n\n    getEstimatedChildrenCount: (id: TId) => number;\n    getMissingRecordsCount: (id: TId, totalRowsCount: number, loadedChildrenCount: number) => number;\n    maxVisibleRowIndex: number;\n\n    getRowProps: (item: TItem, index: number) => DataRowProps<TItem, TId>;\n    getLoadingRowProps: (id: any, index?: number, path?: DataRowPathItem<TId, TItem>[]) => DataRowProps<TItem, TId>;\n\n    isLoading?: boolean;\n}\n\nexport function useBuildRows<TItem, TId, TFilter = any>({\n    tree,\n    dataSourceState,\n    getEstimatedChildrenCount,\n    getMissingRecordsCount,\n    cascadeSelection,\n    maxVisibleRowIndex,\n    getRowProps,\n    getLoadingRowProps,\n    isLoading = false,\n}: UseBuildRowsProps<TItem, TId, TFilter>) {\n    const buildRows = () => {\n        const rows: DataRowProps<TItem, TId>[] = [];\n        const pinned: Record<string, number> = {};\n        const pinnedByParentId: Record<string, number[]> = {};\n\n        const iterateNode = (\n            parentId: TId,\n            appendRows: boolean, // Will be false, if we are iterating folded nodes.\n        ): NodeStats => {\n            let currentLevelRows = 0;\n            let stats = getDefaultNodeStats();\n\n            const layerRows: DataRowProps<TItem, TId>[] = [];\n\n            const { ids, count } = tree.getItems(parentId);\n\n            for (let n = 0; n < ids.length; n++) {\n                const id = ids[n];\n                const item = tree.getById(id);\n                if (item === NOT_FOUND_RECORD) {\n                    continue;\n                }\n\n                const row = getRowProps(item, rows.length);\n                if (appendRows) {\n                    rows.push(row);\n                    layerRows.push(row);\n                    currentLevelRows++;\n                }\n\n                stats = getRowStats(row, stats, cascadeSelection);\n                row.isLastChild = n === ids.length - 1 && count === ids.length;\n                const assumedChildrenOfParent = getEstimatedChildrenCount(parentId);\n                row.indent = (!assumedChildrenOfParent && parentId !== undefined) ? 0 : row.path.length + 1;\n\n                const estimatedChildrenCount = getEstimatedChildrenCount(id);\n                if (estimatedChildrenCount !== undefined) {\n                    const { ids: childrenIds } = tree.getItems(id);\n\n                    if (estimatedChildrenCount > 0) {\n                        if (childrenIds.length > 0) {\n                        // some children are loaded\n                            const childStats = iterateNode(id, appendRows && !row.isFolded);\n                            row.isChildrenChecked = row.isChildrenChecked || childStats.isSomeChecked;\n                            row.isChildrenSelected = row.isChildrenSelected || childStats.isSomeSelected;\n                            stats = mergeStats(stats, childStats);\n                        // while searching and no children in visible tree, no need to append placeholders.\n                        } else if (!dataSourceState.search && !row.isFolded && appendRows) {\n                        // children are not loaded\n                            const parentsWithRow = [...row.path, Tree.getPathItem(item, tree)];\n                            for (let m = 0; m < estimatedChildrenCount && rows.length < maxVisibleRowIndex; m++) {\n                                const loadingRow = getLoadingRowProps('_loading_' + rows.length, rows.length, parentsWithRow);\n                                loadingRow.indent = parentsWithRow.length + 1;\n                                loadingRow.isLastChild = m === estimatedChildrenCount - 1;\n                                rows.push(loadingRow);\n                                currentLevelRows++;\n                            }\n                        }\n                    }\n                }\n\n                row.isPinned = row.pin?.(row) ?? false;\n                if (row.isPinned) {\n                    pinned[idToKey(row.id)] = row.index;\n                    if (!pinnedByParentId[idToKey(row.parentId)]) {\n                        pinnedByParentId[idToKey(row.parentId)] = [];\n                    }\n                    pinnedByParentId[idToKey(row.parentId)]?.push(row.index);\n                }\n            }\n\n            const pathToParent = Tree.getPathById(parentId, tree);\n            const parent = tree.getById(parentId);\n            const parentPathItem = parent !== NOT_FOUND_RECORD ? [Tree.getPathItem(parent, tree)] : [];\n            const path = parentId ? [...pathToParent, ...parentPathItem] : pathToParent;\n            if (appendRows) {\n                let missingCount = getMissingRecordsCount(parentId, rows.length, currentLevelRows);\n                if (missingCount > 0) {\n                    stats.hasMoreRows = true;\n                }\n                // Append loading rows, stop at maxVisibleRowIndex (maximum assumed row visible)\n                while (rows.length < maxVisibleRowIndex && missingCount > 0) {\n                    const row = getLoadingRowProps('_loading_' + rows.length, rows.length, path);\n                    rows.push(row);\n                    layerRows.push(row);\n                    currentLevelRows++;\n                    missingCount--;\n                }\n            }\n\n            const isListFlat = path.length === 0 && !layerRows.some((r) => r.isFoldable);\n            if (isListFlat) {\n                layerRows.forEach((r) => {\n                    r.indent = 0;\n                });\n            }\n\n            return stats;\n        };\n\n        const rootStats = iterateNode(undefined, true);\n\n        return {\n            rows,\n            pinned,\n            pinnedByParentId,\n            stats: rootStats,\n        };\n    };\n\n    return useMemo(() => buildRows(), [tree, dataSourceState.folded, dataSourceState.checked, isLoading, dataSourceState.foldAll]);\n}\n","import { useMemo } from 'react';\nimport { NodeStats } from './stats';\nimport { ITree } from '../tree';\n\nexport interface UseSelectAllProps<TItem, TId> {\n    tree: ITree<TItem, TId>;\n    selectAll?: boolean;\n    stats: NodeStats;\n    checked?: TId[];\n    areCheckboxesVisible: boolean;\n    handleSelectAll: (isChecked: boolean) => void;\n}\n\nexport function useSelectAll<TItem, TId>(props: UseSelectAllProps<TItem, TId>) {\n    const isSelectAllEnabled = useMemo(() => props.selectAll === undefined ? true : props.selectAll, [props.selectAll]);\n\n    const selectAll = useMemo(() => {\n        if (props.stats.isSomeCheckable && isSelectAllEnabled) {\n            return {\n                value: props.stats.isSomeCheckboxEnabled ? props.stats.isAllChecked : false,\n                onValueChange: props.handleSelectAll,\n                indeterminate: props.checked && props.checked.length > 0 && !props.stats.isAllChecked,\n            };\n        } else if (props.tree.getItems().ids.length === 0 && props.areCheckboxesVisible && isSelectAllEnabled) {\n            // Nothing loaded yet, but we guess that something is checkable. Add disabled checkbox for less flicker.\n            return {\n                value: false,\n                onValueChange: () => {},\n                isDisabled: true,\n                indeterminate: props.checked?.length > 0,\n            };\n        }\n        return null;\n    }, [\n        props.tree,\n        props.areCheckboxesVisible,\n        props.checked,\n        props.stats,\n        isSelectAllEnabled,\n        props.handleSelectAll,\n    ]);\n\n    return selectAll;\n}\n","import { useCallback } from 'react';\nimport { DataRowProps } from '../../../../types';\nimport { idToKey } from '../helpers';\n\nexport interface UsePinnedRowsProps<TItem, TId> {\n    rows: DataRowProps<TItem, TId>[];\n    pinned: Record<string, number>;\n    pinnedByParentId: Record<string, number[]>;\n}\n\nexport function usePinnedRows<TItem, TId>({\n    rows,\n    pinned,\n    pinnedByParentId,\n}: UsePinnedRowsProps<TItem, TId>) {\n    const getLastPinnedBeforeRow = useCallback((row: DataRowProps<TItem, TId>, pinnedIndexes: number[]) => {\n        const isBeforeOrEqualToRow = (pinnedRowIndex: number) => {\n            const pinnedRow = rows[pinnedRowIndex];\n            if (!pinnedRow) {\n                return false;\n            }\n            return row.index >= pinnedRow.index;\n        };\n\n        let foundRowIndex = -1;\n        for (const pinnedRowIndex of pinnedIndexes) {\n            if (isBeforeOrEqualToRow(pinnedRowIndex)) {\n                foundRowIndex = pinnedRowIndex;\n            } else if (foundRowIndex !== -1) {\n                break;\n            }\n        }\n\n        if (foundRowIndex === -1) {\n            return undefined;\n        }\n        return foundRowIndex;\n    }, [rows]);\n\n    const getLastHiddenPinnedByParent = useCallback((row: DataRowProps<TItem, TId>, alreadyAdded: TId[]) => {\n        const pinnedIndexes = pinnedByParentId[idToKey(row.parentId)];\n        if (!pinnedIndexes || !pinnedIndexes.length) {\n            return undefined;\n        }\n\n        const lastPinnedBeforeRow = getLastPinnedBeforeRow(row, pinnedIndexes);\n        if (lastPinnedBeforeRow === undefined) {\n            return undefined;\n        }\n\n        const lastHiddenPinned = rows[lastPinnedBeforeRow];\n        if (!lastHiddenPinned || alreadyAdded.includes(lastHiddenPinned.id)) {\n            return undefined;\n        }\n\n        return lastHiddenPinned;\n    }, [pinnedByParentId, rows, getLastPinnedBeforeRow]);\n\n    const withPinnedRows = useCallback((allRows: DataRowProps<TItem, TId>[]) => {\n        if (!allRows.length) return [];\n\n        const rowsWithPinned: DataRowProps<TItem, TId>[] = [];\n        const alreadyAdded = allRows.map(({ id }) => id);\n        const [firstRow] = allRows;\n        firstRow.path.forEach((item) => {\n            const pinnedIndex = pinned[idToKey(item.id)];\n            if (pinnedIndex === undefined) return;\n\n            const parent = rows[pinnedIndex];\n            if (!parent || alreadyAdded.includes(parent.id)) return;\n\n            rowsWithPinned.push(parent);\n            alreadyAdded.push(parent.id);\n        });\n\n        const lastHiddenPinned = getLastHiddenPinnedByParent(firstRow, alreadyAdded);\n        if (lastHiddenPinned) {\n            rowsWithPinned.push(lastHiddenPinned);\n        }\n\n        return rowsWithPinned.concat(allRows);\n    }, [pinned, rows, getLastHiddenPinnedByParent]);\n\n    return withPinnedRows;\n}\n","import { DataRowProps } from '../../../../types';\n\ninterface UseUpdateRowProps<TItem, TId> {\n    rows: DataRowProps<TItem, TId>[];\n    updateRowOptions: (row: DataRowProps<TItem, TId>) => DataRowProps<TItem, TId>;\n}\n\nexport function useUpdateRowOptions<TItem, TId>({\n    rows, updateRowOptions,\n}: UseUpdateRowProps<TItem, TId>) {\n    return rows.map((row) => {\n        if (!row.isLoading) {\n            return updateRowOptions(row);\n        }\n        return row;\n    });\n}\n","import { useCallback, useMemo } from 'react';\nimport { DataSourceListProps } from '../../../../types';\nimport { useCheckingService, useFoldingService, useFocusService, useSelectingService } from './services';\nimport { useDataRowProps } from './useDataRowProps';\nimport { useBuildRows } from './useBuildRows';\nimport { useSelectAll } from './useSelectAll';\nimport { usePinnedRows } from './usePinnedRows';\nimport { useUpdateRowOptions } from './useUpdateRowProps';\nimport { CommonTreeConfig, ITreeLoadingState } from '../tree/hooks/strategies/types/common';\nimport { NOT_FOUND_RECORD, ITree } from '../tree';\nimport { EMPTY, FULLY_LOADED } from '../tree/constants';\nimport { CascadeSelectionService } from './services/useCascadeSelectionService';\nimport { GetItemStatus } from '../tree/hooks/strategies/types';\nimport { isInProgress } from '../helpers';\n\n/**\n * `useDataRows` configuration.\n */\nexport interface UseDataRowsProps<TItem, TId, TFilter = any> extends\n    Omit<CommonTreeConfig<TItem, TId, TFilter>, 'patch'>,\n    ITreeLoadingState,\n    Partial<CascadeSelectionService<TItem, TId>>,\n    GetItemStatus<TId> {\n\n    /**\n     * Tree-like data, rows to be built from.\n     */\n    tree: ITree<TItem, TId>;\n}\n\n/**\n * Hook, which builds rows, based on the tree.\n * @returns rows and other IDataSourceView fields.\n */\nexport function useDataRows<TItem, TId, TFilter = any>(\n    props: UseDataRowsProps<TItem, TId, TFilter>,\n) {\n    const {\n        tree,\n        getId,\n        getParentId,\n        dataSourceState,\n\n        getRowOptions,\n        rowOptions,\n        getItemStatus,\n\n        cascadeSelection,\n        isLoading,\n        isFetching,\n        setDataSourceState,\n        isFoldedByDefault,\n        getCompleteTreeForCascadeSelection = async () => tree,\n    } = props;\n\n    const maxVisibleRowIndex = useMemo(\n        () => dataSourceState.topIndex + dataSourceState.visibleCount,\n        [tree, dataSourceState.topIndex, dataSourceState.visibleCount],\n    );\n\n    const getEstimatedChildrenCount = useCallback((id: TId) => {\n        if (id === undefined) {\n            const { count, status } = tree.getItems(id);\n            return count !== undefined && status === FULLY_LOADED ? count : undefined;\n        }\n\n        const item = tree.getById(id);\n        if (item === NOT_FOUND_RECORD) return undefined;\n\n        const nodeInfo = tree.getItems(id);\n        if ('assumedCount' in nodeInfo && nodeInfo.assumedCount === undefined) {\n            return undefined;\n        }\n\n        const { count, status } = nodeInfo;\n        if (count !== undefined && (status === FULLY_LOADED || status === EMPTY)) {\n            // nodes are already loaded, and we know the actual count\n            return count;\n        }\n\n        return nodeInfo.assumedCount;\n    }, [props, tree]);\n\n    const getMissingRecordsCount = useCallback((id: TId, totalRowsCount: number, loadedChildrenCount: number) => {\n        const { count } = tree.getItems(id);\n\n        // Estimate how many more nodes there are at current level, to put 'loading' placeholders.\n        if (count !== undefined) {\n            // Exact count known\n            return count - loadedChildrenCount;\n        }\n\n        const estimatedChildCount = getEstimatedChildrenCount(id);\n        // estimatedChildCount = undefined for top-level rows only.\n        if (id === undefined && totalRowsCount < maxVisibleRowIndex) {\n            return maxVisibleRowIndex - totalRowsCount; // let's put placeholders down to the bottom of visible list\n        }\n\n        if (estimatedChildCount > loadedChildrenCount) {\n            // According to assumedCount (put into estimatedChildCount), there are more rows on this level\n            return estimatedChildCount - loadedChildrenCount;\n        }\n\n        // We have a bad estimate - it even less that actual items we have\n        // This would happen is assumedCount provides a guess count, and we scroll thru children past this count\n        // let's guess we have at least 1 item more than loaded\n        return 1;\n    }, [maxVisibleRowIndex, tree, getEstimatedChildrenCount]);\n\n    const { handleOnCheck, isRowChecked, isRowChildrenChecked, isItemCheckable, handleSelectAll } = useCheckingService({\n        tree,\n        dataSourceState,\n        setDataSourceState,\n        cascadeSelection,\n        getParentId,\n        rowOptions,\n        getRowOptions,\n        getCompleteTreeForCascadeSelection,\n        getItemStatus,\n    });\n\n    const foldingService = useFoldingService({\n        dataSourceState, setDataSourceState, isFoldedByDefault, getId,\n    });\n\n    const focusService = useFocusService({ setDataSourceState });\n\n    const selectingService = useSelectingService({\n        tree,\n        getParentId,\n        dataSourceState,\n        setDataSourceState,\n    });\n\n    const { getRowProps, getUnknownRowProps, getLoadingRowProps, updateRowOptions } = useDataRowProps<TItem, TId, TFilter>({\n        tree,\n        getId,\n\n        dataSourceState,\n\n        rowOptions,\n        getRowOptions,\n\n        getEstimatedChildrenCount,\n\n        handleOnCheck,\n        isRowChecked,\n        isRowChildrenChecked,\n        isItemCheckable,\n\n        ...foldingService,\n        ...selectingService,\n        ...focusService,\n    });\n\n    const { rows: allRows, pinned, pinnedByParentId, stats } = useBuildRows({\n        tree,\n        dataSourceState,\n        cascadeSelection,\n        maxVisibleRowIndex,\n        getEstimatedChildrenCount,\n        getMissingRecordsCount,\n        getRowProps,\n        getLoadingRowProps,\n        isLoading,\n    });\n\n    const updatedRows = useUpdateRowOptions({ rows: allRows, updateRowOptions });\n\n    const withPinnedRows = usePinnedRows({\n        rows: updatedRows,\n        pinned,\n        pinnedByParentId,\n    });\n\n    const selectAll = useSelectAll({\n        tree,\n        checked: dataSourceState.checked,\n        selectAll: props.selectAll,\n        stats,\n        areCheckboxesVisible: rowOptions?.checkbox?.isVisible,\n        handleSelectAll,\n    });\n\n    const isItemLoaded = (item: TItem | typeof NOT_FOUND_RECORD): item is TItem => {\n        return item !== NOT_FOUND_RECORD;\n    };\n\n    const getById = (id: TId, index: number) => {\n        const itemStatus = getItemStatus?.(id);\n        const item = tree.getById(id);\n        if (!isItemLoaded(item)) {\n            if (isInProgress(itemStatus)) {\n                return getLoadingRowProps(id, index, []);\n            }\n\n            return getUnknownRowProps(id, index, []);\n        }\n\n        return getRowProps(item, index);\n    };\n\n    const listProps = useMemo((): DataSourceListProps => {\n        const itemsInfo = tree.getItems(undefined);\n        const { count, ids } = itemsInfo;\n        const isTreeLikeStructure = ids.some((id) => {\n            const info = tree.getItems(id);\n            return ('assumedCount' in info) || info.ids.length > 0;\n        });\n\n        const isFlatList = !isTreeLikeStructure;\n        const completeFlatListRowsCount = isFlatList && count != null ? count : undefined;\n        let rowsCount;\n        if (completeFlatListRowsCount !== undefined) {\n            // We have a flat list, and know exact count of items on top level. So, we can have an exact number of rows w/o iterating the whole tree.\n            rowsCount = completeFlatListRowsCount;\n        } else if (!stats.hasMoreRows) {\n            // We are at the bottom of the list. Some children might still be loading, but that's ok - we'll re-count everything after we load them.\n            rowsCount = updatedRows.length;\n        } else {\n            // We definitely have more rows to show below the last visible row.\n            // We need to add at least 1 row below, so VirtualList or other component would not detect the end of the list, and query loading more rows later.\n            // We have to balance this number.\n            // To big - would make scrollbar size to shrink when we hit bottom\n            // To small - and VirtualList will re-request rows until it will fill it's last block.\n            // So, it should be at least greater than VirtualList block size (default is 20)\n            // Probably, we'll move this const to props later if needed;\n            const rowsToAddBelowLastKnown = 20;\n\n            rowsCount = Math.max(updatedRows.length, maxVisibleRowIndex + rowsToAddBelowLastKnown);\n        }\n\n        return {\n            rowsCount,\n            knownRowsCount: updatedRows.length,\n            exactRowsCount: updatedRows.length,\n            selectAll,\n            isReloading: isFetching,\n        };\n    }, [updatedRows.length, selectAll, stats.hasMoreRows, maxVisibleRowIndex, tree, isFetching]);\n\n    const rows = useMemo(\n        () => {\n            const from = dataSourceState.topIndex;\n            const count = dataSourceState.visibleCount;\n            const visibleRowsWithPins = withPinnedRows(updatedRows.slice(from, from + count));\n            if (stats.hasMoreRows) {\n                // We don't run rebuild rows on scrolling. We rather wait for the next load to happen.\n                // So there can be a case when we haven't updated rows (to add more loading rows), and view is scrolled down\n                // We need to add more loading rows in such case.\n                const lastRow = updatedRows[updatedRows.length - 1];\n\n                while (visibleRowsWithPins.length < count && from + visibleRowsWithPins.length < listProps.rowsCount) {\n                    const index = from + visibleRowsWithPins.length;\n                    const row = getLoadingRowProps('_loading_' + index, index);\n                    row.indent = lastRow.indent;\n                    row.path = lastRow.path;\n                    row.depth = lastRow.depth;\n                    visibleRowsWithPins.push(row);\n                }\n            }\n\n            return visibleRowsWithPins;\n        },\n        [\n            tree,\n            updatedRows,\n            dataSourceState.topIndex,\n            dataSourceState.visibleCount,\n            withPinnedRows,\n            listProps,\n            getLoadingRowProps,\n        ],\n    );\n\n    const getSelectedRowsCount = () => {\n        const count = dataSourceState.checked?.length ?? 0;\n        if (!count) {\n            return (dataSourceState.selectedId !== undefined && dataSourceState.selectedId !== null) ? 1 : 0;\n        }\n\n        return count;\n    };\n\n    const clearAllChecked = useCallback(() => handleSelectAll(false), [handleSelectAll]);\n\n    return {\n        listProps,\n        rows,\n        getSelectedRowsCount,\n        getById,\n        clearAllChecked,\n\n        selectAll,\n    };\n}\n","import {\n    BaseListViewProps, DataSourceState, IDataSource, IDataSourceView, SetDataSourceState,\n} from '../../types/dataSources';\nimport { ITree } from './views';\n\nexport abstract class BaseDataSource<TItem, TId, TFilter = any> implements IDataSource<TItem, TId, TFilter> {\n    protected trees = new Map<ITree<TItem, TId>, () => void>();\n\n    constructor(public props: BaseListViewProps<TItem, TId, TFilter>) {}\n\n    abstract getById(id: TId): TItem | void;\n    abstract setItem(item: TItem): void;\n\n    abstract useView(\n        value: DataSourceState<TFilter, TId>,\n        onValueChange: SetDataSourceState<TFilter, TId>,\n        options?: Partial<BaseListViewProps<TItem, TId, TFilter>>,\n        deps?: any[],\n    ): IDataSourceView<TItem, TId, TFilter>;\n\n    public abstract setProps(newProps: BaseListViewProps<TItem, TId, TFilter>): void;\n\n    public destroy() {\n        this.trees.clear();\n    }\n\n    public getId = (item: TItem & { id?: TId }): TId => {\n        if (item == null) return null;\n\n        const id = this.props.getId?.(item) || item.id;\n\n        if (id == null) {\n            throw new Error(`Item ID not found. Check 'getId' prop value. Item: ${JSON.stringify(item)}`);\n        }\n\n        return id;\n    };\n\n    protected reload() { \n        this.trees.forEach((reload) => reload());\n    }\n}\n","import { useEffect, useMemo } from 'react';\nimport { IDataSourceView, DataSourceState, SetDataSourceState } from '../../types/dataSources';\nimport { BaseDataSource } from './BaseDataSource';\nimport { ArrayListViewProps, useCascadeSelectionService, useDataRows, ITree, useTree } from './views';\nimport { ItemsStorage } from './views/tree/ItemsStorage';\n\nexport interface ArrayDataSourceProps<TItem, TId, TFilter> extends ArrayListViewProps<TItem, TId, TFilter> {}\n\nexport class ArrayDataSource<TItem = any, TId = any, TFilter = any> extends BaseDataSource<TItem, TId, TFilter> {\n    props: ArrayDataSourceProps<TItem, TId, TFilter>;\n    tree: ITree<TItem, TId>;\n\n    itemsStorage: ItemsStorage<TItem, TId>;\n    \n    constructor(props: ArrayDataSourceProps<TItem, TId, TFilter>) {\n        super(props);\n        this.setProps(props);\n        const params = { getId: this.getId, complexIds: props.complexIds };\n        this.itemsStorage = new ItemsStorage({ items: [], params: params });\n    }\n\n    public setProps(props: ArrayDataSourceProps<TItem, TId, TFilter>) {\n        this.props = props;\n    }\n\n    public getById = (id: TId): TItem | undefined => {\n        return this.itemsStorage.getItemsMap().get(id);\n    };\n\n    protected defaultGetParentId = (item: TItem) => {\n        return (item as any)['parentId'];\n    };\n\n    setItem(item: TItem): void {\n        const id = this.getId(item);\n        const prevItem = this.getById(id);\n        if (!prevItem) {\n            this.itemsStorage.setItems([item]);\n        }\n    }\n\n    useView(\n        value: DataSourceState<TFilter, TId>,\n        onValueChange: SetDataSourceState<TFilter, TId>,\n        options?: Partial<ArrayListViewProps<TItem, TId, TFilter>>,\n        deps: any[] = [],\n    ): IDataSourceView<TItem, TId, TFilter> {\n        const { items, ...restDSProps } = this.props;\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const { tree, selectionTree, reload, totalCount, ...restProps } = useTree({\n            type: 'sync',\n            ...restDSProps,\n            ...options,\n            \n            items,\n            setItems: this.itemsStorage.setItems,\n            dataSourceState: value,\n            setDataSourceState: onValueChange,\n            // These defaults are added for compatibility reasons.\n            // We'll require getId and getParentId callbacks in other APIs, including the views.\n            getId: this.getId,\n            getParentId: options?.getParentId ?? this.props.getParentId ?? this.defaultGetParentId,\n        }, [...deps, this]);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(() => {\n            this.trees.set(tree, reload);\n            return () => { \n                this.trees.delete(tree);\n            };\n        }, [tree, reload]);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const cascadeSelectionService = useCascadeSelectionService({\n            tree: selectionTree,\n        });\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const { rows, listProps, selectAll, getById, getSelectedRowsCount, clearAllChecked } = useDataRows({\n            tree,\n            ...restProps,\n            ...cascadeSelectionService,\n        });\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        return useMemo(() => ({\n            getVisibleRows: () => rows,\n            getListProps: () => ({ ...listProps, totalCount }),\n            selectAll,\n            getConfig: () => restProps,\n            reload,\n            getById,\n            getSelectedRowsCount,\n            clearAllChecked,\n        }), [\n            rows,\n            listProps,\n            selectAll,\n            restProps,\n            totalCount,\n            reload,\n            getById,\n            getSelectedRowsCount,\n            clearAllChecked,\n        ]);\n    }\n}\n","import { ColumnsConfig, DataColumnProps } from '../types';\nimport { applyColumnsConfig, getColumnsConfig } from '../helpers';\n\nexport const useColumnsConfig = <TItem, TId>(initialColumns: DataColumnProps<TItem, TId>[], columnsConfig: ColumnsConfig) => {\n    const config = getColumnsConfig(initialColumns, columnsConfig);\n    const defaultConfig = getColumnsConfig(initialColumns, {});\n    const columns = applyColumnsConfig(initialColumns, config);\n\n    return { columns, config, defaultConfig };\n};\n","import { useEffect, useLayoutEffect } from 'react';\n\n/**\n * NextJs doesn't support useLayoutEffect, this code suppresses the warning by replacing useLayoutEffect to useEffect in SSR.\n * See also the discussion here: https://github.com/facebook/react/issues/14927#issuecomment-572720368\n */\nexport const useLayoutEffectSafeForSsr = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n","import type { ScrollToConfig, VirtualListState } from '../../types';\nimport { RowsInfo, VirtualListInfo } from './types';\n\nexport const getUpdatedRowHeights = (virtualListInfo: VirtualListInfo) => {\n    const newRowHeights = [...virtualListInfo.rowHeights];\n    const { listContainer, rowsSelector } = virtualListInfo;\n    const rows = rowsSelector\n        ? listContainer.querySelectorAll(rowsSelector)\n        : listContainer.children;\n\n    Array.from<Element>(rows).forEach((node, index) => {\n        const topIndex = virtualListInfo.value.topIndex || 0;\n        const { height } = node.getBoundingClientRect();\n        if (!height) return;\n        newRowHeights[topIndex + index] = height;\n    });\n    return newRowHeights;\n};\n\nexport const getAverageRowHeight = (rowHeights: Array<number | undefined>) => {\n    const notEmptyRowsHeights = rowHeights.filter((height) => height !== undefined);\n    if (!notEmptyRowsHeights.length) {\n        return 1;\n    }\n    const totalRowHeights = notEmptyRowsHeights.reduce((sum, next) => sum + next, 0);\n    return totalRowHeights / notEmptyRowsHeights.length;\n};\n\nexport const getUpdatedRowOffsets = (\n    { rowOffsets, rowsCount, listOffset, rowHeights, averageRowHeight }: VirtualListInfo,\n) => {\n    const newRowOffsets = [...rowOffsets];\n    for (let n = 0; n <= rowsCount; n++) {\n        newRowOffsets[n] = n === 0\n            ? listOffset\n            : newRowOffsets[n - 1] + (rowHeights[n] || averageRowHeight);\n    }\n    return newRowOffsets;\n};\n\nexport const getNewEstimatedContainerHeight = (rowOffsets: number[], rowsCount: number, listOffset: number) =>\n    rowOffsets[rowsCount] - listOffset;\n\nexport const getUpdatedRowsInfo = (\n    virtualListInfo: VirtualListInfo,\n): RowsInfo => {\n    if (!virtualListInfo.scrollContainer\n        || !virtualListInfo.listContainer\n        || virtualListInfo.listOffset == null\n        || !virtualListInfo.value\n    ) {\n        return {\n            rowHeights: virtualListInfo.rowHeights,\n            rowOffsets: virtualListInfo.rowOffsets,\n            estimatedHeight: virtualListInfo.estimatedHeight,\n        };\n    }\n    const rowHeights = getUpdatedRowHeights(virtualListInfo);\n    const averageRowHeight = getAverageRowHeight(rowHeights);\n    const rowOffsets = getUpdatedRowOffsets({ ...virtualListInfo, rowHeights, averageRowHeight });\n\n    const estimatedHeight = getNewEstimatedContainerHeight(\n        rowOffsets,\n        virtualListInfo.rowsCount,\n        virtualListInfo.listOffset,\n    );\n\n    return {\n        estimatedHeight,\n        rowHeights,\n        rowOffsets,\n        averageRowHeight,\n    };\n};\n\nconst getNewTopIndex = (info: VirtualListInfo) => {\n    const { overdrawRows, blockSize, value } = info;\n    let newTopIndex = getRealTopIndex(info);\n    newTopIndex = newTopIndex - overdrawRows;\n    newTopIndex = Math.max(0, newTopIndex);\n\n    const topIndexDiff = Math.abs(value.topIndex - newTopIndex);\n    // Number of rows to be scrolled up or down to trigger topIndex change.\n    // This tolerance is required to avoid problems when scroll position is close to blocks boundaries, and even tiny difference\n    // in row heights (e.g. 1px margin collapse) can cause endless loop of re-renderings\n    const loadingThreshold = 5;\n    if (topIndexDiff < loadingThreshold) {\n        return value.topIndex;\n    }\n\n    return Math.floor(newTopIndex / blockSize) * blockSize; // Align to blockSize\n};\n\nconst getNewBottomIndex = (info: VirtualListInfo) => {\n    const { rowsCount, overdrawRows, blockSize } = info;\n\n    let bottomIndex = getRealBottomIndex(info);\n    bottomIndex = bottomIndex + overdrawRows; // draw more rows at the bottom to remove visible blank areas while scrolling down\n    bottomIndex = Math.floor(bottomIndex / blockSize) * blockSize; // Align to block size\n    return Math.min(bottomIndex, rowsCount ?? 0); // clamp to rowsCount\n};\n\nexport const getRealTopIndex = ({ rowsCount, scrollContainer, rowOffsets }: VirtualListInfo) => {\n    let realTopIndex = 0;\n    const containerScrollTop = scrollContainer?.scrollTop ?? 0;\n    while (realTopIndex < rowsCount && rowOffsets[realTopIndex] < containerScrollTop) {\n        realTopIndex += 1;\n    }\n    return realTopIndex;\n};\n\nconst getRealBottomIndex = ({ rowsCount, scrollContainer, rowOffsets, value: { topIndex } }: VirtualListInfo) => {\n    let bottomIndex = topIndex;\n    const containerScrollTop = scrollContainer?.scrollTop ?? 0;\n    const containerScrollBottom = containerScrollTop + scrollContainer?.clientHeight ?? 0;\n    while (bottomIndex < rowsCount && rowOffsets[bottomIndex] < containerScrollBottom) {\n        bottomIndex++;\n    }\n    return bottomIndex;\n};\n\nexport const getRowsToFetchForScroll = (virtualListInfo: VirtualListInfo) => {\n    const topIndex = getNewTopIndex(virtualListInfo);\n    const bottomIndex = getNewBottomIndex({ ...virtualListInfo, value: { ...virtualListInfo.value, topIndex } });\n\n    const { value, blockSize } = virtualListInfo;\n    // We never reduce visible count intentionally - it can be set so a larger value intentionally.\n    // Also, reducing it can cause bouncing between two near values, causing unnecessary re-renders.\n    const visibleCount = Math.max(value.visibleCount ?? blockSize, bottomIndex - topIndex);\n\n    return { visibleCount, topIndex };\n};\n\nexport const getScrollToCoordinate = (\n    info: VirtualListInfo,\n    scrollTo: ScrollToConfig,\n) => {\n    const topCoordinate = getTopCoordinate(info, scrollTo);\n    const { index, align } = scrollTo;\n    if (!align || align === 'top') {\n        return topCoordinate;\n    }\n\n    const realTopIndex = getRealTopIndex(info);\n    const realBottomIndex = getRealBottomIndex({\n        ...info, value: { ...info.value, topIndex: realTopIndex },\n    });\n\n    if (index < realTopIndex) {\n        return topCoordinate;\n    }\n\n    if (index >= realBottomIndex - 1) {\n        return getTopCoordinate(info, { ...scrollTo, index: scrollTo.index + 1 }) - info.scrollContainer?.clientHeight;\n    }\n\n    return undefined;\n};\n\nexport const getTopCoordinate = (\n    { rowOffsets, listOffset, value, rowHeights }: VirtualListInfo,\n    scrollTo: ScrollToConfig,\n) => {\n    let rowCoordinate = rowOffsets[scrollTo.index];\n    if (rowCoordinate === undefined) {\n        const { topIndex = 0, visibleCount = 0 } = value;\n        const visibleRowsCount = topIndex + visibleCount;\n        const assumedRowsCount = Math.max(scrollTo.index - visibleRowsCount, 0);\n        const averageRowHeight = getAverageRowHeight(rowHeights);\n        const assumedRowsHeight = assumedRowsCount * averageRowHeight;\n        const heightOfExistingRows = rowOffsets[visibleRowsCount] ?? rowOffsets[rowOffsets.length - 1];\n        rowCoordinate = heightOfExistingRows + assumedRowsHeight;\n    }\n    return rowCoordinate - listOffset;\n};\n\nexport const assumeHeightForScrollToIndex = (value: VirtualListState, estimatedHeight: number, averageRowHeight: number) => {\n    const { topIndex = 0, visibleCount = 0, scrollTo } = value;\n    const scrollToIndex = scrollTo?.index ?? 0;\n    const skipRowsCount = Math.max(0, scrollToIndex - (topIndex + visibleCount - 1));\n    return estimatedHeight + skipRowsCount * averageRowHeight;\n};\n\nexport const getTopIndexWithOffset = (index: number, overdrawRows: number, blockSize: number) => {\n    let topIndex = index - overdrawRows; // draw more rows at the top to remove visible blank areas while scrolling up\n    topIndex = Math.floor(topIndex / blockSize) * blockSize; // Align to blockSize\n    return Math.max(0, topIndex);\n};\n\nexport const getOffsetYForIndex = (index: number | null | undefined, rowOffsets: number[], listOffset: number) => {\n    if (rowOffsets.length === 0 || index == null) return 0;\n    const offsetY = rowOffsets[index] - listOffset;\n    if (isNaN(offsetY)) {\n        return 0;\n    }\n    return offsetY;\n};\n","import * as React from 'react';\nimport type { ScrollToConfig } from '../../types';\nimport { useLayoutEffectSafeForSsr } from '../../ssr/useLayoutEffectSafeForSsr';\nimport {\n    getRowsToFetchForScroll, getUpdatedRowsInfo, assumeHeightForScrollToIndex,\n    getOffsetYForIndex, getScrollToCoordinate, getRealTopIndex, getTopIndexWithOffset,\n} from './utils';\nimport { VirtualListInfo, UseVirtualListProps, UseVirtualListApi, RowsInfo } from './types';\n\nexport function useVirtualList<List extends HTMLElement = any, ScrollContainer extends HTMLElement = any>(\n    props: UseVirtualListProps,\n): UseVirtualListApi<List, ScrollContainer> {\n    const {\n        onValueChange,\n        value,\n        rowsCount,\n        onScroll,\n        blockSize = 20,\n        overdrawRows = 20,\n        rowsSelector,\n    } = props;\n    const [estimatedHeight, setEstimatedHeight] = React.useState<number>(0);\n    const [listOffset, setListOffset] = React.useState<number>();\n    const [scrolledTo, setScrolledTo] = React.useState<ScrollToConfig>(null);\n    const listContainer = React.useRef<List>();\n    const scrollContainer = React.useRef<ScrollContainer>();\n    const rowHeights = React.useRef<number[]>([]);\n    const rowOffsets = React.useRef<number[]>([]);\n\n    const virtualListInfo = React.useMemo((): VirtualListInfo => ({\n        scrollContainer: scrollContainer.current,\n        listContainer: listContainer.current,\n        rowHeights: rowHeights.current,\n        rowOffsets: rowOffsets.current,\n        value,\n        rowsCount,\n        blockSize,\n        overdrawRows,\n        listOffset,\n        estimatedHeight,\n        rowsSelector,\n    }), [\n        scrollContainer.current,\n        listContainer.current,\n        rowHeights.current,\n        rowOffsets.current,\n        value,\n        rowsCount,\n        blockSize,\n        overdrawRows,\n        listOffset,\n        estimatedHeight,\n        rowsSelector,\n    ]);\n\n    useLayoutEffectSafeForSsr(() => {\n        if (!scrollContainer.current || !listContainer.current) return;\n        const { top: scrollContainerTop } = scrollContainer.current.getBoundingClientRect();\n        const { top: listContainerTop } = listContainer.current.getBoundingClientRect();\n        const newListOffset = listContainerTop - scrollContainerTop;\n        setListOffset(newListOffset);\n    }, [scrollContainer.current, listContainer.current]);\n\n    const getTopIndexAndVisibleCountOnScroll = React.useCallback(() => {\n        if (!virtualListInfo.scrollContainer || !virtualListInfo.value) {\n            return {\n                visibleCount: virtualListInfo.value?.visibleCount,\n                topIndex: virtualListInfo.value?.topIndex,\n            };\n        }\n\n        return getRowsToFetchForScroll(virtualListInfo);\n    }, [virtualListInfo]);\n\n    useLayoutEffectSafeForSsr(() => {\n        const rowsInfo = getUpdatedRowsInfo(virtualListInfo);\n        rowHeights.current = rowsInfo.rowHeights;\n        rowOffsets.current = rowsInfo.rowOffsets;\n        if (scrollContainer.current && value) onScroll?.(scrollContainer.current);\n        if (!scrollContainer.current || !value) return;\n\n        if (value?.scrollTo !== scrolledTo && value?.scrollTo?.index != null) {\n            handleForceScrollToIndex(rowsInfo);\n        } else {\n            handleScrollOnRerender(rowsInfo);\n        }\n    });\n\n    const handleForceScrollToIndex = (rowsInfo: RowsInfo) => {\n        const assumedHeight = assumeHeightForScrollToIndex(value, rowsInfo.estimatedHeight, rowsInfo.averageRowHeight);\n        const estimatedHeightToSet = rowsCount >= value.scrollTo.index\n            ? rowsInfo.estimatedHeight\n            : assumedHeight;\n        setEstimatedHeight(estimatedHeightToSet);\n        scrollToIndex(value.scrollTo);\n    };\n\n    const handleScrollOnRerender = (rowsInfo: RowsInfo) => {\n        const { topIndex } = value;\n        const { topIndex: newTopIndex, visibleCount } = getNewRowsOnScroll();\n\n        if (estimatedHeight !== rowsInfo.estimatedHeight) {\n            setEstimatedHeight(rowsInfo.estimatedHeight);\n        }\n        if (topIndex !== newTopIndex || visibleCount !== value.visibleCount) {\n            onValueChange({ ...value, topIndex: newTopIndex, visibleCount });\n        }\n    };\n\n    const getNewRowsOnScroll = React.useCallback(() => {\n        const { topIndex, visibleCount } = getTopIndexAndVisibleCountOnScroll();\n        if (topIndex !== value.topIndex || visibleCount > value.visibleCount) {\n            return { topIndex, visibleCount };\n        }\n\n        return value;\n    }, [getTopIndexAndVisibleCountOnScroll, onValueChange, value]);\n\n    const scrollContainerToPosition = React.useCallback(\n        (scrollTo: ScrollToConfig) => {\n            const topCoordinate = getScrollToCoordinate(virtualListInfo, scrollTo);\n            if (topCoordinate === undefined) {\n                return [true, true]; // already at the necessary position, scroll doesn't have to be performed.\n            }\n\n            if (isNaN(topCoordinate)) {\n                return [false, false];\n            }\n\n            scrollContainer.current.scrollTo({ top: topCoordinate, behavior: scrollTo.behavior });\n            const scrollPositionDiff = (+topCoordinate.toFixed(0)) - (+scrollContainer.current.scrollTop.toFixed(0));\n\n            return [\n                scrollPositionDiff <= 1 // if scroll position is equal to expected one\n                && virtualListInfo.rowHeights[scrollTo.index] !== undefined, // and required row with necessary index is present\n                true,\n            ];\n        },\n        [scrollContainer.current, rowOffsets.current, virtualListInfo],\n    );\n\n    const scrollToIndex = React.useCallback(\n        (scrollTo: ScrollToConfig) => {\n            const topIndex = getTopIndexWithOffset(scrollTo.index, overdrawRows, blockSize);\n            const { visibleCount } = getTopIndexAndVisibleCountOnScroll();\n\n            const [wasScrolled, ok] = scrollContainerToPosition(scrollTo);\n            if ((ok && !wasScrolled) || value.topIndex !== topIndex || value.visibleCount !== visibleCount) {\n                onValueChange({ ...value, topIndex, visibleCount, scrollTo });\n            }\n\n            const realTopIndex = getRealTopIndex(virtualListInfo);\n            // prevents from cycling, while force scrolling to a row, which will never appear, when using LazyListView.\n            const shouldScrollToUnknownIndex = value.topIndex === topIndex && value.scrollTo?.index > realTopIndex;\n            if ((ok && wasScrolled) || shouldScrollToUnknownIndex) {\n                if (value.scrollTo?.index === scrollTo.index) {\n                    setScrolledTo(value.scrollTo);\n                } else {\n                    onValueChange({ ...value, scrollTo });\n                    setScrolledTo(scrollTo);\n                }\n            }\n        },\n        [\n            scrollContainer.current,\n            rowOffsets.current,\n            value?.topIndex,\n            value?.scrollTo,\n            overdrawRows,\n            blockSize,\n            scrollContainerToPosition,\n            virtualListInfo,\n        ],\n    );\n\n    const offsetY = React.useMemo(\n        () => getOffsetYForIndex(value?.topIndex, rowOffsets.current, listOffset),\n        [rowOffsets.current, listOffset, value?.topIndex],\n    );\n\n    const handleScroll = React.useCallback(() => {\n        if (!scrollContainer.current && !value) return;\n        onScroll?.(scrollContainer.current);\n\n        if (value.scrollTo !== scrolledTo && value.scrollTo?.index != null) {\n            return;\n        }\n        const newValue = getNewRowsOnScroll();\n        if (value.topIndex !== newValue.topIndex || value.visibleCount !== newValue.visibleCount) {\n            onValueChange({ ...value, ...newValue });\n        }\n    }, [value, onScroll, scrolledTo, scrollContainer.current, getNewRowsOnScroll]);\n\n    return {\n        estimatedHeight,\n        offsetY,\n        listOffset,\n\n        scrollContainerRef: scrollContainer,\n        listContainerRef: listContainer,\n\n        handleScroll,\n        scrollToIndex,\n    };\n}\n","import * as React from 'react';\n\ninterface UseScrollShadowsProps {\n    root?: HTMLElement;\n}\n\ninterface UseScrollShadowsApi {\n    verticalTop: boolean;\n    verticalBottom: boolean;\n    horizontalLeft: boolean;\n    horizontalRight: boolean;\n}\n\nexport function useScrollShadows({ root }: UseScrollShadowsProps): UseScrollShadowsApi {\n    const [vertical, setVertical] = React.useState({ top: false, bottom: false });\n    const [horizontal, setHorizontal] = React.useState({ left: false, right: false });\n    const resizeObserver = React.useRef<ResizeObserver>();\n\n    function shouldHaveRightShadow(rootRight: UseScrollShadowsProps['root']) {\n        if (!rootRight) return false;\n        const { scrollLeft, clientWidth, scrollWidth } = rootRight;\n        return scrollWidth - clientWidth - scrollLeft > 1 && !horizontal.right;\n    }\n\n    function shouldNotHaveRightShadow(rootRight: UseScrollShadowsProps['root']) {\n        const { scrollLeft, clientWidth, scrollWidth } = rootRight;\n        return scrollWidth - clientWidth - scrollLeft <= 1 && horizontal.right;\n    }\n\n    function shouldHaveLeftShadow(rootLeft: UseScrollShadowsProps['root']) {\n        if (!rootLeft) return false;\n        return rootLeft.scrollLeft > 0 && !horizontal.left;\n    }\n\n    function shouldNotHaveLeftShadow(rootLeft: UseScrollShadowsProps['root']) {\n        return rootLeft.scrollLeft === 0 && horizontal.left;\n    }\n\n    function shouldHaveTopShadow(rootTop: UseScrollShadowsProps['root']) {\n        if (!rootTop) return false;\n        return rootTop.scrollTop > 0 && !vertical.top;\n    }\n\n    function shouldNotHaveTopShadow(rootTop: UseScrollShadowsProps['root']) {\n        return rootTop.scrollTop === 0 && vertical.top;\n    }\n\n    function shouldHaveBottomShadow(rootBottom: UseScrollShadowsProps['root']) {\n        if (!rootBottom) return false;\n        const { scrollHeight, scrollTop, clientHeight } = rootBottom;\n        return scrollHeight - clientHeight - scrollTop > 1 && !vertical.bottom;\n    }\n\n    function shouldNotHaveBottomShadow(rootBottom: UseScrollShadowsProps['root']) {\n        if (!rootBottom) return false;\n        const { scrollHeight, scrollTop, clientHeight } = rootBottom;\n        return scrollHeight - clientHeight - scrollTop <= 1 && vertical.bottom;\n    }\n\n    const updateScrollShadows = React.useCallback(() => {\n        if (!root) return;\n\n        // Horizontal shadow states\n        if (shouldHaveLeftShadow(root)) setHorizontal({ ...horizontal, left: true });\n        else if (shouldNotHaveLeftShadow(root)) setHorizontal({ ...horizontal, left: false });\n        else if (shouldHaveRightShadow(root)) setHorizontal({ ...horizontal, right: true });\n        else if (shouldNotHaveRightShadow(root)) setHorizontal({ ...horizontal, right: false });\n\n        // Vertical shadow states\n        if (shouldHaveTopShadow(root)) setVertical({ ...vertical, top: true });\n        else if (shouldNotHaveTopShadow(root)) setVertical({ ...vertical, top: false });\n        else if (shouldHaveBottomShadow(root)) setVertical({ ...vertical, bottom: true });\n        else if (shouldNotHaveBottomShadow(root)) setVertical({ ...vertical, bottom: false });\n    }, [\n        root, vertical, horizontal, setVertical, setHorizontal,\n    ]);\n\n    React.useEffect(() => {\n        if (!root) return;\n        root.addEventListener('scroll', updateScrollShadows);\n        return () => root.removeEventListener('scroll', updateScrollShadows);\n    }, [\n        root, horizontal, setHorizontal, vertical, setVertical,\n    ]);\n\n    React.useEffect(() => {\n        if (!root) return;\n        resizeObserver.current = new ResizeObserver((entries) => {\n            requestAnimationFrame(() => {\n                if (!Array.isArray(entries) || !entries.length) return;\n                updateScrollShadows();\n            });\n        });\n        resizeObserver.current.observe(root);\n        return () => resizeObserver.current.disconnect();\n    }, [root, resizeObserver.current]);\n\n    React.useEffect(() => {\n        if (!root) return;\n        window.addEventListener('resize', updateScrollShadows);\n        return () => window.removeEventListener('resize', updateScrollShadows);\n    }, [updateScrollShadows, root]);\n\n    return {\n        verticalTop: vertical.top || shouldHaveTopShadow(root),\n        verticalBottom: vertical.bottom || shouldHaveBottomShadow(root),\n        horizontalLeft: horizontal.right || shouldHaveRightShadow(root),\n        horizontalRight: horizontal.left || shouldHaveLeftShadow(root),\n    };\n}\n","import { useState, useCallback } from 'react';\n\nexport const useForceUpdate = () => {\n    const [, updateState] = useState<object>();\n    return useCallback(() => updateState({}), []);\n};\n","import { useEffect } from 'react';\nimport { useUuiContext, UuiError, ErrorPageInfo } from '../services';\nimport {\n    ApiCallInfo, ApiRecoveryReason,\n} from '../types';\nimport { useForceUpdate } from './useForceUpdate';\nimport { isClientSide } from '../helpers/ssr';\n\nexport type UuiRecoveryErrorInfo = {\n    title: string;\n    subtitle: string;\n};\n\nexport type ApiCallErrorType = 'permissionDenied' | 'notFound' | 'serverError' | 'serviceUnavailable' | 'default';\n\nexport interface UseUuiErrorOptions {\n    /** Config with information which data will be displayed in case of particular API error.\n     * If omitted, default config will be used.\n     * */\n    errorConfig?: Record<ApiCallErrorType, ErrorPageInfo>;\n    /** Config with information which data will be displayed in case recovery errors.\n     * If omitted, default config will be used.\n     * */\n    recoveryConfig?: Record<ApiRecoveryReason, UuiRecoveryErrorInfo>;\n}\n\nexport interface UseUuiErrorProps {\n    /** Pure function to get error info for display based on error.\n     * If omitted, error info from default config or options.errorConfig will be used.\n     */\n    getErrorInfo: (error: any, defaultErrorInfo: ErrorPageInfo) => ErrorPageInfo;\n    /** Error handling options */\n    options?: UseUuiErrorOptions;\n}\n\nexport const useUuiError = (props: UseUuiErrorProps) => {\n    const forceUpdate = useForceUpdate();\n    const {\n        uuiApi, uuiErrors, uuiRouter, uuiModals,\n    } = useUuiContext();\n    const { getErrorInfo, options: { errorConfig, recoveryConfig } = {} } = props;\n    const apiErrors: ApiCallInfo[] = [];\n    const apiNotifications: ApiCallInfo[] = [];\n\n    const onRouteChange = () => {\n        let hasError = false;\n        if (uuiApi.getActiveCalls().some((c) => c.status === 'error')) {\n            uuiApi.reset();\n            hasError = true;\n        }\n\n        if (uuiErrors.currentError !== null) {\n            uuiErrors.recover();\n            hasError = true;\n        }\n\n        hasError && forceUpdate();\n    };\n\n    useEffect(() => {\n        let routerUnsubscribe: () => void;\n        if (isClientSide) {\n            routerUnsubscribe = uuiRouter.listen(onRouteChange);\n        }\n        uuiApi.subscribe(forceUpdate);\n        uuiErrors.subscribe(forceUpdate);\n\n        return () => {\n            uuiApi.unsubscribe(forceUpdate);\n            uuiErrors.unsubscribe(forceUpdate);\n            routerUnsubscribe?.();\n        };\n    }, []);\n\n    const getDefaultErrorInfo = (errorCode: number): ErrorPageInfo => {\n        switch (errorCode) {\n            case 403:\n                return errorConfig?.permissionDenied;\n            case 404:\n                return errorConfig?.notFound;\n            case 500:\n                return errorConfig?.serverError;\n            case 503:\n                return errorConfig?.serviceUnavailable;\n            default:\n                return errorConfig?.default;\n        }\n    };\n\n    const getError = (error: any, errorInfo: ErrorPageInfo) => {\n        const resultError = getErrorInfo ? getErrorInfo(error, errorInfo) : errorInfo;\n        return { errorType: 'error', errorInfo: resultError };\n    };\n\n    uuiApi.getActiveCalls().forEach((c) => {\n        if (c.status === 'error' && c.options.errorHandling === 'page') {\n            apiErrors.push(c);\n        } else if (c.status === 'error' && c.options.errorHandling === 'notification') {\n            apiNotifications.push(c);\n        }\n    });\n\n    if (apiErrors.length) {\n        uuiModals.closeAll();\n        return getError(apiErrors[0], getDefaultErrorInfo(apiErrors[0].httpStatus));\n    } else if (apiNotifications.length) {\n        return { errorType: 'notification', errorInfo: apiNotifications };\n    } else if (uuiApi.status === 'recovery') {\n        return { errorType: 'recovery', errorInfo: recoveryConfig[uuiApi.recoveryReason] };\n    } else if (uuiErrors.currentError != null) {\n        const error = uuiErrors.currentError;\n        let status;\n        let info = {};\n\n        if (error instanceof UuiError) {\n            status = error.info.status;\n            info = error.info;\n        }\n        const defaultErrorInfo = getDefaultErrorInfo(status);\n\n        return getError(error, { ...defaultErrorInfo, ...info });\n    } else {\n        return { errorType: undefined, errorInfo: undefined };\n    }\n};\n","import isEqual from 'react-fast-compare';\nimport { DataTableState, FiltersConfig, TableFiltersConfig } from '../../types/tables';\nimport { clearEmptyValueFromRecord, getOrderBetween } from '../../helpers';\n\nexport const stateToQueryObject = (state: DataTableState, currentQuery: any) => {\n    const queryObject = {\n        ...currentQuery,\n        filter: state.filter,\n        presetId: state.presetId,\n        sorting: state.sorting,\n        viewState: state.viewState,\n        columnsConfig: state.columnsConfig,\n        page: state.page,\n        pageSize: state.pageSize,\n    };\n\n    return clearEmptyValueFromRecord(queryObject) || {};\n};\n\nexport const getValueFromUrl = (query: any) => {\n    return {\n        filter: query.filter,\n        columnsConfig: query.columnsConfig,\n        presetId: query.presetId,\n        page: query.page,\n        pageSize: query.pageSize,\n        sorting: query.sorting,\n        viewState: query.viewState,\n    };\n};\n\nexport const normalizeTableStateValue = <TFilter, TViewState>(\n    newValue: DataTableState<TFilter, TViewState>,\n    prevValue: DataTableState<TFilter, TViewState>,\n    filters: TableFiltersConfig<TFilter>[],\n) => {\n    const newFilter = clearEmptyValueFromRecord(newValue.filter);\n    const newViewState = clearEmptyValueFromRecord(newValue.viewState);\n    const filtersConfig = normalizeFilterConfig(newValue?.filtersConfig, newFilter, filters);\n\n    const newTableState = {\n        ...newValue,\n        filtersConfig: filtersConfig,\n        filter: newFilter,\n        viewState: newViewState,\n    };\n\n    // reset paging on filter change\n    if (prevValue?.page !== undefined && !isEqual(prevValue?.filter, newFilter)) {\n        newTableState.page = 1;\n    }\n    return newTableState;\n};\n\nexport const normalizeFilterConfig = <TFilter>(filtersConfig: FiltersConfig, filterValue: Record<string, any> | undefined, filters: TableFiltersConfig<TFilter>[]) => {\n    if (!filters) {\n        return undefined;\n    }\n\n    const result: FiltersConfig = {};\n    let order: string | null = null;\n    filters.forEach((filter) => {\n        if (filter.isAlwaysVisible || filterValue?.[filter.field as string] || filtersConfig?.[filter.field]) {\n            const newOrder = filtersConfig?.[filter?.field]?.order || getOrderBetween(order, null);\n            const isVisible = filtersConfig?.[filter?.field]?.isVisible;\n            result[filter.field] = {\n                isVisible: isVisible ?? true,\n                order: newOrder,\n            };\n            order = newOrder;\n        }\n    });\n    return result;\n};\n","import { useCallback, useRef, useState } from 'react';\nimport isEqual from 'react-fast-compare';\nimport {\n    ColumnsConfig, DataColumnProps, DataTableState, FiltersConfig, IEditable, ITablePreset, ITableState, TableFiltersConfig,\n} from '../../types';\nimport { getOrderBetween, orderBy } from '../../helpers';\nimport { useUuiContext } from '../../services';\nimport { stateToQueryObject, getValueFromUrl, normalizeTableStateValue, normalizeFilterConfig } from './utils';\n\ninterface UseTableStateHookBaseParams<TFilter = Record<string, any>, TViewState = any> {\n    /** Columns configuration, can be omitted if used without tables */\n    columns?: DataColumnProps[];\n    /** Filters configuration, can be omitted if you don't need filters */\n    filters?: TableFiltersConfig<TFilter>[];\n    /** Initial presets array */\n    initialPresets?: ITablePreset<TFilter, TViewState>[];\n    /** Called when preset was created. Should return the ID of new preset */\n    onPresetCreate?(preset: ITablePreset<TFilter, TViewState>): Promise<number>;\n    /** Called when preset was updated */\n    onPresetUpdate?(preset: ITablePreset<TFilter, TViewState>): Promise<void>;\n    /** Called when preset was deleted */\n    onPresetDelete?(preset: ITablePreset<TFilter, TViewState>): Promise<void>;\n}\n\ninterface UseTableStateHookImplParams<TFilter = Record<string, any>, TViewState = any> extends UseTableStateHookBaseParams<TFilter, TViewState> {\n    value: DataTableState<TFilter, TViewState>;\n    onValueChange: (update: (val: DataTableState<TFilter, TViewState>) => DataTableState<TFilter, TViewState>) => void;\n}\n\nexport const useTableStateImpl = <TFilter = Record<string, any>, TViewState = any>\n(params: UseTableStateHookImplParams<TFilter, TViewState>): ITableState<TFilter, TViewState> => {\n    const context = useUuiContext();\n    const [presets, setPresets] = useState(params?.initialPresets ?? []);\n\n    const setColumnsConfig = useCallback((columnsConfig: ColumnsConfig) => {\n        params.onValueChange((val) => ({\n            ...val,\n            columnsConfig,\n        }));\n    }, []);\n\n    const setFiltersConfig = useCallback((filtersConfig: FiltersConfig) => {\n        params.onValueChange((val) => ({\n            ...val,\n            filtersConfig,\n        }));\n    }, []);\n\n    const setFilter = useCallback((filter: TFilter) => {\n        params.onValueChange((val) => ({\n            ...val,\n            filter,\n        }));\n    }, []);\n\n    const getActivePresetId = () => {\n        const presetId = params.value?.presetId;\n        return presetId ? +presetId : undefined;\n    };\n\n    const choosePreset = useCallback((preset: ITablePreset<TFilter, TViewState>) => {\n        params.onValueChange((val) => ({\n            ...val,\n            filter: preset.filter,\n            columnsConfig: preset.columnsConfig,\n            filtersConfig: preset.filtersConfig,\n            sorting: preset.sorting,\n            presetId: preset.id,\n            viewState: preset.viewState,\n        }));\n    }, []);\n\n    const getNewPresetOrder = useCallback(() => {\n        const maxOrder = orderBy(presets, (i) => i.order, 'desc')[0]?.order;\n        return getOrderBetween(maxOrder, null);\n    }, [presets]);\n\n    const createPreset = useCallback(async (preset: ITablePreset<TFilter, TViewState>) => {\n        const newId = await params?.onPresetCreate?.(preset);\n        const newPreset = {\n            ...preset,\n            id: newId,\n        };\n\n        setPresets((prevValue) => [...prevValue, newPreset]);\n        choosePreset(newPreset);\n\n        return newId;\n    }, [params?.onPresetCreate]);\n\n    const createNewPreset = useCallback((name: string) => {\n        const currentTableStateValue = params.value;\n        const newPreset: ITablePreset<TFilter, TViewState> = {\n            id: null,\n            name: name,\n            filter: currentTableStateValue.filter,\n            columnsConfig: currentTableStateValue.columnsConfig,\n            filtersConfig: currentTableStateValue.filtersConfig,\n            sorting: currentTableStateValue.sorting,\n            viewState: currentTableStateValue.viewState,\n            isReadonly: false,\n            order: getNewPresetOrder(),\n        };\n\n        return createPreset(newPreset);\n    }, [params.value, getNewPresetOrder]);\n\n    const hasPresetChanged = useCallback((preset: ITablePreset<TFilter, TViewState>) => {\n        const currentTableStateValue = params.value;\n        return (\n            !isEqual(preset.filter, currentTableStateValue.filter)\n            || !isEqual(preset.columnsConfig, currentTableStateValue.columnsConfig)\n            || !isEqual(preset.sorting, currentTableStateValue.sorting)\n            || !isEqual(preset.viewState, currentTableStateValue.viewState)\n        );\n    }, [params.value]);\n\n    const duplicatePreset = useCallback(async (preset: ITablePreset<TFilter, TViewState>) => {\n        const newPreset: ITablePreset<TFilter, TViewState> = {\n            ...preset,\n            isReadonly: false,\n            id: null,\n            name: preset.name + '_copy',\n            order: getNewPresetOrder(),\n        };\n\n        return createPreset(newPreset);\n    }, [createPreset, getNewPresetOrder]);\n\n    const deletePreset = useCallback(\n        (preset: ITablePreset<TFilter, TViewState>) => {\n            const removePreset = () => {\n                params.onValueChange((val) => ({\n                    ...val,\n                    presetId: undefined,\n                }));\n                setPresets((prevValue) =>\n                    prevValue.filter((p) => p.id !== preset.id));\n            };\n\n            const promiseFulfilled = params?.onPresetDelete ? params.onPresetDelete(preset) : Promise.resolve();\n            return promiseFulfilled\n                .then(removePreset)\n                .catch(() => null);\n        },\n        [params?.onPresetDelete],\n    );\n\n    const updatePreset = useCallback(async (preset: ITablePreset<TFilter, TViewState>) => {\n        setPresets((prevValue) => {\n            const newPresets = [...prevValue];\n            newPresets.splice(\n                prevValue.findIndex((p) => p.id === preset.id),\n                1,\n                preset,\n            );\n            return newPresets;\n        });\n\n        params?.onPresetUpdate(preset);\n    }, [params?.onPresetUpdate]);\n\n    const getPresetLink = useCallback((preset: ITablePreset<TFilter, TViewState>) => {\n        return (\n            window.location.origin\n            + context.uuiRouter.createHref({\n                pathname: context.uuiRouter.getCurrentLink().pathname,\n                query: stateToQueryObject({ ...preset, presetId: preset.id }, context.uuiRouter.getCurrentLink().query),\n            })\n        );\n    }, []);\n\n    const setTableState = useCallback((newValue: React.SetStateAction<DataTableState<TFilter, TViewState>>) => {\n        params.onValueChange(typeof newValue === 'function' ? newValue : () => newValue);\n    }, []);\n\n    return {\n        tableState: params.value,\n        setTableState,\n        setColumnsConfig,\n        setFiltersConfig,\n        setFilter,\n        presets,\n        activePresetId: getActivePresetId(),\n        choosePreset,\n        createNewPreset,\n        hasPresetChanged,\n        duplicatePreset,\n        deletePreset,\n        updatePreset,\n        getPresetLink,\n    };\n};\n\nexport interface UseTableStateHookParams<TFilter = Record<string, any>, TViewState = any>\n    extends UseTableStateHookBaseParams<TFilter, TViewState>, Partial<IEditable<DataTableState<TFilter, TViewState>>> {}\n\nexport const useTableState = <TFilter = Record<string, any>, TViewState = any>\n(params: UseTableStateHookParams<TFilter, TViewState>): ITableState<TFilter, TViewState> => {\n    const context = useUuiContext();\n\n    const externalValue = useRef(params.value);\n\n    const [tableStateValue, setTableStateValue] = useState<DataTableState<TFilter, TViewState>>(() => {\n        const value = getValueFromUrl(context.uuiRouter.getCurrentLink().query);\n        const activePreset = params.initialPresets?.find((p: ITablePreset<TFilter, TViewState>) => p.id === value.presetId);\n        const filtersConfig = normalizeFilterConfig(activePreset?.filtersConfig, value.filter, params?.filters);\n        return {\n            ...value,\n            filtersConfig,\n            topIndex: 0,\n            visibleCount: 40,\n        };\n    });\n\n    const getTableStateValue = () => {\n        if (params?.onValueChange) {\n            return params.value;\n        }\n\n        const valueFromUrl = getValueFromUrl(context.uuiRouter.getCurrentLink().query);\n        const urlKeys = Object.keys(valueFromUrl) as Array<keyof typeof valueFromUrl>;\n        urlKeys.forEach((urlKey) => {\n            if (!isEqual(valueFromUrl[urlKey], tableStateValue[urlKey]) || !(urlKey in tableStateValue)) {\n                tableStateValue[urlKey] = valueFromUrl[urlKey];\n            }\n        });\n\n        return tableStateValue;\n    };\n\n    const setValueToUrl = (value: DataTableState<TFilter, TViewState>) => {\n        const oldQuery = context.uuiRouter.getCurrentLink().query;\n        const newQuery = stateToQueryObject(value, context.uuiRouter.getCurrentLink().query);\n\n        if (JSON.stringify(oldQuery) !== JSON.stringify(newQuery)) {\n            context.uuiRouter.redirect({\n                pathname: context.uuiRouter.getCurrentLink().pathname,\n                query: newQuery,\n            });\n        }\n    };\n    const onValueChange = useCallback((update: (val: DataTableState<TFilter, TViewState>) => DataTableState<TFilter, TViewState>) => {\n        if (params.onValueChange) {\n            const newValue = update(externalValue.current);\n            const resultValue = normalizeTableStateValue(newValue, externalValue.current, params.filters);\n            externalValue.current = resultValue;\n            params.onValueChange(resultValue);\n        } else {\n            setTableStateValue((currentValue) => {\n                const newValue = update(currentValue);\n                const resultValue = normalizeTableStateValue(newValue, currentValue, params.filters);\n                setValueToUrl(resultValue);\n\n                return resultValue;\n            });\n        }\n    }, []);\n\n    return useTableStateImpl({\n        ...params,\n        onValueChange,\n        value: getTableStateValue(),\n    });\n};\n","import { useEffect, useRef } from 'react';\nimport { LayoutLayer, useUuiContext } from '../services';\n\nexport const useLayer = () => {\n    const context = useUuiContext();\n    const layer = useRef<LayoutLayer>();\n\n    useEffect(() => {\n        layer.current = context.uuiLayout.getLayer();\n        return () => layer.current && context.uuiLayout?.releaseLayer(layer.current);\n    }, []);\n\n    return layer.current;\n};\n","import debounce from 'lodash.debounce';\nimport { useEffect, useMemo } from 'react';\n\n/**\n * Props of useResizeObserver hook.\n */\nexport interface UseResizeObserverProps {\n    /**\n     * The handler for the resizing event, called when the size of any observed elements changes.\n     */\n    onResize: ResizeObserverCallback;\n    /**\n     * Elements whose size changes should be tracked.\n     */\n    observables: Element[];\n    /**\n     * Delay (in milliseconds) before calling the onResize handler.\n     */\n    delay?: number;\n}\n\n/**\n * Hook that provides the ability to observe size changes of various elements.\n * @returns An observer that tracks size changes of the observed elements.\n */\nexport function useResizeObserver(props: UseResizeObserverProps) {\n    const onResize = useMemo(() => {\n        if (props.delay === undefined) {\n            return props.onResize;\n        }\n        return debounce(props.onResize, props.delay, { leading: false, trailing: true });\n    }, [props.delay, props.onResize]);\n\n    const resizeObserver = useMemo(() => new ResizeObserver(onResize), [onResize]);\n\n    const observables = props.observables.filter(Boolean);\n    useEffect(() => {\n        observables.forEach((observable) => resizeObserver.observe(observable));\n\n        return () => {\n            resizeObserver.disconnect();\n        };\n    }, [observables.length]);\n\n    return resizeObserver;\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { ArrayDataSource, ArrayDataSourceProps } from './ArrayDataSource';\nimport { useForceUpdate } from '../../hooks';\nimport { DataSourceState, IDataSourceView, SetDataSourceState } from '../../types';\nimport { useCascadeSelectionService, useDataRows, useTree, newMap } from './views';\nimport { ItemsStorage } from './views/tree/ItemsStorage';\nimport { AsyncListViewProps } from './views/types';\nimport { ItemsStatusCollector } from './views/tree/ItemsStatusCollector';\n\nexport interface AsyncDataSourceProps<TItem, TId, TFilter> extends AsyncListViewProps<TItem, TId, TFilter> {}\n\nexport class AsyncDataSource<TItem = any, TId = any, TFilter = any> extends ArrayDataSource<TItem, TId> {\n    api: () => Promise<TItem[]> = null;\n    itemsStatusCollector: ItemsStatusCollector<TItem, TId, TFilter>;\n\n    constructor(props: AsyncDataSourceProps<TItem, TId, TFilter>) {\n        super({\n            ...props,\n            items: [],\n        });\n        const params = { getId: this.getId, complexIds: this.props.complexIds };\n        this.api = props.api;\n        this.itemsStatusCollector = new ItemsStatusCollector(newMap(params), params);\n    }\n\n    public setProps(newProps: ArrayDataSourceProps<TItem, TId, TFilter>) {\n        const props = { ...newProps };\n        // We'll receive items=null on updates (because we inherit ArrayDataSource, but nobody would actually pass items there - they are expected to come from API)\n        // so this tweak is required to not reset items on any update\n        props.items = newProps.items || this.props.items;\n\n        super.setProps(props);\n        if (newProps.items && newProps.items !== this.props.items) {\n            this.itemsStorage.setItems(newProps.items, { reset: true });\n        }\n    }\n\n    reload() {\n        this.setProps({ ...this.props, items: [] });\n        const params = { getId: this.getId, complexIds: this.props.complexIds };\n        this.itemsStorage = new ItemsStorage({ items: [], params });\n        this.itemsStatusCollector = new ItemsStatusCollector(newMap(params), params);\n        super.reload();\n    }\n\n    useView(\n        value: DataSourceState<TFilter, TId>,\n        onValueChange: SetDataSourceState<any, TId>,\n        options?: Partial<AsyncListViewProps<TItem, TId, TFilter>>,\n        deps: any[] = [],\n    ): IDataSourceView<TItem, TId, TFilter> {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const forceUpdate = useForceUpdate();\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const [itemsMap, setItemsMap] = useState(this.itemsStorage.getItemsMap());\n        \n        const { items, ...props } = { ...this.props, ...options };\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const { tree, reload, selectionTree, totalCount, ...restProps } = useTree({\n            type: 'async',\n            api: this.api,\n            ...props,\n            itemsMap,\n            setItems: this.itemsStorage.setItems,\n            itemsStatusCollector: this.itemsStatusCollector,\n            isLoaded: this.props.items.length > 0,\n            getId: this.getId,\n            getParentId: options?.getParentId ?? this.props.getParentId ?? this.defaultGetParentId,\n            dataSourceState: value,\n            setDataSourceState: onValueChange,\n        }, [...deps, this]);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(() => {\n            const unsubscribe = this.itemsStorage.subscribe((newItemsMap) => {\n                if (itemsMap !== newItemsMap) {\n                    setItemsMap(newItemsMap);\n                }\n            });\n            \n            return () => {\n                unsubscribe();\n            };\n        }, [this.itemsStorage]);\n                \n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(() => {\n            const unsubscribe = this.itemsStatusCollector.subscribe(() => {\n                forceUpdate();\n            });\n            \n            return () => {\n                unsubscribe();\n            };\n        }, [this.itemsStatusCollector]);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(() => {\n            this.trees.set(tree, reload);\n            return () => { \n                this.trees.delete(tree);\n            };\n        }, [tree, reload]);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const cascadeSelectionService = useCascadeSelectionService({\n            tree: selectionTree,\n        });\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const { rows, listProps, selectAll, getById, getSelectedRowsCount, clearAllChecked } = useDataRows({\n            tree,\n            ...restProps,\n            ...cascadeSelectionService,\n        });\n    \n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        return useMemo(() => ({\n            getVisibleRows: () => rows,\n            getListProps: () => ({ ...listProps, totalCount }),\n            selectAll,\n            getConfig: () => restProps,\n            reload,\n            getById,\n            getSelectedRowsCount,\n            clearAllChecked,\n        }), [\n            rows,\n            listProps,\n            selectAll,\n            restProps,\n            totalCount,\n            reload,\n            getById,\n            getSelectedRowsCount,\n            clearAllChecked,\n        ]);\n    }\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useMemoWithDestructor<T>(create: () => T, update: (instance: T) => void, destroy: (value: T) => any, deps: any[]) {\n    const ref = useRef<T>();\n    const prevDeps = useRef(deps);\n\n    const isDepsChanged = prevDeps.current.length !== deps.length || prevDeps.current.some((devVal, index) => devVal !== deps[index]);\n\n    if (ref.current == null || isDepsChanged) {\n        prevDeps.current = deps;\n        ref.current = create();\n    }\n\n    update(ref.current);\n\n    const current = ref.current;\n\n    useEffect(() => {\n        // Value here is memoized in closure at the time of its creation.\n        // So we are not destroying the value we just created above.\n        return () => current && destroy(current);\n    }, deps);\n\n    return ref.current;\n}\n","import { AsyncDataSource, AsyncDataSourceProps } from '../AsyncDataSource';\nimport { useMemoWithDestructor } from '../../../helpers/useMemoWithDestructor';\n\nexport function useAsyncDataSource<TItem, TId, TFilter>(props: AsyncDataSourceProps<TItem, TId, TFilter>, deps: any[]) {\n    return useMemoWithDestructor(\n        () => new AsyncDataSource({ ...props }),\n        (dataSource) => dataSource.setProps(props as any /* due to broken inheritance of AsyncDataSource from ArrayDataSource */),\n        (dataSource) => dataSource.destroy(),\n        deps,\n    );\n}\n","import { ArrayDataSource, ArrayDataSourceProps } from '../ArrayDataSource';\nimport { useMemoWithDestructor } from '../../../helpers/useMemoWithDestructor';\n\nexport function useArrayDataSource<TItem, TId, TFilter>(props: ArrayDataSourceProps<TItem, TId, TFilter>, deps: any[]) {\n    return useMemoWithDestructor(\n        () => new ArrayDataSource({ ...props }),\n        (dataSource) => dataSource.setProps(props),\n        (dataSource) => dataSource.destroy(),\n        deps,\n    );\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { LazyListViewProps, useCascadeSelectionService, useDataRows, useTree, newMap } from './views';\nimport { useForceUpdate } from '../../hooks';\nimport { BaseDataSource } from './BaseDataSource';\nimport { DataSourceState, IDataSourceView, SetDataSourceState } from '../../types';\nimport { ItemsStorage } from './views/tree/ItemsStorage';\nimport { ItemsStatusCollector } from './views/tree/ItemsStatusCollector';\n\nexport interface LazyDataSourceProps<TItem, TId, TFilter> extends LazyListViewProps<TItem, TId, TFilter> {}\n\nexport class LazyDataSource<TItem = any, TId = any, TFilter = any> extends BaseDataSource<TItem, TId, TFilter> {\n    props: LazyDataSourceProps<TItem, TId, TFilter>;\n    itemsStorage: ItemsStorage<TItem, TId>;\n    itemsStatusCollector: ItemsStatusCollector<TItem, TId, TFilter>;\n\n    constructor(props: LazyDataSourceProps<TItem, TId, TFilter>) {\n        super(props);\n        this.props = {\n            ...props,\n            flattenSearchResults: props.flattenSearchResults ?? true,\n        };\n        const params = { getId: this.getId, complexIds: this.props.complexIds };\n        this.itemsStorage = new ItemsStorage({ items: [], params });\n        this.itemsStatusCollector = new ItemsStatusCollector(newMap(params), params);\n    }\n\n    public setProps(props: LazyDataSourceProps<TItem, TId, TFilter>) {\n        this.props = {\n            ...this.props,\n            ...props,\n            flattenSearchResults: props.flattenSearchResults ?? true,\n        };\n    }\n\n    public getById = (id: TId): TItem | void => {\n        const map = this.itemsStorage.getItemsMap();\n        return map.has(id) ? map.get(id) : null;\n    };\n\n    setItem(item: TItem) {\n        this.itemsStorage.setItems([item]);\n    }\n\n    public clearCache() {\n        const params = { getId: this.getId, complexIds: this.props.complexIds };\n        this.itemsStorage = new ItemsStorage({ items: [], params });\n        this.itemsStatusCollector = new ItemsStatusCollector(newMap(params), params);\n        super.reload();\n    }\n\n    useView<TState extends DataSourceState<any, TId>>(\n        value: TState,\n        onValueChange: SetDataSourceState<any, TId>,\n        props?: Partial<LazyListViewProps<TItem, TId, TFilter>>,\n        deps: any[] = [],\n    ): IDataSourceView<TItem, TId, TFilter> {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const forceUpdate = useForceUpdate();\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const [itemsMap, setItemsMap] = useState(this.itemsStorage.getItemsMap());\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const { tree, selectionTree, reload, totalCount, loadMissingRecordsOnCheck, ...restProps } = useTree({\n            type: 'lazy',\n            ...this.props,\n            itemsMap,\n            setItems: this.itemsStorage.setItems,\n            itemsStatusCollector: this.itemsStatusCollector,\n            dataSourceState: value,\n            setDataSourceState: onValueChange as React.Dispatch<React.SetStateAction<DataSourceState<any, TId>>>,\n            // These defaults are added for compatibility reasons.\n            // We'll require getId and getParentId callbacks in other APIs, including the views.\n            getId: this.getId,\n            ...props,\n        }, [...deps, this]);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(() => {\n            const unsubscribe = this.itemsStorage.subscribe((newItemsMap) => {\n                if (itemsMap !== newItemsMap) {\n                    setItemsMap(newItemsMap);\n                }\n            });\n\n            return () => {\n                unsubscribe();\n            };\n        }, [this.itemsStorage]);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(() => {\n            const unsubscribe = this.itemsStatusCollector.subscribe(() => {\n                forceUpdate();\n            });\n            \n            return () => {\n                unsubscribe();\n            };\n        }, [this.itemsStatusCollector]);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useEffect(() => {\n            this.trees.set(tree, reload);\n            return () => { \n                this.trees.delete(tree);\n            };\n        }, [tree, reload]);\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const cascadeSelectionService = useCascadeSelectionService({\n            tree: selectionTree,\n            loadMissingRecordsOnCheck,\n        });\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const { rows, listProps, selectAll, getById, getSelectedRowsCount, clearAllChecked } = useDataRows({\n            tree,\n            ...restProps,\n            ...cascadeSelectionService,\n        });\n\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        return useMemo(() => ({\n            getVisibleRows: () => rows,\n            getListProps: () => ({ ...listProps, totalCount }),\n            selectAll,\n            getConfig: () => restProps,\n            reload,\n            getById,\n            getSelectedRowsCount,\n            clearAllChecked,\n        }), [\n            rows,\n            listProps,\n            selectAll,\n            restProps,\n            totalCount,\n            reload,\n            getById,\n            getSelectedRowsCount,\n            clearAllChecked,\n        ]);\n    }\n}\n","import { LazyDataSource, LazyDataSourceProps } from '../LazyDataSource';\nimport { useMemoWithDestructor } from '../../../helpers/useMemoWithDestructor';\n\nexport function useLazyDataSource<TItem, TId, TFilter>(props: LazyDataSourceProps<TItem, TId, TFilter>, deps: any[]) {\n    return useMemoWithDestructor(\n        () => new LazyDataSource({ ...props }),\n        (dataSource) => dataSource.setProps(props),\n        (dataSource) => dataSource.destroy(),\n        deps,\n    );\n}\n","export const i18n = {\n    lenses: {\n        validation: {\n            isRequiredMessage: 'The field is mandatory',\n            lessThanMinimumValueMessage: (minValue: number) => `Value should not be less than ${minValue}`,\n            greaterThanMaximumValueMessage: (maxValue: number) => `Value should not be greater than ${maxValue}`,\n            greaterThanMaximumLengthMessage: (maxLength: number) => `Maximum length is ${maxLength} characters`,\n        },\n    },\n    locale: undefined as string,\n};\n","import { i18n } from '../../i18n';\nimport { Metadata } from '../../types';\nimport { ValidationState } from '../lenses';\n\nexport type ValidationMode = 'change' | 'save';\nexport const blankValidationState: ValidationState = {};\n\ntype Iterable<U> = U & { [Symbol.iterator](): IterableIterator<[string, unknown]> };\ntype IterableWithGet<U> = Iterable<U> & { get(key: string): unknown };\n\nconst isIterable = <U>(value: U): value is Iterable<U> => typeof value === 'object' && Symbol.iterator in value;\nconst shouldAccessWithGet = <U>(value: U): value is IterableWithGet<U> => typeof value === 'object' && 'get' in value;\n\nconst getValue = <U extends {}>(key: string, value: U) => {\n    if (value === null || typeof value !== 'object') {\n        return undefined;\n    }\n\n    if (shouldAccessWithGet(value)) {\n        return value.get(key);\n    }\n\n    return value[key as keyof U];\n};\n\nexport const validate = <T>(value: T, meta: Metadata<T>, initValue: T, validateOn: ValidationMode): ValidationState => {\n    const validateRec = <U>(innerValue: U, path: U[], innerMeta: Metadata<U>, innerInitValue: U): ValidationState => {\n        const itemResult: ValidationState = validateValue(innerValue, path, innerMeta);\n        const validateItem = (key: string, validationMeta: Metadata<any>) => {\n            const childValue = getValue(key, innerValue);\n            const newPath = [childValue, ...path];\n            const initChildValue = getValue(key, innerInitValue);\n            const isChildChanged = childValue !== initChildValue;\n\n            let childResult;\n            switch (validateOn) {\n                case 'change': {\n                    childResult = isChildChanged ? validateRec(childValue, newPath, validationMeta, initChildValue) : { isInvalid: false };\n                    break;\n                }\n                case 'save': {\n                    childResult = validateRec(childValue, newPath, validationMeta, initChildValue);\n                }\n            }\n\n            itemResult.isInvalid = childResult.isInvalid || itemResult.isInvalid;\n            itemResult.validationProps = itemResult.validationProps || {};\n            itemResult.validationProps[key] = childResult;\n        };\n\n        if (innerMeta.props) {\n            for (const key in innerMeta.props) {\n                const childMeta = innerMeta.props[key];\n                if (childMeta) {\n                    validateItem(key, childMeta);\n                }\n            }\n        }\n\n        if (innerMeta.all && innerValue != null) {\n            if (!Array.isArray(innerValue) && isIterable(innerValue)) {\n                for (const [key] of innerValue) {\n                    validateItem(key, innerMeta.all);\n                }\n            } else {\n                for (const key in innerValue) {\n                    validateItem(key, innerMeta.all);\n                }\n            }\n        }\n\n        return itemResult;\n    };\n    return validateRec(value, [value], meta, initValue);\n};\n\nconst validateValue = (value: any, path: any[], meta: Metadata<any>): ValidationState => {\n    if (meta.validators) {\n        const customValidationMessages = meta.validators\n            .map((validator) => validator.apply(null, path))\n            .reduce((a, b) => a.concat(b), [])\n            .filter((msg: string | null) => !!msg);\n\n        if (customValidationMessages.length > 0) {\n            return {\n                isInvalid: true,\n                validationMessage: customValidationMessages[0],\n            };\n        }\n    }\n\n    if (meta.isRequired) {\n        if (value == null || (typeof value === 'string' && value.trim() === '') || (Array.isArray(value) && value.length === 0)) {\n            return {\n                isInvalid: true,\n                validationMessage: i18n.lenses.validation.isRequiredMessage,\n            };\n        }\n    }\n\n    if (meta.minValue != null && value != null && value < meta.minValue) {\n        return {\n            isInvalid: true,\n            validationMessage: i18n.lenses.validation.lessThanMinimumValueMessage(meta.minValue),\n        };\n    }\n\n    if (meta.maxValue != null && value != null && value > meta.maxValue) {\n        return {\n            isInvalid: true,\n            validationMessage: i18n.lenses.validation.greaterThanMaximumValueMessage(meta.maxValue),\n        };\n    }\n\n    if (meta.maxLength != null && value != null && value.length > meta.maxLength) {\n        return {\n            isInvalid: true,\n            validationMessage: i18n.lenses.validation.greaterThanMaximumLengthMessage(meta.maxLength),\n        };\n    }\n\n    return {\n        isInvalid: false,\n    };\n};\n","import { ValidationState } from '../lenses';\n\nexport function validateServerErrorState<T extends any>(currentFormState: T, lastSentFormState: T, serverValidation: ValidationState) {\n    let result: ValidationState = { isInvalid: false };\n\n    if (serverValidation.validationProps) {\n        Object.keys(serverValidation.validationProps).forEach((key) => {\n            const childProps = serverValidation.validationProps[key];\n            validateItem(key, currentFormState[key as keyof typeof currentFormState], lastSentFormState[key as keyof typeof lastSentFormState], childProps, result);\n        });\n    } else {\n        result = validateValue(currentFormState, lastSentFormState, serverValidation);\n    }\n\n    return result;\n}\n\nfunction validateValue(newValue: any, oldValue: any, validationProp: ValidationState): ValidationState {\n    if (!validationProp.isInvalid) return { isInvalid: false };\n\n    return newValue === oldValue\n        ? {\n            isInvalid: true,\n            validationMessage: validationProp.validationMessage,\n        }\n        : {\n            isInvalid: false,\n        };\n}\n\nfunction validateItem(key: string, currentFormStatePart: any, lastSavedFormStatePart: any, serverValidation: ValidationState, parentResult: ValidationState) {\n    const valueResult = validateValue(currentFormStatePart, lastSavedFormStatePart, serverValidation);\n    const recursiveResult = validateServerErrorState(currentFormStatePart, lastSavedFormStatePart, serverValidation);\n\n    recursiveResult.isInvalid = recursiveResult.isInvalid || valueResult.isInvalid;\n\n    if (valueResult.validationMessage) {\n        recursiveResult.validationMessage = valueResult.validationMessage;\n    }\n\n    parentResult.validationProps = parentResult.validationProps || {};\n    parentResult.validationProps[key] = recursiveResult;\n    parentResult.isInvalid = parentResult.isInvalid || recursiveResult.isInvalid;\n}\n","import { ValidationState } from '../lenses';\n\nexport function mergeValidation(clientValidation: ValidationState, serverValidation: ValidationState) {\n    const result = serverValidation.isInvalid ? serverValidation : clientValidation;\n\n    if (clientValidation.isInvalid) mergeValidationProps(clientValidation.validationProps, result);\n\n    return result;\n}\n\nfunction mergeValidationProps(validationProps: ValidationState['validationProps'], resultPart: ValidationState) {\n    if (!validationProps) return;\n    if (!resultPart.validationProps) resultPart.validationProps = {};\n\n    Object.keys(validationProps).forEach((key) => {\n        const prop = validationProps[key];\n        const isInvalid = prop.isInvalid || resultPart.validationProps[key]?.isInvalid || false;\n        const validationMessage = prop.validationMessage ?? resultPart.validationProps[key]?.validationMessage;\n\n        resultPart.validationProps[key] = validationMessage\n            ? {\n                isInvalid,\n                validationMessage,\n            }\n            : {\n                isInvalid,\n            };\n\n        if (prop.isInvalid) {\n            mergeValidationProps(prop.validationProps, resultPart.validationProps[key]);\n        }\n    });\n}\n","import { IImmutableMap, IMap, Metadata } from '../../types';\nimport { cloneMap } from '../processing';\nimport { blankValidationState } from '../validation';\nimport { ValidationState } from './types';\n\nexport interface ILensImpl<TBig, TSmall> {\n    get(big: TBig | null): TSmall | null;\n    set(big: TBig | null, small: TSmall): TBig;\n    getValidationState?(big?: ValidationState): ValidationState | undefined;\n    getMetadata?(big?: Metadata<TBig>): Metadata<TSmall> | undefined;\n}\nexport const identityLens: ILensImpl<any, any> = {\n    get(big: any) {\n        return big;\n    },\n    set(big: any, small: any) {\n        return small;\n    },\n    getValidationState(big: ValidationState) {\n        return big;\n    },\n    getMetadata(big: Metadata<any>) {\n        return big;\n    },\n};\n\nexport function identity<A>(): ILensImpl<A, A> {\n    return identityLens;\n}\n\nfunction getMetadata<T>(big: T) {\n    const metadata: Metadata<T> = big || { all: { props: {} } };\n    const metadataProps = metadata.all;\n    const { isDisabled, isRequired, isReadonly } = metadata;\n    return {\n        ...metadataProps, isDisabled, isReadonly, isRequired,\n    } as any;\n}\n\nfunction getValidationState(big: ValidationState, field: string | number, defaultValidationStateProps: ValidationState['validationProps'] = {}) {\n    const validationStateProps = (big || blankValidationState).validationProps || defaultValidationStateProps;\n    return validationStateProps[field];\n}\n\nexport function prop<TObject, TKey extends keyof TObject>(name: TKey): ILensImpl<TObject, TObject[TKey]> {\n    return {\n        get(big) {\n            if (big == null) {\n                return undefined;\n            } else {\n                return big[name];\n            }\n        },\n        set(big: TObject, small: TObject[TKey]) {\n            const newObject = {\n                ...(big as any),\n                [name]: small,\n            };\n            return newObject;\n        },\n        getValidationState(big: ValidationState) {\n            return getValidationState(big, name as string, { [name]: { isInvalid: false } });\n        },\n        getMetadata(big: Metadata<TObject>) {\n            const metadata: Metadata<TObject> = big || { props: {} };\n            const metadataProps = metadata.props || ({} as any);\n            const { isDisabled, isRequired, isReadonly } = metadata;\n            return {\n                isDisabled, isReadonly, isRequired, ...metadataProps[name],\n            };\n        },\n    };\n}\n\nexport function key<TItem, TId>(id: TId): ILensImpl<IMap<TId, TItem> | IImmutableMap<TId, TItem>, TItem> {\n    return {\n        get(big: IMap<TId, TItem> | IImmutableMap<TId, TItem>) {\n            if (big == null) {\n                return undefined;\n            } else {\n                return big.get(id);\n            }\n        },\n        set(big: IMap<TId, TItem> | IImmutableMap<TId, TItem>, small: TItem) {\n            const newMap = cloneMap(big);\n            return newMap.set(id, small);\n        },\n        getValidationState(big: ValidationState) {\n            return getValidationState(big, id as string);\n        },\n        getMetadata(big: Metadata<IMap<TId, TItem> | IImmutableMap<TId, TItem>>) {\n            return getMetadata(big);\n        },\n    };\n}\n\nexport function index<TItem>(num: number): ILensImpl<TItem[], TItem> {\n    return {\n        get(big: TItem[]) {\n            if (big == null) {\n                return undefined;\n            } else {\n                return big[num];\n            }\n        },\n        set(big: TItem[], small: TItem) {\n            const newArray = [...big];\n            newArray[num] = small;\n            return newArray;\n        },\n        getValidationState(big: ValidationState) {\n            return getValidationState(big, num);\n        },\n        getMetadata(big: Metadata<TItem[]>) {\n            return getMetadata(big);\n        },\n    };\n}\n\nexport function defaultValue<A>(value: A): ILensImpl<A, A> {\n    return {\n        get(big: A) {\n            if (big === undefined || big === null) {\n                return value;\n            } else {\n                return big;\n            }\n        },\n        set(big: A, small: A) {\n            return small;\n        },\n        getMetadata(big: Metadata<any>) {\n            return big;\n        },\n        getValidationState(big: any) {\n            return big;\n        },\n    };\n}\n\nexport function compose<TBig, TMiddle, TSmall>(left: ILensImpl<TBig, TMiddle>, right: ILensImpl<TMiddle, TSmall>): ILensImpl<TBig, TSmall> {\n    if (left === identityLens) {\n        return right as any;\n    }\n\n    if (right === identityLens) {\n        return left as any;\n    }\n\n    return {\n        get(big: TBig) {\n            const middle = left.get(big);\n            const small = right.get(middle);\n            return small;\n        },\n        set(big: TBig, small: TSmall) {\n            let middle = left.get(big);\n            middle = right.set(middle, small);\n            return left.set(big, middle);\n        },\n        getValidationState(big?: TBig) {\n            const middle = left.getValidationState && left.getValidationState(big);\n            const small = right.getValidationState && right.getValidationState(middle);\n            return small;\n        },\n        getMetadata(big?: Metadata<TBig>) {\n            const middle = left.getMetadata && left.getMetadata(big);\n            const small = right.getMetadata && right.getMetadata(middle);\n            return small;\n        },\n    };\n}\n","import { IEditable } from '../../types';\nimport * as Impl from './lensesImpl';\nimport { ILensImpl } from './lensesImpl';\nimport { ILens, ArrayElement, IMapElement } from './types';\n\nexport class LensBuilder<TRoot = any, TFocused = any> implements ILens<TFocused> {\n    public readonly handleValueChange: (newValue: TFocused) => void = null;\n    constructor(public readonly lens: ILensImpl<TRoot, TFocused>) {\n        this.handleValueChange = (newValue: TFocused) => {\n            this.lens.set(null, newValue);\n        };\n    }\n\n    public get(): TFocused {\n        return this.lens.get(null);\n    }\n\n    public key<TId>(id: TId): LensBuilder<TRoot, IMapElement<TFocused>> {\n        return this.compose(Impl.key(id) as any, id);\n    }\n\n    public set(value: TFocused) {\n        this.lens.set(null, value);\n    }\n\n    public update(fn: (current: TFocused) => TFocused) {\n        this.lens.set(null, fn(this.lens.get(null)));\n    }\n\n    public static MAX_CACHE_SIZE = 1000;\n    private cache = new Map();\n    public compose<TSmall>(lens: ILensImpl<TFocused, TSmall>, cacheKey?: any): LensBuilder<TRoot, TSmall> {\n        if (cacheKey != null && this.cache.has(cacheKey)) {\n            return this.cache.get(cacheKey);\n        }\n\n        const result = new LensBuilder(Impl.compose(this.lens, lens));\n\n        if (cacheKey != null) {\n            this.cache.set(cacheKey, result);\n        }\n\n        if (this.cache.size > LensBuilder.MAX_CACHE_SIZE) {\n            const { value } = this.cache.keys().next();\n            this.cache.delete(value);\n        }\n\n        return result;\n    }\n\n    public prop<K extends keyof TFocused>(name: K): LensBuilder<TRoot, NonNullable<TFocused[K]>> {\n        return this.compose(Impl.prop(name), name) as any;\n    }\n\n    public index(index: number): LensBuilder<TRoot, ArrayElement<TFocused>> {\n        return this.compose(Impl.index(index) as any, index);\n    }\n\n    public onChange(fn: (oldValue: TFocused, newValue: TFocused) => TFocused): LensBuilder<TRoot, TFocused> {\n        return this.compose({\n            get: (i) => i, set: fn, getValidationState: this.lens.getValidationState, getMetadata: this.lens.getMetadata as any,\n        }, fn);\n    }\n\n    public default(value: TFocused): LensBuilder<TRoot, TFocused> {\n        return this.compose(Impl.defaultValue(value), value);\n    }\n\n    public toProps(): IEditable<TFocused> {\n        const validationState = this.lens.getValidationState && this.lens.getValidationState(null);\n        const metadata = this.lens.getMetadata && this.lens.getMetadata(null);\n        return {\n            value: this.lens.get(null),\n            onValueChange: this.handleValueChange,\n            ...validationState,\n            ...metadata,\n        };\n    }\n\n    // pick<K extends keyof TFocused>(...keys: K[]): IEditable<Pick<TFocused, K>> {\n    //     throw \"Not implemented\";\n    // }\n}\n","import { LensBuilder } from './LensBuilder';\nimport { IEditable } from '../../types';\nimport { ILens } from './types';\n\n/** @deprecated This helper to be removed in future versions, as it's intended for Class-components, and very rarely used */\nexport function onEditableComponent<T>(component: any): ILens<T> {\n    return new LensBuilder<T, T>({\n        get() {\n            return component.props.value;\n        },\n        set(big: any, small: any) {\n            component.props.onValueChange(small);\n            return small;\n        },\n        getValidationState() {\n            const { isInvalid, validationMessage, validationProps } = component.props;\n            return { isInvalid, validationMessage, validationProps };\n        },\n        getMetadata() {\n            const {\n                isReadonly, isDisabled, isRequired, props, all,\n            } = component.props;\n            return {\n                isReadonly, isDisabled, isRequired, props, all,\n            };\n        },\n    });\n}\n\nexport function onEditable<T>(editable: IEditable<T>): ILens<T> {\n    return new LensBuilder<T, T>({\n        get() {\n            return editable.value;\n        },\n        set(big: any, small: any) {\n            editable.onValueChange(small);\n            return small;\n        },\n        getValidationState() {\n            return editable;\n        },\n    });\n}\n\n/** @deprecated This helper to be removed in future versions, as it's intended for Class-components, and very rarely used */\nexport function onState<T>(component: any): ILens<T> {\n    return new LensBuilder<T, T>({\n        get() {\n            return component.state;\n        },\n        set(_, small: any) {\n            component.setState(small);\n            return small;\n        },\n    });\n}\n","import * as L from './builders';\n\nexport * from './types';\nexport const Lens = L;\n","import { useEffect, useState } from 'react';\nimport { useUuiContext } from '../../services';\nimport { Link } from '../../types';\n\nexport interface UseLockProps {\n    /** Callback which will be called on router change */\n    handleLeave?: (nextLocation: Link, currentLocation: Link) => Promise<boolean | 'remain'>;\n}\n\ntype LockStatus = 'blocked' | 'unblocked' | 'remain';\n\nexport function useLock({ handleLeave }: UseLockProps) {\n    const context = useUuiContext();\n    const [status, setStatus] = useState<LockStatus>('unblocked');\n\n    const block = () => {\n        setStatus('blocked');\n    };\n\n    const unblock = () => {\n        setStatus('unblocked');\n    };\n\n    const blockRouter = () => {\n        let unblockRouter: () => void;\n        const routerWillLeave = (nextLocation: Link) => {\n            const currentLocation = context.uuiRouter.getCurrentLink();\n\n            return handleLeave(nextLocation, currentLocation)\n                .then((res) => {\n                    unblockRouter();\n                    context.uuiRouter.redirect(nextLocation);\n                    if (res === 'remain') {\n                        setStatus('remain');\n                    }\n                })\n                .catch(() => {});\n        };\n        unblockRouter = context.uuiRouter.block((location) => {\n            routerWillLeave(location);\n        });\n        return unblockRouter;\n    };\n\n    useEffect(() => {\n        if (!handleLeave || status === 'unblocked') return;\n        if (status === 'remain') {\n            setStatus('blocked');\n            return;\n        }\n\n        const unblockRouter = blockRouter();\n\n        return () => {\n            unblockRouter?.();\n        };\n    }, [handleLeave, status]);\n\n    return {\n        block,\n        unblock,\n        isLocked: status !== 'unblocked',\n    };\n}\n","import { IMap } from '../../types';\n\ntype FieldValue = Object | Array<any> | IMap<string, any>;\n\nconst getKeys = (a: FieldValue, b: FieldValue, c: FieldValue) => {\n    if (Array.isArray(a) && Array.isArray(b) && Array.isArray(c)) {\n        return Object.keys({ ...a, ...b, ...c });\n    }\n\n    return Array.from(new Set([...getObjectOrMapKeys(a), ...getObjectOrMapKeys(b), ...getObjectOrMapKeys(c)]));\n};\n\nconst getObjectOrMapKeys = (a: Object | IMap<string, any> | any) => {\n    if (typeof a !== 'object') {\n        return [];\n    }\n\n    if (!Array.isArray(a) && Symbol.iterator in a && typeof a[Symbol.iterator] === 'function') {\n        const keys = [];\n        for (const [key] of a) {\n            keys.push(key);\n        }\n\n        return keys;\n    }\n\n    return Object.keys(a);\n};\n\nconst getValue = (a: FieldValue, key: keyof Object) => {\n    if (('get' in a && typeof a.get === 'function')) {\n        return a.get(key);\n    }\n\n    return a[key];\n};\n\n/**\n * Determines if useForm should create a new undo checkpoint.\n * c is the new change, a and b are previous checkpoints.\n * Returns false only if:\n * - a and b has exactly the same structure (types of fields recursively)\n * - scalar fields changed between b and c, are the same as between a and b.\n * In other words, it returns true only if user just edited the very same scalar field, as he did the last time\n */\nexport function shouldCreateUndoCheckpoint(a: any, b: any, c: any): boolean {\n    // The field type is changed this time.\n    // Probably is was null and became an object, or array become object.\n    // Consider this a major change (adding row, creating some object for the first time)\n    if (typeof b !== typeof c || Array.isArray(b) !== Array.isArray(c)) {\n        return true;\n    }\n\n    // The field is an object of array - need to recurse thru it\n    if (typeof c === 'object' && typeof b === 'object' && typeof c === 'object') {\n        // Ignore that a, b, or c might be an empty array or object and has different structure.\n        // If it's type changed, we already exited with 'true' on the first step\n        // If some there's a difference between keys, values, array length\n        // - we'll find this on the next level of recursion\n        a = a || {};\n        b = b || {};\n        c = c || {};\n        const keys: any[] = getKeys(a, b, c);\n        return keys.some((key) => shouldCreateUndoCheckpoint(getValue(a, key), getValue(b, key), getValue(c, key)));\n    }\n\n    // The field is scalar (null, undefined, boolean, string, number, NaN)\n    // In this case, we only need a checkpoint if it's changed for the first time.\n    // E.g.\n    // 'a' => 'ab' && 'ab' => 'abc' - false, we created checkpoint last time\n    // 'a' => 'ab' && 'ab' => 'ab' - false, this field wasn't changed this time\n    // 'a' => 'a' && 'a' => 'a'  - false, this field wasn't changed at all\n    // 'a' => 'a' && 'a' => 'ab' - true, this field is changed for the first time\n    return a === b && b !== c;\n}\n","import React, { useRef, useEffect, useMemo, useCallback } from 'react';\nimport {\n    mergeValidation,\n    validate as uuiValidate,\n    validateServerErrorState,\n} from '../../data/validation';\nimport { useForceUpdate } from '../../hooks';\nimport { UuiContexts, Link } from '../../types';\nimport { ValidationState } from '../lenses';\nimport { useUuiContext } from '../../services';\nimport { LensBuilder } from '../lenses/LensBuilder';\nimport isEqual from 'react-fast-compare';\nimport { FormProps, FormSaveResponse, IFormApi } from './Form';\nimport { useLock } from './useLock';\nimport { shouldCreateUndoCheckpoint } from './shouldCreateUndoCheckpoint';\nimport { flushSync } from 'react-dom';\n\ninterface FormState<T> {\n    form: T;\n    validationState: ValidationState;\n    serverValidationState: ValidationState;\n    lastSentForm?: T;\n    isChanged: boolean;\n    formHistory: T[];\n    historyIndex: number;\n    isInProgress: boolean;\n    isInSaveMode: boolean;\n}\n\nexport type UseFormProps<T> = Omit<FormProps<T>, 'renderForm'>;\n\nexport function useForm<T>(props: UseFormProps<T>): IFormApi<T> {\n    const context: UuiContexts = useUuiContext();\n\n    const initialForm = useRef<FormState<T>>({\n        isChanged: false,\n        isInProgress: false,\n        form: props.value,\n        validationState: { isInvalid: false },\n        serverValidationState: undefined,\n        formHistory: [props.value],\n        historyIndex: 0,\n        isInSaveMode: false,\n    });\n\n    const propsRef = useRef(props);\n    propsRef.current = props;\n\n    const getMetadata = (value: T) =>\n        propsRef.current.getMetadata ? propsRef.current.getMetadata(value) : {};\n\n    const prevFormValue = useRef<T>(props.value);\n\n    const formState = useRef(initialForm.current);\n\n    const forceUpdate = useForceUpdate();\n\n    const updateFormState = (\n        update: (current: FormState<T>) => FormState<T>,\n    ) => {\n        const newState = update(formState.current);\n        formState.current = newState;\n        forceUpdate();\n    };\n\n    const handleSave = useCallback((isSavedBeforeLeave?: boolean) => {\n        let savePromise: any;\n        updateFormState((currentState) => {\n            let newState = { ...currentState, isInSaveMode: true };\n            newState.isInSaveMode = true;\n            newState = updateValidationStates(newState);\n            if (!newState.validationState.isInvalid) {\n                newState.isInProgress = true;\n                savePromise = propsRef.current\n                    .onSave(formState.current.form)\n                    .then((response) =>\n                        handleSaveResponse(response, isSavedBeforeLeave))\n                    .catch((err) => handleError(err));\n            } else {\n                savePromise = Promise.reject();\n            }\n            return newState;\n        });\n        return savePromise;\n    }, []);\n\n    const removeUnsavedChanges = useCallback(() => {\n        context.uuiUserSettings.set(props.settingsKey, null);\n    }, [context.uuiUserSettings, props.settingsKey]);\n\n    const handleLeave = useCallback(async (nextLocation?: Link, currentLocation?: Link) => {\n        if (props.beforeLeave) {\n            const res = await props.beforeLeave(nextLocation, currentLocation);\n            if (res === true) {\n                return handleSave(true);\n            }\n            if (res === false) {\n                removeUnsavedChanges();\n                return Promise.resolve();\n            }\n            if (res === 'remain') {\n                return Promise.resolve('remain');\n            }\n        }\n        return Promise.resolve();\n    }, [\n        props.beforeLeave,\n        handleSave,\n        removeUnsavedChanges,\n    ]);\n\n    const { isLocked, block, unblock } = useLock({ handleLeave });\n\n    const getMergedValidationState = () => {\n        const {\n            form, lastSentForm, serverValidationState, validationState,\n        } = formState.current;\n        if (serverValidationState) {\n            const serverValidation = validateServerErrorState(form, lastSentForm, serverValidationState);\n            return mergeValidation(validationState, serverValidation);\n        }\n        return validationState;\n    };\n\n    const lens = useMemo(\n        () =>\n            new LensBuilder<T, T>({\n                get: () => formState.current.form,\n                set: (_, small: T) => {\n                    handleFormUpdate(() => small);\n                    return small;\n                },\n                getValidationState: getMergedValidationState,\n                getMetadata: () => getMetadata(formState.current.form),\n            }),\n        [],\n    );\n\n    useEffect(() => {\n        const unsavedChanges = getUnsavedChanges();\n        if (!unsavedChanges || !props.loadUnsavedChanges || isEqual(unsavedChanges, initialForm.current.form)) return;\n        props\n            .loadUnsavedChanges()\n            .then(() => handleFormUpdate(() => unsavedChanges))\n            .catch(() => null);\n    }, []);\n\n    useEffect(() => {\n        if (!isEqual(props.value, prevFormValue.current)) {\n            resetForm({\n                ...formState.current,\n                form: props.value,\n                formHistory: formState.current.isChanged ? formState.current.formHistory : [props.value],\n            });\n            prevFormValue.current = props.value;\n        }\n    }, [props.value]);\n\n    const getUnsavedChanges = (): T => {\n        return context.uuiUserSettings.get<T>(props.settingsKey);\n    };\n\n    const handleFormUpdate = (update: (current: T) => T, options?: { addCheckpoint?: boolean }) =>\n        updateFormState((currentState) => {\n            options = options ?? {};\n            options.addCheckpoint = options.addCheckpoint ?? true;\n\n            const newForm = update(currentState.form);\n            let { historyIndex, formHistory } = currentState;\n\n            // Determine if change is significant and we need to create new checkpoint.\n            // If false - we'll just update the latest checkpoint.\n            // We need to always create a checkpoint at the first change, to save initial form state.\n            const needCheckpoint = historyIndex === 0 || shouldCreateUndoCheckpoint(formHistory[historyIndex - 1], formHistory[historyIndex], newForm);\n\n            if (options.addCheckpoint && needCheckpoint) {\n                historyIndex++;\n            }\n            formHistory = formHistory.slice(0, historyIndex).concat(newForm);\n\n            if (options.addCheckpoint || context.uuiUserSettings.get(props.settingsKey)) {\n                context.uuiUserSettings.set(props.settingsKey, newForm);\n            }\n\n            const isChanged = !isEqual(initialForm.current.form, newForm);\n\n            if (isChanged === true) {\n                block();\n            } else {\n                unblock();\n            }\n\n            let newState = {\n                ...currentState,\n                form: newForm,\n                isChanged: isChanged,\n                historyIndex,\n                formHistory,\n            };\n\n            if (currentState.isInSaveMode || props.validationOn === 'change') {\n                newState = updateValidationStates(newState);\n            }\n\n            return newState;\n        });\n\n    const resetForm = (withNewState: FormState<T>) =>\n        updateFormState((currentState) => {\n            const newFormState = { ...currentState, ...withNewState };\n            if (newFormState !== currentState) {\n                initialForm.current = newFormState;\n                return newFormState;\n            }\n        });\n\n    const updateValidationStates = (state: FormState<T>): FormState<T> => {\n        const valueToValidate = state.form;\n        const metadata = getMetadata(valueToValidate);\n        const isInSaveMode = state.isInSaveMode;\n        const validationMode = isInSaveMode || !props.validationOn ? 'save' : props.validationOn;\n        const validationState = uuiValidate(valueToValidate, metadata, initialForm.current.form, validationMode);\n\n        const newState = { ...state, validationState };\n\n        if (!validationState.isInvalid) {\n            // When form became valid, we switch inSaveMode to false\n            newState.isInSaveMode = false;\n        }\n        return newState;\n    };\n\n    const handleError = (err?: any) => {\n        updateFormState((currentValue) => ({\n            ...currentValue,\n            isInProgress: false,\n        }));\n\n        propsRef.current.onError?.(err);\n    };\n\n    const handleSaveResponse = (response: FormSaveResponse<T> | void, isSavedBeforeLeave?: boolean) => {\n        const newFormValue = (response && response.form) || formState.current.form;\n        const newState: FormState<T> = {\n            ...formState.current,\n            historyIndex: 0,\n            formHistory: [newFormValue],\n            isChanged: response && response.validation?.isInvalid ? formState.current.isChanged : false,\n            form: newFormValue,\n            isInProgress: false,\n            serverValidationState: (response && response.validation) || formState.current.serverValidationState,\n            lastSentForm: response && response.validation?.isInvalid ? response.form || formState.current.form : formState.current.lastSentForm,\n        };\n        if (response && response.validation) {\n            flushSync(() => {\n                updateFormState(() => newState);\n            });\n            return;\n        }\n        flushSync(() => {\n            resetForm(newState);\n        });\n        removeUnsavedChanges();\n        unblock();\n\n        if (propsRef.current.onSuccess && response) {\n            propsRef.current.onSuccess(response.form, isSavedBeforeLeave);\n        }\n    };\n\n    const handleUndo = useCallback(\n        () =>\n            updateFormState((currentState) => {\n                const { formHistory, historyIndex } = currentState;\n                const previousIndex = historyIndex - 1;\n\n                if (previousIndex >= 0) {\n                    const previousItem = formHistory[previousIndex];\n                    let newState = {\n                        ...currentState,\n                        isChanged: previousIndex !== 0,\n                        form: previousItem,\n                        historyIndex: previousIndex,\n                    };\n                    if (currentState.validationState.isInvalid) {\n                        newState = updateValidationStates(newState);\n                    }\n                    return newState;\n                } else {\n                    return currentState;\n                }\n            }),\n        [],\n    );\n\n    const handleRedo = useCallback(\n        () =>\n            updateFormState((currentState) => {\n                const { formHistory, historyIndex } = currentState;\n                const nextIndex = historyIndex + 1;\n                if (nextIndex < currentState.formHistory.length) {\n                    const nextItem = formHistory[nextIndex];\n                    let newState = {\n                        ...currentState, form: nextItem, historyIndex: nextIndex, isChanged: true,\n                    };\n                    if (currentState.validationState.isInvalid) {\n                        newState = updateValidationStates(newState);\n                    }\n                    return newState;\n                } else {\n                    return currentState;\n                }\n            }),\n        [],\n    );\n\n    const validate = useCallback(() => {\n        const formSate = { ...formState.current, isInSaveMode: true };\n        const newState = updateValidationStates(formSate);\n        updateFormState(() => newState);\n\n        return newState.validationState;\n    }, []);\n\n    const handleRevert = useCallback(() => {\n        resetForm(initialForm.current);\n    }, [props.value]);\n\n    const handleValueChange = useCallback((newValue: T) => {\n        handleFormUpdate(() => newValue);\n    }, []);\n\n    const handleSetValue = useCallback((value: React.SetStateAction<T>) => {\n        handleFormUpdate((currentValue) => {\n            const newValue: T = value instanceof Function ? value(currentValue) : value;\n            return newValue;\n        });\n    }, []);\n\n    const handleReplaceValue = useCallback((value: React.SetStateAction<T>) => {\n        updateFormState((currentValue) => {\n            const newFormValue = value instanceof Function ? value(currentValue.form) : value;\n            return {\n                ...currentValue,\n                form: newFormValue,\n            };\n        });\n    }, []);\n\n    const saveCallback = useCallback(() => {\n        handleSave().catch(() => {});\n    }, [handleSave]);\n\n    const handleClose = useCallback(() => {\n        return isLocked ? handleLeave() : Promise.resolve();\n    }, [isLocked]);\n\n    const setServerValidationState = useCallback((value: React.SetStateAction<ValidationState>) => {\n        updateFormState((currentValue) => {\n            const newValue = value instanceof Function ? value(currentValue.serverValidationState) : value;\n            return {\n                ...currentValue,\n                serverValidationState: newValue,\n            };\n        });\n    }, []);\n\n    const mergedValidationState = getMergedValidationState();\n\n    return {\n        setValue: handleSetValue,\n        replaceValue: handleReplaceValue,\n        isChanged: formState.current.isChanged,\n        close: handleClose,\n        lens,\n        save: saveCallback,\n        undo: handleUndo,\n        redo: handleRedo,\n        revert: handleRevert,\n        validate,\n        canUndo: formState.current.historyIndex > 0,\n        canRedo: formState.current.historyIndex < formState.current.formHistory.length - 1,\n        canRevert: formState.current.form !== props.value,\n        value: formState.current.form,\n        onValueChange: handleValueChange,\n        isInvalid: mergedValidationState.isInvalid,\n        validationMessage: mergedValidationState.validationMessage,\n        validationProps: mergedValidationState.validationProps,\n        serverValidationState: formState.current.serverValidationState,\n        setServerValidationState,\n        isInProgress: formState.current.isInProgress,\n    };\n}\n","import React, { ReactNode } from 'react';\nimport { useForm } from './useForm';\nimport { IEditable } from '../../types/props';\nimport { Metadata } from '../../types/validation';\nimport { ILens, ValidationState } from '../../data/lenses';\nimport { ValidationMode } from '../../data/validation';\nimport { Link } from '../../types';\n\nexport interface FormSaveResponse<T> {\n    /** New form value, which will replace previous one */\n    form?: T;\n    /** Server-side validation state. It's applied in priority over client validation. */\n    validation?: ValidationState;\n}\n\nexport interface FormProps<T> {\n    /** Current value of the form state */\n    value: T;\n\n    /**\n     * Render the form body, provided by form state\n     * */\n    renderForm: (props: IFormApi<T>) => ReactNode;\n\n    /**\n     * Returns form metadata - information used to validate the form.\n     * @param state Metadata can depend on state, and will be re-computed on updates\n     */\n    getMetadata?(state: T): Metadata<T>;\n\n    /**\n     * Occurs when 'save' function is called on Form.\n     * Should save form data (usually with API call to server).\n     * Server can also reject form, and provide validation errors in response.\n     * @param state Form state to save\n     */\n    onSave(state: T): Promise<FormSaveResponse<T> | void>;\n\n    /**\n     * Called when form is unmounted, but user still have unsaved changes.\n     * Accepts a Promise<boolean | 'remain'> to be returned.\n     * If promise resolves to true - save procedure is performed.\n     * If promise resolves to false - localStorage will be cleaned.\n     * If promise resolves to 'remain' - localStorage remain as was and changes in form not saves.\n     * The common use-case is to show a modal with \"Save Changes?\" dialog\n     * Skins usually implement this as default behavior. To prevent it, you can pass null to this prop to override it.\n     */\n    beforeLeave?: ((nextLocation: Link, currentLocation: Link) => Promise<boolean | 'remain'>) | null;\n\n    /**\n     * Used to restore unsaved user edits from the last session (usually to localstorage, via uuiUserSettings context)\n     * If unsaved changes are detected, this callback is called. If it is resolved - the form restores unsaved edits.\n     * The common use-case is to show a modal with \"You have unsaved changes, restore them?\" dialog\n     * Skins usually implement this as default behavior. To prevent it, you can pass null to this prop to override it.\n     */\n    loadUnsavedChanges?: () => Promise<void>;\n\n    /**\n     * Called after successful save.\n     * @param state Saved state\n     * @param isSavedBeforeLeave true, if save is triggered via leaving the page, and \"Save Changes?\" dialog\n     */\n    onSuccess?(state: T, isSavedBeforeLeave?: boolean): any;\n\n    /** Called when save fails */\n    onError?(error: any): any;\n\n    /**\n     * The key, under which form save unsaved state usually to localstorage, via uuiUserSettings context)\n     */\n    settingsKey?: string;\n\n    /**\n     * Controls when form validation occurs:\n     * save (default, recommended) - form is validated on save. If form is invalid - it will be revalidated on every change, until become valid\n     * change - form is validated on every user change. Only fields changes in current edit session are validated\n     */\n    validationOn?: ValidationMode;\n}\n\nexport interface IFormApi<T> extends IEditable<T>, ValidationState {\n    /**\n     * Lens - a helper to split parts of the form state, validation, and setState callbacks, and pass this to components\n     */\n    lens: ILens<T>;\n\n    /**\n     * Sets form value. The signature is the same for setState in React.useState - either new value, or callback to update the value.\n     * The change is threated as user input - sets isChanged and creates undo endpoint\n     */\n    setValue: (s: React.SetStateAction<T>) => void;\n\n    /**\n     * Replaces form value. The signature is the same for setState in React.useState - either new value, or callback to update the value.\n     * The change is not threated as user input - it replaces last changed state, and doesn't create undo checkpoint.\n     */\n    replaceValue: (s: React.SetStateAction<T>) => void;\n\n    /**\n     * Triggers save procedure - validation, calling props.onSave, and processing results\n     */\n    save(): void;\n\n    /**\n     * Undo to last checkpoint\n     */\n    undo(): void;\n\n    /**\n     * Redo last action\n     */\n    redo(): void;\n\n    /**\n     * Reverts all changes up to the initial or last saved state\n     */\n    revert(): void;\n\n    /**\n     * Try to leave form and ask to save unsaved changes\n     */\n    close(): Promise<any>;\n\n    /**\n     * Forces form to validate value.\n     * Validation is usually done automatically, according to validationOn prop.\n     * Use this method only in corner cases.\n     */\n    validate(): ValidationState;\n\n    /** True if there are changes to undo */\n    canUndo: boolean;\n\n    /** True if there are changes to redo */\n    canRedo: boolean;\n\n    /** True if there are changes to revers */\n    canRevert: boolean;\n\n    /** True if form is changed since the initial state, or the last save */\n    isChanged: boolean;\n\n    /** True if save is in progress */\n    isInProgress: boolean;\n\n    /** Validation state which was returned from `onSave` callback  */\n    serverValidationState: ValidationState;\n\n    /** Sets new server validation state from client side */\n    setServerValidationState: (s: React.SetStateAction<ValidationState>) => void\n}\n\nexport function Form<T>({ renderForm, ...props }: FormProps<T>) {\n    const useFormProps = useForm<T>(props);\n    return <>{renderForm(useFormProps)}</>;\n}\n","import { useMemo } from 'react';\nimport { NextRouterAdapter } from '../services';\nimport { useUuiServices, UseUuiServicesProps } from '../hooks/useUuiServices';\n\nexport interface IContextProviderSsrProps<TApi, TAppContext>\n    extends UseUuiServicesProps<TApi, TAppContext> {\n    router: any;\n}\n\n/**\n * This hook creates UUI context compatible with Next.js pages router\n *\n * @example\n * const { services } = useUuiServicesSsr({ ... });\n * <UuiContext.Provider value={ services }> ... </UuiContext.Provider>\n * // And then, use it in code like this:\n * const services = useUuiContext<TApi, AppContextType>();\n *\n * @param props\n */\nexport function useUuiServicesSsr<TApi, TAppContext>(\n    props: IContextProviderSsrProps<TApi, TAppContext>,\n) {\n    const { router, ...restProps } = props;\n    const nextRouterWithAdapter = useMemo(() => new NextRouterAdapter(router), [router]);\n    const { services } = useUuiServices<TApi, TAppContext>({\n        ...restProps,\n        router: nextRouterWithAdapter,\n    });\n    return { services };\n}\n","import { useEffect, useMemo } from 'react';\nimport {\n    NextAppRouterAdapter, ReadonlySearchParams, TNextAppRouter,\n} from '../services/routing/NextAppRouterAdapter';\n\n/**\n * Creates app router adapter instance for Nextjs\n */\nexport const useNextAppRouter = ({\n    router,\n    pathname,\n    searchParams,\n}: {\n    router: TNextAppRouter;\n    pathname: string;\n    searchParams: ReadonlySearchParams;\n}) => {\n    const appRouterAdapter = useMemo(\n        () => new NextAppRouterAdapter(router),\n        [router],\n    );\n\n    // avoid re-creation router adapter by updating router related stuff here\n    useEffect(() => {\n        appRouterAdapter.updateURLParams(pathname, searchParams);\n    }, [appRouterAdapter, searchParams, pathname]);\n\n    return appRouterAdapter;\n};\n"],"names":["React","classNames","ReactDOM","createContext","TREE_SHAKEABLE_INIT","createHref","parseQuery","idCounter","useState","useEffect","useContext","useRef","useMemo","debounce","useCallback","PropTypes","dayjs","isSameOrBefore","isSameOrAfter","isEqual","useLoadData","idToKey","useLayoutEffect","getValue","validateValue","Impl.key","Impl.compose","Impl.prop","index","Impl.index","Impl.defaultValue","uuiValidate","flushSync","validate"],"mappings":"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","x_google_ignoreList":[15]}